{"version":3,"file":"static/js/6028.f9dd5a53.chunk.js","mappings":"gMAMO,MAAMA,EAAqBC,IAK3B,IAL4B,OACjCC,EAAM,QACNC,EAAO,SACPC,EAAQ,aACRC,GACDJ,EACC,MAMOK,EAASC,IAAcC,EAAAA,EAAAA,WAAS,IAChCC,EAAQC,IAAaF,EAAAA,EAAAA,UAAS,OAC9BG,EAAYC,IAAiBJ,EAAAA,EAAAA,UAAS,KACtCK,EAAYC,IAAiBN,EAAAA,EAAAA,UAAS,OACtCO,EAAgBC,IAAqBR,EAAAA,EAAAA,UAAS,OAC9CS,EAAUC,IAAeV,EAAAA,EAAAA,UAAS,KAClCW,EAAWC,IAAgBZ,EAAAA,EAAAA,UAAS,KACpCa,EAAiBC,IAAsBd,EAAAA,EAAAA,UAAS,QAChDe,EAAOC,IAAYhB,EAAAA,EAAAA,UAAS,KAC5BiB,EAAYC,IAAiBlB,EAAAA,EAAAA,UAAS,KACtCmB,EAASC,IAAcpB,EAAAA,EAAAA,WAAS,IACjC,EAAEqB,IAAMC,EAAAA,EAAAA,MACRC,GAAeC,EAAAA,EAAAA,QAAO,OAE5BC,EAAAA,EAAAA,YAAU,KACW,oBAAftB,GACFK,EAAkB,OAClBF,EAAc,QAEdE,EAAkB,KACpB,GACC,CAACL,KAEJsB,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAgBC,aAAaC,QAAQ,aAAe,KAEtDC,EAAAA,EAAKC,WAAaJ,GACpBG,EAAAA,EAAKE,eAAeL,EACtB,GACC,CAACG,EAAAA,EAAMR,IAEV,MAgCOW,EAAYC,IAAiBjC,EAAAA,EAAAA,WAAS,GA2E7C,OAAKN,GAEHwC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAvC,UACEsC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,gBAAgBC,QAnJPC,IAEtBA,EAAEC,OAAOC,UAAUC,SAAS,kBAC9B9C,GACF,EA+I6DC,UACzD8C,EAAAA,EAAAA,MAAA,OAAKN,UAAU,yBAAwBxC,SAAA,EACrCsC,EAAAA,EAAAA,KAAA,UAAQE,UAAU,eAAeC,QAAS1C,EAAQC,SAAC,WAGnD8C,EAAAA,EAAAA,MAAA,OAAKN,UAAU,wCAAuCxC,SAAA,EACpDsC,EAAAA,EAAAA,KAAA,MAAAtC,SAAKyB,EAAE,mBACPa,EAAAA,EAAAA,KAAA,QACES,OAAO,qBACPC,OAAO,OACPC,SAtFSC,UAEnB,GADAR,EAAES,kBACG9C,EAEH,YADA+C,MAAM,mCAIR,MAAMC,EAAiBtB,aAAaC,QAAQ,aACtCsB,EAAYD,EAAiBE,KAAKC,MAAMH,GAAkB,KAC1DI,EAAW,IAAIC,SAYrB,GAVArD,EAAOsD,SAASC,IACdH,EAASI,OAAO,SAAUD,EAAK,IAEjCH,EAASI,OAAO,aAActD,GAC9BkD,EAASI,OAAO,aAAcpD,GAC9BgD,EAASI,OAAO,YAAa9C,GAC7B0C,EAASI,OAAO,WAAYhD,GAC5B4C,EAASI,OAAO,kBAAmB5C,GACnCwC,EAASI,OAAO,UAAWP,EAAUQ,IACrCL,EAASI,OAAO,WAAY,IACJ,OAApB5C,EAAJ,CAIEoB,GAAc,GAEhBlC,GAAW,GACXqB,GAAW,GACX,IAOE,IAAIuC,SANcC,EAAAA,EAAMC,KAAKC,4DAA6BT,EAAU,CAClEU,QAAS,CACPC,OAAQ,mBACR,eAAgB,0BAGJC,KAChB7C,GAAW,GACXF,EAAcyC,EAAMO,SACpBC,YAAW,KACTC,OAAOC,SAASC,SAChBvE,GAAW,GACXmB,EAAc,IACdrB,IACAO,EAAc,IACdQ,EAAa,IACbF,EAAY,IACZJ,EAAc,MACdQ,EAAmB,OACnBZ,EAAU,KAAK,GACd,KACL,CAAE,MAAOqE,GAEHA,EAAIC,WACGD,EAAIE,QACbC,QAAQ3D,MAAM,gBAAiBwD,EAAIE,SAEnCC,QAAQ3D,MAAM,iBAAkBwD,EAAIL,SAExC,CAjCA,MAJEjC,GAAc,EAqChB,EA2BiCrC,UAEvB8C,EAAAA,EAAAA,MAAA,OAAKN,UAAU,2BAA0BxC,SAAA,EACvCsC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,YAAWxC,UACxB8C,EAAAA,EAAAA,MAAA,OAAKN,UAAU,wBAAuBxC,SAAA,EACpCsC,EAAAA,EAAAA,KAAA,KAAGE,UAAU,OAAMxC,SAAEyB,EAAE,sBACvBa,EAAAA,EAAAA,KAAA,SACEyC,KAAK,OACLC,KAAK,OACLC,UAAQ,EACRC,UAAQ,EACRC,SAnIMzC,IACxB,MAAM0C,EAAgB1C,EAAEC,OAAO0C,MAG/B,IAAIC,EAAa,GACbC,EAAY,GAGZH,EAAcI,OALG,GAMnBD,EAAY,6CAEZE,MAAMC,KAAKN,GAAezB,SAASC,IACjC,MAAM+B,EAAW/B,EAAKmB,KAGjBY,EAASC,WAAW,WAAcD,EAASC,WAAW,UAEhDhC,EAAKiC,KAfA,SAgBdN,EAAY,SAAS3B,EAAKoB,iCAE1BM,EAAWQ,KAAKlC,GAJhB2B,EAAY,SAAS3B,EAAKoB,iCAK5B,IAIAO,EACFnE,EAASmE,IAETnE,EAAS,IACTd,EAAUgF,GACZ,EAsGkB9C,UAAU,WACVuD,IAAKpE,IAENR,IAASmB,EAAAA,EAAAA,KAAA,KAAG0D,MAAO,CAAEC,MAAO,OAAQjG,SAAEmB,KACvCmB,EAAAA,EAAAA,KAAA,OAAKE,UAAU,SAASwD,MAAO,CAAEE,OAAQ,QAASlG,UAChD8C,EAAAA,EAAAA,MAAA,OAAKN,UAAU,kCAAiCxC,SAAA,CAClC,OAAXK,IACCiC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAvC,SACGK,EAAO8F,KAAI,CAACvC,EAAMwC,KACjBtD,EAAAA,EAAAA,MAAA,OAAKN,UAAU,cAAaxC,SAAA,EAC1BsC,EAAAA,EAAAA,KAAA,UACEyC,KAAK,SACLtC,QAASA,IAjDrB2D,KAClB9F,GAAW+F,IACT,MAAMC,EAAgBD,EAAKE,QAAO,CAACC,EAAGC,IAAMA,IAAML,IAKlD,OAH6B,IAAzBE,EAAcd,QAAgB7D,EAAa+E,UAC7C/E,EAAa+E,QAAQC,MAAQ,IAExBL,CAAa,GACpB,EAyC2CM,CAAWR,GAAOpG,SAClC,OAGDsC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,cAAaxC,SACzB4D,EAAKmB,KAAKa,WAAW,WACpBtD,EAAAA,EAAAA,KAAA,OACEuE,IAAKC,IAAIC,gBAAgBnD,GACzBoD,IAAKpD,EAAKoB,QAGZ1C,EAAAA,EAAAA,KAAA,SAAO2E,MAAM,MAAMf,OAAO,MAAMgB,UAAQ,EAAAlH,UACtCsC,EAAAA,EAAAA,KAAA,UACEuE,IAAKC,IAAIC,gBAAgBnD,GACzBmB,KAAMnB,EAAKmB,aAjBaqB,QA2BxCtD,EAAAA,EAAAA,MAAA,OAAKN,UAAU,kCAAiCxC,SAAA,EAC9CsC,EAAAA,EAAAA,KAAC6E,EAAAA,IAAa,CAACnB,MAAO,CAAEoB,SAAU,WAClCtE,EAAAA,EAAAA,MAAA,MAAIN,UAAU,MAAMwD,MAAO,CAAEoB,SAAU,QAASpH,SAAA,CAC7CyB,EAAE,gBAAgB,IAAEA,EAAE,2BAQnCa,EAAAA,EAAAA,KAAA,OAAKE,UAAU,SAAQxC,UACrB8C,EAAAA,EAAAA,MAAA,OAAKN,UAAU,2BAA0BxC,SAAA,EACvCsC,EAAAA,EAAAA,KAAA,KAAAtC,SAAIyB,EAAE,kBACNqB,EAAAA,EAAAA,MAAA,OAAKN,UAAU,kCAAiCxC,SAAA,EAC9CsC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,OAAMxC,UACnB8C,EAAAA,EAAAA,MAAA,OACEuE,MAAM,6BACNJ,MAAM,KACNf,OAAO,KACPoB,QAAQ,YACRC,KAAK,OACLC,OAAO,eACP,eAAa,IACb,iBAAe,QACf,kBAAgB,QAChBC,MAAM,yDAAwDzH,SAAA,EAE9DsC,EAAAA,EAAAA,KAAA,QAAMkF,OAAO,OAAOE,EAAE,gBAAgBH,KAAK,UAC3CjF,EAAAA,EAAAA,KAAA,QAAMoF,EAAE,oFACRpF,EAAAA,EAAAA,KAAA,QAAMoF,EAAE,yCACRpF,EAAAA,EAAAA,KAAA,QAAMoF,EAAE,mCAGZ5E,EAAAA,EAAAA,MAAA,UACE6D,MAAOpG,EACP4E,SAAWzC,GAAMlC,EAAckC,EAAEC,OAAOgE,OACxCnE,UAAU,GACVyC,UAAQ,EACRD,KAAK,aAAYhF,SAAA,EAEjB8C,EAAAA,EAAAA,MAAA,UAAQ6D,MAAM,GAAE3G,SAAA,CAAC,KAAGyB,EAAE,UAAU,SAChCa,EAAAA,EAAAA,KAAA,UAAQqE,MAAM,iBAAgB3G,SAAEyB,EAAE,UAClCa,EAAAA,EAAAA,KAAA,UAAQqE,MAAM,kBAAiB3G,SAC5ByB,EAAE,sBAELa,EAAAA,EAAAA,KAAA,UAAQqE,MAAM,kBAAiB3G,SAC5ByB,EAAE,gCAMO,QAAnBd,IACC2B,EAAAA,EAAAA,KAAA,OAAKE,UAAU,SAAQxC,UACrB8C,EAAAA,EAAAA,MAAA,OAAKN,UAAU,2BAA0BxC,SAAA,EACvCsC,EAAAA,EAAAA,KAAA,KAAAtC,SAAG,cACH8C,EAAAA,EAAAA,MAAA,OAAKN,UAAU,kCAAiCxC,SAAA,EAC9CsC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,OAAMxC,UACnB8C,EAAAA,EAAAA,MAAA,OACEuE,MAAM,6BACNJ,MAAM,KACNf,OAAO,KACPoB,QAAQ,YACRC,KAAK,OACLC,OAAO,eACP,eAAa,IACb,iBAAe,QACf,kBAAgB,QAChBC,MAAM,yDAAwDzH,SAAA,EAE9DsC,EAAAA,EAAAA,KAAA,QAAMkF,OAAO,OAAOE,EAAE,gBAAgBH,KAAK,UAC3CjF,EAAAA,EAAAA,KAAA,QAAMoF,EAAE,oFACRpF,EAAAA,EAAAA,KAAA,QAAMoF,EAAE,yCACRpF,EAAAA,EAAAA,KAAA,QAAMoF,EAAE,mCAGZpF,EAAAA,EAAAA,KAAA,SACEyC,KAAK,WACLC,KAAK,WACL2C,YAAY,mCACZhB,MAAO9F,EACPsE,SAAWzC,GAAM5B,EAAY4B,EAAEC,OAAOgE,kBAMhDrE,EAAAA,EAAAA,KAAA,OAAKE,UAAU,SAAQxC,UACrB8C,EAAAA,EAAAA,MAAA,OAAKN,UAAU,2BAA0BxC,SAAA,EACvC8C,EAAAA,EAAAA,MAAA,KAAA9C,SAAA,CAAG,IAAEyB,EAAE,eACPqB,EAAAA,EAAAA,MAAA,OAAKN,UAAU,kCAAiCxC,SAAA,EAC9CsC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,OAAMxC,UACnB8C,EAAAA,EAAAA,MAAA,OACEuE,MAAM,6BACNJ,MAAM,KACNf,OAAO,KACPoB,QAAQ,YACRC,KAAK,OACLC,OAAO,eACP,eAAa,IACb,iBAAe,QACf,kBAAgB,QAChBC,MAAM,kEAAiEzH,SAAA,EAEvEsC,EAAAA,EAAAA,KAAA,QAAMkF,OAAO,OAAOE,EAAE,gBAAgBH,KAAK,UAC3CjF,EAAAA,EAAAA,KAAA,QAAMoF,EAAE,kKACRpF,EAAAA,EAAAA,KAAA,QAAMoF,EAAE,8FACRpF,EAAAA,EAAAA,KAAA,QAAMoF,EAAE,eACRpF,EAAAA,EAAAA,KAAA,QAAMoF,EAAE,4DACRpF,EAAAA,EAAAA,KAAA,QAAMoF,EAAE,kEAGZ5E,EAAAA,EAAAA,MAAA,UACEkC,KAAK,aACL2B,MAAOlG,EACP0E,SAAWzC,GAAMhC,EAAcgC,EAAEC,OAAOgE,OACxC1B,UAAQ,EACRe,MAAO,CACL4B,cACiB,oBAAfrH,EAAmC,OAAS,OAC9CsH,QAAwB,oBAAftH,EAAmC,GAAM,GAClDP,SAAA,EAEFsC,EAAAA,EAAAA,KAAA,UAAQqE,MAAM,KAAI3G,SAAC,QACnBsC,EAAAA,EAAAA,KAAA,UAAQqE,MAAM,MAAK3G,SAAC,mBAMZ,QAAfS,IACC6B,EAAAA,EAAAA,KAAA,OAAKE,UAAU,SAAQxC,UACrB8C,EAAAA,EAAAA,MAAA,OAAKN,UAAU,2BAA0BxC,SAAA,EACvCsC,EAAAA,EAAAA,KAAA,KAAAtC,SAAIyB,EAAE,oBACNqB,EAAAA,EAAAA,MAAA,OAAKN,UAAU,kCAAiCxC,SAAA,EAC9CsC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,OAAMxC,UACnB8C,EAAAA,EAAAA,MAAA,OACEuE,MAAM,6BACNJ,MAAM,KACNf,OAAO,KACPoB,QAAQ,YACRC,KAAK,OACLC,OAAO,eACPM,YAAY,IACZC,cAAc,QACdC,eAAe,QACfxF,UAAU,kEAAiExC,SAAA,EAE3EsC,EAAAA,EAAAA,KAAA,QAAMkF,OAAO,OAAOE,EAAE,gBAAgBH,KAAK,UAC3CjF,EAAAA,EAAAA,KAAA,QAAMoF,EAAE,kKACRpF,EAAAA,EAAAA,KAAA,QAAMoF,EAAE,8FACRpF,EAAAA,EAAAA,KAAA,QAAMoF,EAAE,eACRpF,EAAAA,EAAAA,KAAA,QAAMoF,EAAE,4DACRpF,EAAAA,EAAAA,KAAA,QAAMoF,EAAE,kEAGZpF,EAAAA,EAAAA,KAAA,SACEyC,KAAK,OACLC,KAAK,aACL2C,YAAY,sBACZhB,MAAO5F,EACPoE,SAAWzC,GAAM1B,EAAa0B,EAAEC,OAAOgE,OACvC1B,SAAyB,QAAfxE,aAMpB6B,EAAAA,EAAAA,KAAA,OAAKE,UAAU,SAAQxC,UACrB8C,EAAAA,EAAAA,MAAA,OAAKN,UAAU,wCAAuCxC,SAAA,EACpD8C,EAAAA,EAAAA,MAAA,OAAKN,UAAU,kCAAiCxC,SAAA,EAC9CsC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,OAAMxC,UACnB8C,EAAAA,EAAAA,MAAA,OACEuE,MAAM,6BACNJ,MAAM,KACNf,OAAO,KACPoB,QAAQ,YACRC,KAAK,OACLC,OAAO,eACP,eAAa,IACb,iBAAe,QACf,kBAAgB,QAChBC,MAAM,mEAAkEzH,SAAA,EAExEsC,EAAAA,EAAAA,KAAA,QAAMkF,OAAO,OAAOE,EAAE,gBAAgBH,KAAK,UAC3CjF,EAAAA,EAAAA,KAAA,QAAMoF,EAAE,aACRpF,EAAAA,EAAAA,KAAA,QAAMoF,EAAE,+IACRpF,EAAAA,EAAAA,KAAA,QAAMoF,EAAE,qBAGZpF,EAAAA,EAAAA,KAAA,KAAAtC,SAAIyB,EAAE,4BAERa,EAAAA,EAAAA,KAAA,OAAKE,UAAU,kCAAiCxC,UAC9C8C,EAAAA,EAAAA,MAAA,KAAA9C,SAAA,CACG,KACDsC,EAAAA,EAAAA,KAAA,QAAAtC,SAAOyB,EAAE,sBACTa,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,QAAAtC,SAAOyB,EAAE,oCAKjBqB,EAAAA,EAAAA,MAAA,OAAKN,UAAU,SAAQxC,SAAA,CACpBoC,IACCE,EAAAA,EAAAA,KAAA,QAAM0D,MAAO,CAAEC,MAAO,MAAOmB,SAAU,QAASpH,SAAC,qEAKnD8C,EAAAA,EAAAA,MAAA,OAAKN,UAAU,2BAA0BxC,SAAA,EACvCsC,EAAAA,EAAAA,KAAA,KAAAtC,SAAIyB,EAAE,sBACNqB,EAAAA,EAAAA,MAAA,OAAKN,UAAU,kCAAiCxC,SAAA,EAC9CsC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,OAAMxC,UACnB8C,EAAAA,EAAAA,MAAA,OACEuE,MAAM,6BACNJ,MAAM,KACNf,OAAO,KACPoB,QAAQ,YACRC,KAAK,OACLC,OAAO,eACP,eAAa,IACb,iBAAe,QACf,kBAAgB,QAChBC,MAAM,8DAA6DzH,SAAA,EAEnEsC,EAAAA,EAAAA,KAAA,QAAMkF,OAAO,OAAOE,EAAE,gBAAgBH,KAAK,UAC3CjF,EAAAA,EAAAA,KAAA,QAAMoF,EAAE,gDACRpF,EAAAA,EAAAA,KAAA,QAAMoF,EAAE,wGAIZ5E,EAAAA,EAAAA,MAAA,UACE6D,MAAO1F,EACPkE,SAAWzC,GAAMxB,EAAmBwB,EAAEC,OAAOgE,OAC7C3B,KAAK,kBAAiBhF,SAAA,EAEtBsC,EAAAA,EAAAA,KAAA,UAAQqE,MAAM,MAAK3G,SAAC,SACpBsC,EAAAA,EAAAA,KAAA,UAAQqE,MAAM,KAAI3G,SAAC,oBAK3BsC,EAAAA,EAAAA,KAAA,QAAME,UAAU,eAAcxC,SAAEqB,KAChCyB,EAAAA,EAAAA,MAAA,OAAKN,UAAU,SAAQxC,SAAA,CACpBE,IACCoC,EAAAA,EAAAA,KAAA,OACEE,UAAU,wCACVyF,KAAK,SAAQjI,UAEb8C,EAAAA,EAAAA,MAAA,QAAMN,UAAU,kBAAiBxC,SAAA,CAAEyB,EAAE,WAAW,YAGpDa,EAAAA,EAAAA,KAAA,UACEyC,KAAK,SACLiB,MAAO,CACL4B,cAAerG,EAAU,OAAS,OAClCsG,QAAStG,EAAU,GAAM,GACzBvB,SAEDyB,EAAE,8BAjUD,IAyUf,C","sources":["components/Uploadprivatealbum.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { BsCloudUpload } from \"react-icons/bs\";\nimport axios from \"axios\";\nimport { useTranslation } from \"react-i18next\";\nimport i18n from \"../i18n\";\nimport MediaRenderer from \"../components/MediaRenderer\";\nexport const Uploadprivatealbum = ({\n  isOpen,\n  onClose,\n  children,\n  closepopup11,\n}) => {\n  const handleOverlayClick = (e) => {\n    // Check if the clicked element is the overlay\n    if (e.target.classList.contains(\"popup-overlay\")) {\n      onClose(); // Close the popup if the overlay is clicked\n    }\n  };\n  const [spinner, setspinner] = useState(false);\n  const [images, setImages] = useState(null);\n  const [visibility, setVisibility] = useState(\"\");\n  const [addToAlbum, setAddToAlbum] = useState(\"No\");\n  const [addToAlbumPass, setAddToAlbumpass] = useState(\"No\");\n  const [Password, setPassword] = useState(\"\");\n  const [albumName, setAlbumName] = useState(\"\");\n  const [rightsConfirmed, setRightsConfirmed] = useState(\"Yes\");\n  const [error, setError] = useState(\"\");\n  const [successmsg, setsuccessmsg] = useState(\"\");\n  const [preebtn, setpreebtn] = useState(false);\n  const { t } = useTranslation();\n  const fileInputRef = useRef(null);\n\n  useEffect(() => {\n    if (visibility === \"Private_visible\") {\n      setAddToAlbumpass(\"Yes\");\n      setAddToAlbum(\"Yes\");\n    } else {\n      setAddToAlbumpass(\"No\");\n    }\n  }, [visibility]);\n\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem(\"language\") || \"en\"; // Default to 'en' if no language is saved\n    // Change the language if it's not already the current language\n    if (i18n.language !== savedLanguage) {\n      i18n.changeLanguage(savedLanguage);\n    }\n  }, [i18n, t]);\n  var apiUrl = \"https://backend.amourette.no/api/members/\";\n  const handleFileChange = (e) => {\n    const selectedFiles = e.target.files;\n    const maxFileSize = 10 * 1024 * 1024; // 10 MB in bytes\n    const maxFileCount = 10; // Maximum of 10 files\n    let validFiles = [];\n    let fileError = \"\";\n\n    // Check if the number of files exceeds the limit\n    if (selectedFiles.length > maxFileCount) {\n      fileError = `You can only upload a maximum of ${maxFileCount} files.`;\n    } else {\n      Array.from(selectedFiles).forEach((file) => {\n        const fileType = file.type;\n\n        // Allow only images and videos\n        if (!fileType.startsWith(\"image/\") && !fileType.startsWith(\"video/\")) {\n          fileError = `File \"${file.name}\" is not an image or video.`;\n        } else if (file.size > maxFileSize) {\n          fileError = `File \"${file.name}\" exceeds the 10 MB limit.`;\n        } else {\n          validFiles.push(file);\n        }\n      });\n    }\n\n    if (fileError) {\n      setError(fileError);\n    } else {\n      setError(\"\");\n      setImages(validFiles);\n    }\n  };\n  const [yesNoerror, setYesNoError] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!images) {\n      alert(\"Please select images to upload.\");\n      return;\n    }\n\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    const formData = new FormData();\n\n    images.forEach((file) => {\n      formData.append(\"images\", file); // Use the key 'files' for your backend to handle multiple files\n    });\n    formData.append(\"visibility\", visibility);\n    formData.append(\"addToAlbum\", addToAlbum);\n    formData.append(\"albumName\", albumName);\n    formData.append(\"password\", Password);\n    formData.append(\"rightsConfirmed\", rightsConfirmed);\n    formData.append(\"user_id\", userLogin.id);\n    formData.append(\"fileType\", \"\");\n    if (rightsConfirmed === \"No\") {\n      setYesNoError(true);\n      return;\n    } else {\n      setYesNoError(false);\n    }\n    setspinner(true);\n    setpreebtn(true);\n    try {\n      const res = await axios.post(apiUrl + \"saveprivateAlbum\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      });\n      var respo = res.data;\n      setpreebtn(false);\n      setsuccessmsg(respo.message);\n      setTimeout(() => {\n        window.location.reload();\n        setspinner(false);\n        setsuccessmsg(\"\");\n        closepopup11();\n        setVisibility(\"\");\n        setAlbumName(\"\");\n        setPassword(\"\");\n        setAddToAlbum(\"No\");\n        setRightsConfirmed(\"Yes\");\n        setImages(null);\n      }, 3500);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const removeFile = (index) => {\n    setImages((prev) => {\n      const updatedImages = prev.filter((_, i) => i !== index);\n      // If no files left, reset the input value\n      if (updatedImages.length === 0 && fileInputRef.current) {\n        fileInputRef.current.value = \"\";\n      }\n      return updatedImages;\n    });\n  };\n\n  const handlecheck = () => {};\n  if (!isOpen) return null;\n  return (\n    <>\n      <div className=\"popup-overlay\" onClick={handleOverlayClick}>\n        <div className=\"popup-content col-md-5\">\n          <button className=\"close-button\" onClick={onClose}>\n            &times; {/* Close button */}\n          </button>\n          <div className=\"gallery_pop  d-flex flex-column gap-4\">\n            <h3>{t(\"upload_album\")}</h3>\n            <form\n              action=\"javascript:void(0)\"\n              method=\"post\"\n              onSubmit={handleSubmit}\n            >\n              <div className=\"row gy-3 align-items-end\">\n                <div className=\"col-md-12\">\n                  <div className=\"uploadfile rel bgload\">\n                    <p className=\"pb-2\">{t(\"select_one_more\")}</p>\n                    <input\n                      type=\"file\"\n                      name=\"file\"\n                      required\n                      multiple\n                      onChange={handleFileChange}\n                      className=\"fileload\"\n                      ref={fileInputRef}\n                    />\n                    {error && <p style={{ color: \"red\" }}>{error}</p>}\n                    <div className=\"inload\" style={{ height: \"50px\" }}>\n                      <div className=\"d-flex gap-3 align-items-center\">\n                        {images !== null && (\n                          <>\n                            {images.map((file, index) => (\n                              <div className=\"upimage rel\" key={index}>\n                                <button\n                                  type=\"button\"\n                                  onClick={() => removeFile(index)}\n                                >\n                                  X\n                                </button>\n                                <div className=\"inimag ofit\">\n                                  {file.type.startsWith(\"image/\") ? (\n                                    <img\n                                      src={URL.createObjectURL(file)}\n                                      alt={file.name}\n                                    />\n                                  ) : (\n                                    <video width=\"160\" height=\"120\" controls>\n                                      <source\n                                        src={URL.createObjectURL(file)}\n                                        type={file.type}\n                                      />\n                                    </video>\n                                  )}\n                                </div>\n                              </div>\n                            ))}\n                          </>\n                        )}\n\n                        <div className=\"d-flex align-items-center gap-2\">\n                          <BsCloudUpload style={{ fontSize: \"24px\" }} />\n                          <h3 className=\"m-0\" style={{ fontSize: \"14px\" }}>\n                            {t(\"upload_image\")}/{t(\"Videos\")}\n                          </h3>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"col-12\">\n                  <div className=\"d-flex flex-column gap-2\">\n                    <p>{t(\"how_private\")}</p>\n                    <div className=\"d-flex align-items-center gap-2\">\n                      <div className=\"icon\">\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width=\"24\"\n                          height=\"24\"\n                          viewBox=\"0 0 24 24\"\n                          fill=\"none\"\n                          stroke=\"currentColor\"\n                          stroke-width=\"2\"\n                          stroke-linecap=\"round\"\n                          stroke-linejoin=\"round\"\n                          class=\"icon icon-tabler icons-tabler-outline icon-tabler-lock\"\n                        >\n                          <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                          <path d=\"M5 13a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2v6a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2v-6z\" />\n                          <path d=\"M11 16a1 1 0 1 0 2 0a1 1 0 0 0 -2 0\" />\n                          <path d=\"M8 11v-4a4 4 0 1 1 8 0v4\" />\n                        </svg>\n                      </div>\n                      <select\n                        value={visibility}\n                        onChange={(e) => setVisibility(e.target.value)}\n                        className=\"\"\n                        required\n                        name=\"visibility\"\n                      >\n                        <option value=\"\">--{t(\"Select\")}--</option>\n                        <option value=\"Public_visible\">{t(\"All\")}</option>\n                        <option value=\"Friends_visible\">\n                          {t(\"Friends_visible\")}\n                        </option>\n                        <option value=\"Private_visible\">\n                          {t(\"Private_visible\")}\n                        </option>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n                {addToAlbumPass === \"Yes\" && (\n                  <div className=\"col-12\">\n                    <div className=\"d-flex flex-column gap-2\">\n                      <p>Password</p>\n                      <div className=\"d-flex align-items-center gap-2\">\n                        <div className=\"icon\">\n                          <svg\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            width=\"24\"\n                            height=\"24\"\n                            viewBox=\"0 0 24 24\"\n                            fill=\"none\"\n                            stroke=\"currentColor\"\n                            stroke-width=\"2\"\n                            stroke-linecap=\"round\"\n                            stroke-linejoin=\"round\"\n                            class=\"icon icon-tabler icons-tabler-outline icon-tabler-lock\"\n                          >\n                            <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                            <path d=\"M5 13a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2v6a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2v-6z\" />\n                            <path d=\"M11 16a1 1 0 1 0 2 0a1 1 0 0 0 -2 0\" />\n                            <path d=\"M8 11v-4a4 4 0 1 1 8 0v4\" />\n                          </svg>\n                        </div>\n                        <input\n                          type=\"password\"\n                          name=\"password\"\n                          placeholder=\"Enter protected password here...\"\n                          value={Password}\n                          onChange={(e) => setPassword(e.target.value)}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                )}\n                <div className=\"col-12\">\n                  <div className=\"d-flex flex-column gap-2\">\n                    <p> {t(\"Add_the\")}</p>\n                    <div className=\"d-flex align-items-center gap-2\">\n                      <div className=\"icon\">\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width=\"24\"\n                          height=\"24\"\n                          viewBox=\"0 0 24 24\"\n                          fill=\"none\"\n                          stroke=\"currentColor\"\n                          stroke-width=\"2\"\n                          stroke-linecap=\"round\"\n                          stroke-linejoin=\"round\"\n                          class=\"icon icon-tabler icons-tabler-outline icon-tabler-library-photo\"\n                        >\n                          <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                          <path d=\"M7 3m0 2.667a2.667 2.667 0 0 1 2.667 -2.667h8.666a2.667 2.667 0 0 1 2.667 2.667v8.666a2.667 2.667 0 0 1 -2.667 2.667h-8.666a2.667 2.667 0 0 1 -2.667 -2.667z\" />\n                          <path d=\"M4.012 7.26a2.005 2.005 0 0 0 -1.012 1.737v10c0 1.1 .9 2 2 2h10c.75 0 1.158 -.385 1.5 -1\" />\n                          <path d=\"M17 7h.01\" />\n                          <path d=\"M7 13l3.644 -3.644a1.21 1.21 0 0 1 1.712 0l3.644 3.644\" />\n                          <path d=\"M15 12l1.644 -1.644a1.21 1.21 0 0 1 1.712 0l2.644 2.644\" />\n                        </svg>\n                      </div>\n                      <select\n                        name=\"addToAlbum\"\n                        value={addToAlbum}\n                        onChange={(e) => setAddToAlbum(e.target.value)}\n                        required\n                        style={{\n                          pointerEvents:\n                            visibility === \"Private_visible\" ? \"none\" : \"auto\",\n                          opacity: visibility === \"Private_visible\" ? 0.1 : 1,\n                        }}\n                      >\n                        <option value=\"No\">No</option>\n                        <option value=\"Yes\">Yes</option>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n\n                {addToAlbum === \"Yes\" && (\n                  <div className=\"col-12\">\n                    <div className=\"d-flex flex-column gap-2\">\n                      <p>{t(\"Add_the_album\")}</p>\n                      <div className=\"d-flex align-items-center gap-2\">\n                        <div className=\"icon\">\n                          <svg\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            width=\"24\"\n                            height=\"24\"\n                            viewBox=\"0 0 24 24\"\n                            fill=\"none\"\n                            stroke=\"currentColor\"\n                            strokeWidth=\"2\"\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                            className=\"icon icon-tabler icons-tabler-outline icon-tabler-library-photo\"\n                          >\n                            <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                            <path d=\"M7 3m0 2.667a2.667 2.667 0 0 1 2.667 -2.667h8.666a2.667 2.667 0 0 1 2.667 2.667v8.666a2.667 2.667 0 0 1 -2.667 2.667h-8.666a2.667 2.667 0 0 1 -2.667 -2.667z\" />\n                            <path d=\"M4.012 7.26a2.005 2.005 0 0 0 -1.012 1.737v10c0 1.1 .9 2 2 2h10c.75 0 1.158 -.385 1.5 -1\" />\n                            <path d=\"M17 7h.01\" />\n                            <path d=\"M7 13l3.644 -3.644a1.21 1.21 0 0 1 1.712 0l3.644 3.644\" />\n                            <path d=\"M15 12l1.644 -1.644a1.21 1.21 0 0 1 1.712 0l2.644 2.644\" />\n                          </svg>\n                        </div>\n                        <input\n                          type=\"text\"\n                          name=\"album_name\"\n                          placeholder=\"Enter album name...\"\n                          value={albumName}\n                          onChange={(e) => setAlbumName(e.target.value)}\n                          required={addToAlbum === \"Yes\"} // Required only if \"Yes\" is selected\n                        />\n                      </div>\n                    </div>\n                  </div>\n                )}\n                <div className=\"col-12\">\n                  <div className=\"d-flex flex-column gap-2 warning_text\">\n                    <div className=\"d-flex align-items-center gap-2\">\n                      <div className=\"icon\">\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width=\"24\"\n                          height=\"24\"\n                          viewBox=\"0 0 24 24\"\n                          fill=\"none\"\n                          stroke=\"currentColor\"\n                          stroke-width=\"2\"\n                          stroke-linecap=\"round\"\n                          stroke-linejoin=\"round\"\n                          class=\"icon icon-tabler icons-tabler-outline icon-tabler-alert-triangle\"\n                        >\n                          <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                          <path d=\"M12 9v4\" />\n                          <path d=\"M10.363 3.591l-8.106 13.534a1.914 1.914 0 0 0 1.636 2.871h16.214a1.914 1.914 0 0 0 1.636 -2.87l-8.106 -13.536a1.914 1.914 0 0 0 -3.274 0z\" />\n                          <path d=\"M12 16h.01\" />\n                        </svg>\n                      </div>\n                      <p>{t(\"Responsibility_for\")}</p>\n                    </div>\n                    <div className=\"d-flex align-items-center gap-2\">\n                      <p>\n                        {\" \"}\n                        <span>{t(\"This_forum_ONLY\")}</span>\n                        <br />\n                        <span>{t(\"By_uploading_images\")}</span>\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-12\">\n                  {yesNoerror && (\n                    <span style={{ color: \"red\", fontSize: \"12px\" }}>\n                      Please confirm that you have the rights to upload these\n                      images.\n                    </span>\n                  )}\n                  <div className=\"d-flex flex-column gap-2\">\n                    <p>{t(\"Do_you_have_the\")}</p>\n                    <div className=\"d-flex align-items-center gap-2\">\n                      <div className=\"icon\">\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width=\"24\"\n                          height=\"24\"\n                          viewBox=\"0 0 24 24\"\n                          fill=\"none\"\n                          stroke=\"currentColor\"\n                          stroke-width=\"2\"\n                          stroke-linecap=\"round\"\n                          stroke-linejoin=\"round\"\n                          class=\"icon icon-tabler icons-tabler-outline icon-tabler-copyright\"\n                        >\n                          <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                          <path d=\"M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0\" />\n                          <path d=\"M14 9.75a3.016 3.016 0 0 0 -4.163 .173a2.993 2.993 0 0 0 0 4.154a3.016 3.016 0 0 0 4.163 .173\" />\n                        </svg>\n                      </div>\n\n                      <select\n                        value={rightsConfirmed}\n                        onChange={(e) => setRightsConfirmed(e.target.value)}\n                        name=\"rightsConfirmed\"\n                      >\n                        <option value=\"Yes\">Yes</option>\n                        <option value=\"No\">No</option>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n                <span className=\"text-success\">{successmsg}</span>\n                <div className=\"col-12\">\n                  {spinner && (\n                    <div\n                      className=\"spinner-border text-success send_load\"\n                      role=\"status\"\n                    >\n                      <span className=\"visually-hidden\">{t(\"loading\")}...</span>\n                    </div>\n                  )}\n                  <button\n                    type=\"submit\"\n                    style={{\n                      pointerEvents: preebtn ? \"none\" : \"auto\", // Disable button when preebtn is true\n                      opacity: preebtn ? 0.1 : 1, // Reduce opacity when disabled\n                    }}\n                  >\n                    {t(\"upload\")}\n                  </button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n"],"names":["Uploadprivatealbum","_ref","isOpen","onClose","children","closepopup11","spinner","setspinner","useState","images","setImages","visibility","setVisibility","addToAlbum","setAddToAlbum","addToAlbumPass","setAddToAlbumpass","Password","setPassword","albumName","setAlbumName","rightsConfirmed","setRightsConfirmed","error","setError","successmsg","setsuccessmsg","preebtn","setpreebtn","t","useTranslation","fileInputRef","useRef","useEffect","savedLanguage","localStorage","getItem","i18n","language","changeLanguage","yesNoerror","setYesNoError","_jsx","_Fragment","className","onClick","e","target","classList","contains","_jsxs","action","method","onSubmit","async","preventDefault","alert","storedUsername","userLogin","JSON","parse","formData","FormData","forEach","file","append","id","respo","axios","post","apiUrl","headers","Accept","data","message","setTimeout","window","location","reload","err","response","request","console","type","name","required","multiple","onChange","selectedFiles","files","validFiles","fileError","length","Array","from","fileType","startsWith","size","push","ref","style","color","height","map","index","prev","updatedImages","filter","_","i","current","value","removeFile","src","URL","createObjectURL","alt","width","controls","BsCloudUpload","fontSize","xmlns","viewBox","fill","stroke","class","d","placeholder","pointerEvents","opacity","strokeWidth","strokeLinecap","strokeLinejoin","role"],"sourceRoot":""}