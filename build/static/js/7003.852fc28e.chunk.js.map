{"version":3,"file":"static/js/7003.852fc28e.chunk.js","mappings":"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","sources":["components/PrivateImageRequest.jsx","pages/Editprofile.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport i18n from \"../i18n\";\nexport const PrivateImageRequest = ({ isOpen, onClose, LoginData }) => {\n  const apiUrl = \"https://backend.amourette.no/api/\";\n  const apiUrl2 = \"https://backend.amourette.no/api/members/\";\n  const [isRequestDetail, setRequestDetail] = useState([]);\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem(\"language\") || \"en\"; // Default to 'en' if no language is saved\n    // Change the language if it's not already the current language\n    if (i18n.language !== savedLanguage) {\n      i18n.changeLanguage(savedLanguage);\n    }\n  }, [i18n, t]);\n  useEffect(() => {\n    if (isOpen) {\n      getRequestDetails(); // Call the function only if the component is open\n    }\n  }, [isOpen]); // Dependency array ensures this runs when isOpen changes\n  useEffect(() => {\n    const ws = new WebSocket(\"wss://backend.amourette.no\"); // Adjust port if needed\n\n    ws.onmessage = (event) => {\n      try {\n        const receivedMessage = JSON.parse(event.data);\n        if (!receivedMessage) {\n          console.error(\"Received invalid JSON:\", event.data);\n          return;\n        }\n        console.log(receivedMessage);\n\n        // Ensure message is only seen by the sender or receiver\n      } catch (error) {\n        console.error(\"Failed to parse WebSocket message:\", error);\n        console.error(\"Raw message:\", event.data);\n      }\n    };\n\n    return () => {\n      ws.close();\n    };\n  }, [LoginData]);\n  const handleOverlayClick = (e) => {\n    // Check if the clicked element is the overlay\n    if (e.target.classList.contains(\"popup-overlay\")) {\n      onClose(); // Close the popup if the overlay is clicked\n    }\n  };\n\n  const getRequestDetails = async () => {\n    const formData = {\n      user_id: LoginData.id,\n    };\n    console.log(formData);\n    try {\n      const res = await axios.post(apiUrl + \"getRequestDetails\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      const respo = res.data;\n      setRequestDetail(respo);\n      // You can also set state here to manage the response data\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n        console.error(\"Error response data:\", err.response.data);\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const calculateAge = (birthday) => {\n    const birthDate = new Date(birthday);\n    const today = new Date();\n    let age = today.getFullYear() - birthDate.getFullYear();\n    const monthDifference = today.getMonth() - birthDate.getMonth();\n\n    // Adjust age if the birthday hasn't occurred yet this year\n    if (\n      monthDifference < 0 ||\n      (monthDifference === 0 && today.getDate() < birthDate.getDate())\n    ) {\n      age--;\n    }\n\n    return age;\n  };\n  const RequestConfirm = async (id, user_id, to_id) => {\n    const formData = {\n      user_id: to_id,\n      req_id: id,\n      to_id: user_id,\n    };\n    console.log(formData);\n    try {\n      const res = await axios.post(apiUrl2 + \"RequestConfirm\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      const respo = res.data;\n      getRequestDetails();\n      // You can also set state here to manage the response data\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n        console.error(\"Error response data:\", err.response.data);\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const RequestDelete = async (id, user_id, to_id) => {\n    const formData = {\n      user_id: to_id,\n      req_id: id,\n      to_id: user_id,\n    };\n    console.log(formData);\n    try {\n      const res = await axios.post(apiUrl2 + \"Requestdelete\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      const respo = res.data;\n      getRequestDetails();\n      // You can also set state here to manage the response data\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n        console.error(\"Error response data:\", err.response.data);\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  // Early return if the chat box is not open\n  if (!isOpen) return null;\n\n  return (\n    <>\n      <div className=\"popup-overlay checkbox\" onClick={handleOverlayClick}>\n        <div className=\"popup-content col-md-4\">\n          <button className=\"close-button\" onClick={onClose}>\n            &times; {/* Close button */}\n          </button>\n          <div className=\"d-flex flex-column gap-0 chat_box \">\n            <h3 className=\"p-3\">{t(\"All_Request\")}</h3>\n            <div className=\"requestscroll\">\n              {isRequestDetail.length === 0 ? (\n                <p className=\"p-3 text-center\">{t(\"No_result_found\")}.</p> // Message when no requests are available\n              ) : (\n                isRequestDetail.map((request, index) => (\n                  <div className=\"friend_formen w-100 p-3\" key={index}>\n                    <div className=\"d-flex w-100 flex-md-row flex-column align-items-start justify-content-between gap-3\">\n                      <Link\n                        to=\"/singlesearch\"\n                        className=\"d-flex flex-md-row gap-3\"\n                      >\n                        <div className=\"flex-shrink-0\">\n                          <div className=\"fromimg ofit rounded-2 overflow-hidden\">\n                            <img src={request.profile_image} alt=\"userimag\" />\n                          </div>\n                        </div>\n                        <div className=\"flex-grow-1\">\n                          <div className=\"d-flex flex-column gap-2\">\n                            <div className=\"d-flex gap-3 align-items-center\">\n                              <h3>{request.username},</h3>{\" \"}\n                              {/* Display username */}\n                              <h3>\n                                {calculateAge(request.birthday_date)}\n                              </h3>{\" \"}\n                              {/* Display age */}\n                            </div>\n                            <h4>{request.location}</h4> {/* Display location */}\n                          </div>\n                        </div>\n                      </Link>\n                      <div className=\"d-flex flex-column gap-2\">\n                        <h5>{request.album_name}</h5>\n                        <div className=\"d-flex align-items-center gap-4\">\n                          {request.status === \"Yes\" ? (\n                            <button\n                              type=\"button\"\n                              className=\"confirm_btn\"\n                              disabled\n                            >\n                              {t(\"Confirmed\")}\n                            </button>\n                          ) : (\n                            <>\n                              <button\n                                className=\"confirm_btn\"\n                                onClick={() =>\n                                  RequestConfirm(\n                                    request.id,\n                                    request.user_id,\n                                    request.to_id\n                                  )\n                                }\n                              >\n                                {t(\"Confirm\")}\n                              </button>\n                              <button\n                                className=\"cancel_btn\"\n                                onClick={() =>\n                                  RequestDelete(\n                                    request.id,\n                                    request.user_id,\n                                    request.to_id\n                                  )\n                                }\n                              >\n                                {t(\"Cancel\")}\n                              </button>\n                            </>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                ))\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\nexport default PrivateImageRequest;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport { Link, useNavigate, useLocation } from \"react-router-dom\";\n// import { Link } from \"react-router-dom\";\n\nimport Select from \"react-select\";\nimport Headertwo from \"../components/Headertwo\";\nimport { Uploadprivatealbum } from \"../components/Uploadprivatealbum\";\nimport {\n  Accordion,\n  AccordionItem,\n  AccordionItemHeading,\n  AccordionItemButton,\n  AccordionItemPanel,\n} from \"react-accessible-accordion\";\n\n// Demo styles, see 'Styles' section below for some notes on use.\nimport \"react-accessible-accordion/dist/fancy-example.css\";\nimport { FiPlus } from \"react-icons/fi\";\nimport { BsCloudUpload } from \"react-icons/bs\";\n\nimport SuccessPop from \"../components/SuccessPop\";\nimport ErrorPop from \"../components/ErrorPop\";\n\nimport PrivateImageRequest from \"../components/PrivateImageRequest\";\n\nimport de1 from \"../assets/images/de1.png\";\nimport de2 from \"../assets/images/de2.png\";\nimport de3 from \"../assets/images/de3.png\";\nimport de4 from \"../assets/images/de4.png\";\nimport de5 from \"../assets/images/de5.png\";\nimport de6 from \"../assets/images/de6.png\";\nimport de7 from \"../assets/images/de7.png\";\nimport de8 from \"../assets/images/de8.png\";\nimport de9 from \"../assets/images/de9.png\";\nimport de10 from \"../assets/images/de10.png\";\nimport de11 from \"../assets/images/de11.png\";\nimport de12 from \"../assets/images/de12.png\";\nimport de13 from \"../assets/images/de13.png\";\nimport de14 from \"../assets/images/connected_with.png\";\nimport de15 from \"../assets/images/gender.png\";\nimport de16 from \"../assets/images/intersted_in.png\";\nimport { useTranslation } from \"react-i18next\";\nimport i18n from \"../i18n\";\nimport MediaRenderer from \"../components/MediaRenderer\";\nimport { Editor } from \"@tinymce/tinymce-react\";\nfunction Editprofile() {\n  const navigate = useNavigate();\n  const editorRef = useRef(null);\n  const log = () => {\n    if (editorRef.current) {\n      console.log(editorRef.current.getContent());\n    }\n  };\n  const location = useLocation();\n  const [spinner, setspinner] = useState(false);\n  const [ErrorForAll, setErrorForAll] = useState(\"\");\n  const [editorContent, setEditorContent] = useState(\"\");\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  const [isPopupOpen1, setIsPopupOpen1] = useState(false);\n  const [isImagePrivate, setIsImagePrivate] = useState(false);\n  const [showPopSuccess, setShowPopSuccess] = useState(false);\n  const [showPopError, setShowPopError] = useState(false);\n  const [successPopMessage, setPopsuccessMessage] = useState(\"\");\n  const [errorPopMessage, setPoperrorMessage] = useState(\"\");\n  const [LoginData, setLoginData] = useState(null);\n  const [profilevalue, setprofilevalue] = useState(\"\");\n  const [genders, setgenders] = useState(\"\");\n  const [Singel, setSingel] = useState([]);\n  const [InterstedIn, setInterstedIn] = useState([]);\n  const [nationality, setNationality] = useState(\"\");\n  const [bodyType, setBodyType] = useState(\"\");\n  const [selectedSubRegion, setSelectedSubRegion] = React.useState(\"\");\n\n  const [sexual_orientation, setsexual_orientation] = useState([]);\n  const [relationship_status, setrelationship_status] = useState(\"\");\n\n  const [smokerValue, setsmokerValue] = useState(\"\");\n  const [tattosValue, settattosValue] = useState(\"\");\n\n  const [fetishValue, setfetishValue] = useState([]);\n  const [search_looking_for, setsearch_looking_for] = useState([]);\n  const [drinkerValue, setdrinkerValue] = useState(\"\");\n  const [body_piercingsValue, setbody_piercingsValue] = useState(\"\");\n  const [degree, setDegree] = useState(\"\");\n  const [heightFeet, setHeightFeet] = useState(profilevalue.height_feet || \"\");\n  const [heightInches, setHeightInches] = useState(\n    profilevalue.height_inches || \"\"\n  );\n\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const [selectedFile_1, setSelectedFile_1] = useState(null);\n  const [errorMessage_1, setErrorMessage_1] = useState(\"\");\n\n  const [selectedFile_2, setSelectedFile_2] = useState(null);\n  const [errorMessage_2, setErrorMessage_2] = useState(\"\");\n\n  const [selectedFile_3, setSelectedFile_3] = useState(null);\n  const [errorMessage_3, setErrorMessage_3] = useState(\"\");\n\n  const [selectedFile_4, setSelectedFile_4] = useState(null);\n  const [errorMessage_4, setErrorMessage_4] = useState(\"\");\n\n  const [imageUrl, setImageUrl] = useState(\"\");\n\n  const [imageUrl1, setImageUrl1] = useState(\"\");\n  const [imageUrl2, setImageUrl2] = useState(\"\");\n  const [imageUrl3, setImageUrl3] = useState(\"\");\n  const [imageUrl4, setImageUrl4] = useState(\"\");\n  const [isMaleChecked, setIsMaleChecked] = useState(false);\n  const [maleOptions, setMaleOptions] = useState({\n    straight: false,\n    \"bi-sexual\": false,\n    \"bi-curious\": false,\n    gay: false,\n    bull: false,\n  });\n  const [isCoupleChecked, setIsCoupleChecked] = useState(false);\n  const [coupleOptions, setCoupleOptions] = useState({\n    fullswap: false,\n    softswap: false,\n    cuckold: false,\n    exhibitionist: false,\n    voyeur: false,\n    hotwife: false,\n  });\n  const [isFemaleChecked, setIsFemaleChecked] = useState(false);\n  const [femaleOptions, setFemaleOptions] = useState({\n    Straight: false,\n    \"Bi-sexual\": false,\n    \"Bi-curious\": false,\n    lesbian: false,\n    Hotwife: false,\n  });\n  const [sexuality, setSexuality] = useState([]);\n  const [getallAlbum, setgetallAlbum] = useState([]);\n  var apiURL = \"https://backend.amourette.no/api/\";\n  var apiURLMembers = \"https://backend.amourette.no/api/members/\";\n  useEffect(() => {\n    const anyOptionChecked = Object.values(coupleOptions).some(\n      (isChecked) => isChecked\n    );\n    setIsCoupleChecked(anyOptionChecked);\n  }, [coupleOptions]);\n  useEffect(() => {\n    const anyOptionChecked = Object.values(femaleOptions).some(\n      (isChecked) => isChecked\n    );\n    setIsFemaleChecked(anyOptionChecked);\n  }, [femaleOptions]);\n  useEffect(() => {\n    // Check if the username key exists in session storage\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = JSON.parse(storedUsername);\n    if (userLogin == null) {\n      navigate(\"/login\");\n    } else {\n      setLoginData(userLogin);\n      // Call getProfile only if userLogin is available\n      getprofile(userLogin.email);\n    }\n  }, []);\n  useEffect(() => {\n    if (profilevalue?.looking_for) {\n      setEditorContent(profilevalue.looking_for);\n    }\n  }, [profilevalue]);\n  const handleFeetChange = (event) => {\n    setHeightFeet(event.target.value);\n  };\n\n  const handlefetishChange = (event) => {\n    //setSingel(event.target.value); // Update state with the selected value\n    const { value, checked } = event.target;\n\n    if (checked) {\n      // Add the value to the array if checked\n      setfetishValue((prev) => [...prev, value]);\n    } else {\n      // Remove the value from the array if unchecked\n      setfetishValue((prev) =>\n        prev.filter((orientation) => orientation !== value)\n      );\n    }\n  };\n  const handlebody_piercingsChange = (event) => {\n    setbody_piercingsValue(event.target.value);\n  };\n  const handledrinkerChange = (event) => {\n    setdrinkerValue(event.target.value);\n  };\n  const handletattosChange = (event) => {\n    settattosValue(event.target.value);\n  };\n  const handlesmokerChange = (event) => {\n    setsmokerValue(event.target.value);\n  };\n  const handleDegreeChange = (event) => {\n    setDegree(event.target.value);\n  };\n\n  const handleInchesChange = (event) => {\n    setHeightInches(event.target.value);\n  };\n  const handleSingelChange = (event) => {\n    //setSingel(event.target.value); // Update state with the selected value\n    const { value, checked } = event.target;\n\n    if (checked) {\n      // Add the value to the array if checked\n      setSingel((prev) => [...prev, value]);\n    } else {\n      // Remove the value from the array if unchecked\n      setSingel((prev) => prev.filter((orientation) => orientation !== value));\n    }\n  };\n\n  const handleInterstedInChange = (event) => {\n    const { value, checked } = event.target;\n\n    if (checked) {\n      // Add the value to the array if checked\n      setInterstedIn((prev) => [...prev, value]);\n    } else {\n      // Remove the value from the array if unchecked\n      setInterstedIn((prev) =>\n        prev.filter((orientation) => orientation !== value)\n      );\n    }\n  };\n  const handleNationalityChange = (event) => {\n    setNationality(event.target.value); // Update state with the selected value\n  };\n  const handleBodyTypeChange = (event) => {\n    setBodyType(event.target.value); // Update state with the selected value\n  };\n\n  const handleRelationStatusChange = (event) => {\n    setrelationship_status(event.target.value); // Update state with the selected value\n  };\n  const handleSearchLookingforChange = (event) => {\n    const { value, checked } = event.target;\n\n    if (checked) {\n      // Add the value to the array if checked\n      setsearch_looking_for((prev) => [...prev, value]);\n    } else {\n      // Remove the value from the array if unchecked\n      setsearch_looking_for((prev) =>\n        prev.filter((orientation) => orientation !== value)\n      );\n    }\n  };\n\n  const handleCheckChange = (event) => {\n    const { checked } = event.target; // Get the checked status of the checkbox\n    if (checked === true) {\n      console.log(checked);\n      setIsImagePrivate(true); // Update the state\n    } else {\n      setIsImagePrivate(false); // Update the state\n    }\n\n    // Append the checked status to formData\n  };\n\n  const handleSexualOrientationChange = (event) => {\n    const { value, checked } = event.target;\n\n    if (checked) {\n      // Add the value to the array if checked\n      setsexual_orientation((prev) => [...prev, value]);\n    } else {\n      // Remove the value from the array if unchecked\n      setsexual_orientation((prev) =>\n        prev.filter((orientation) => orientation !== value)\n      );\n    }\n  };\n\n  const handlegendersChange = (event) => {\n    setgenders(event.target.value); // Update state with the selected value\n    setSexuality([]);\n  };\n  const maleOptions_select = [\n    { value: \"Straight\", label: \"Straight\" },\n    { value: \"Bi-sexual\", label: \"Bi-sexual\" },\n    { value: \"Bi-curious\", label: \"Bi-curious\" },\n    { value: \"Gay\", label: \"Gay\" },\n    { value: \"Bull\", label: \"Bull\" },\n  ];\n\n  const femaleOptions_select = [\n    { value: \"Straight\", label: \"Straight\" },\n    { value: \"Bi-sexual\", label: \"Bi-sexual\" },\n    { value: \"Bi-curious\", label: \"Bi-curious\" },\n    { value: \"Lesbian\", label: \"Lesbian\" },\n    { value: \"Hotwife\", label: \"Hotwife\" },\n  ];\n\n  const coupleOptions_select = [\n    { value: \"Full swap\", label: \"Full swap\" },\n    { value: \"Soft swap\", label: \"Soft swap\" },\n    { value: \"Cuckold\", label: \"Cuckold\" },\n    { value: \"Exhibitionist\", label: \"Exhibitionist\" },\n    { value: \"Voyeur\", label: \"Voyeur\" },\n    { value: \"Still Exploring\", label: \"Still Exploring\" },\n    { value: \"HotWife\", label: \"HotWife\" },\n  ];\n  const setSexualitys = (event) => {\n    setSexuality(event);\n  };\n  const handleSexualityChange = (selectedOptions) => {\n    setSexuality(selectedOptions); // Handle the selected multiple options\n  };\n  const getprofile = async (email) => {\n    let formData = {\n      email: email,\n    };\n    try {\n      const res = await axios.post(apiURL + \"getProfile\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      });\n      console.log(res.data);\n      console.log(\"het\");\n      setprofilevalue(res.data);\n      if (res.data.makeImagePrivate === 1) {\n        setIsImagePrivate(true);\n      } else {\n        setIsImagePrivate(false);\n      }\n\n      setNationality(res.data.nationality);\n      setBodyType(res.data.bodytype);\n      setDegree(res.data.degree);\n      setdrinkerValue(res.data.drinker);\n      if (res.data.fetish) {\n        try {\n          const fetish = JSON.parse(res.data.fetish);\n          setfetishValue(Array.isArray(fetish) ? fetish : []);\n        } catch (error) {\n          console.error(\"Error parsing fetish:\", error);\n          setfetishValue([]); // Fallback to empty array on error\n        }\n      } else {\n        setfetishValue([]);\n      }\n\n      setbody_piercingsValue(res.data.body_piercings);\n      settattosValue(res.data.tattos);\n      setsmokerValue(res.data.smoker);\n\n      if (res.data.search_looking_for) {\n        try {\n          const search_looking_for = JSON.parse(res.data.search_looking_for);\n          setsearch_looking_for(\n            Array.isArray(search_looking_for) ? search_looking_for : []\n          );\n        } catch (error) {\n          console.error(\"Error parsing search_looking_for:\", error);\n          setsearch_looking_for([]); // Fallback to empty array on error\n        }\n      } else {\n        setsearch_looking_for([]);\n      }\n      setrelationship_status(res.data.relationship_status);\n      setHeightFeet(res.data.height_feet);\n      setHeightInches(res.data.height_inches);\n      if (\n        res.data.sexual_orientation !== null &&\n        res.data.sexual_orientation !== \"\" &&\n        res.data.sexual_orientation !== \"null\"\n      ) {\n        const parsedSexualOrientation = JSON.parse(res.data.sexual_orientation);\n\n        // Now, you can update the state with the parsed array\n        setsexual_orientation(parsedSexualOrientation);\n      }\n      if (res.data.connectwith) {\n        try {\n          const connectwith = JSON.parse(res.data.connectwith);\n          setSingel(Array.isArray(connectwith) ? connectwith : []);\n        } catch (error) {\n          console.error(\"Error parsing connectwith:\", error);\n          setSingel([]); // Fallback to empty array on error\n        }\n      } else {\n        setSingel([]);\n      }\n\n      if (res.data.interstedin) {\n        try {\n          const interstedin = JSON.parse(res.data.interstedin);\n          setInterstedIn(Array.isArray(interstedin) ? interstedin : []);\n        } catch (error) {\n          console.error(\"Error parsing interstedin:\", error);\n          setInterstedIn([]); // Fallback to empty array on error\n        }\n      } else {\n        setInterstedIn([]);\n      }\n\n      setImageUrl(res.data.profile_image);\n      setgenders(res.data.gender);\n      if (res.data.sexuality !== null && res.data.sexuality !== \"\") {\n        const inputString = JSON.parse(res.data.sexuality);\n        const optionss = inputString.map((item) => ({\n          value: item,\n          label: item,\n        }));\n        // Now, you can update the state with the parsed array\n        setSexuality(optionss);\n      }\n\n      setImageUrl1(res.data.profile_image_1);\n      setImageUrl2(res.data.profile_image_2);\n      setImageUrl3(res.data.profile_image_3);\n      setImageUrl4(res.data.profile_image_4);\n\n      console.log(selectedRegion);\n\n      if (res.data.location !== \"null\") {\n        setSelectedRegion(res.data.location);\n      }\n\n      if (res.data.town !== null && res.data.town !== \"\") {\n        const parsedtown = JSON.parse(res.data.town);\n\n        // Now, you can update the state with the parsed array\n        setSelectedTown(parsedtown);\n      }\n      if (res.data.subregion !== \"null\") {\n        setSelectedSubRegion(res.data.subregion);\n      }\n\n      const malee = res.data.male;\n\n      if (typeof malee === \"string\") {\n        try {\n          // Attempt to parse the string into an array\n          const maleArray = JSON.parse(malee);\n          console.log(\"Male options array:\", maleArray); // Log the parsed array\n\n          setMaleOptions((prevState) => {\n            const updatedMaleOptions = { ...prevState };\n            maleArray.forEach((option) => {\n              if (updatedMaleOptions.hasOwnProperty(option)) {\n                updatedMaleOptions[option] = true;\n              }\n            });\n            return updatedMaleOptions;\n          });\n        } catch (error) {\n          console.error(\"Error parsing 'male' field:\", error);\n        }\n      } else {\n        console.log(\"male is not a string, it's:\", typeof malee);\n      }\n      const femalee = res.data.female;\n      if (typeof femalee === \"string\") {\n        try {\n          // Attempt to parse the string into an array\n          const femaleArray = JSON.parse(femalee);\n          console.log(\"Female options array:\", femaleArray); // Log the parsed array\n\n          setFemaleOptions((prevState) => {\n            const updatedFeMaleOptions = { ...prevState };\n            femaleArray.forEach((option) => {\n              if (updatedFeMaleOptions.hasOwnProperty(option)) {\n                updatedFeMaleOptions[option] = true;\n              }\n            });\n            return updatedFeMaleOptions;\n          });\n        } catch (error) {\n          console.error(\"Error parsing 'male' field:\", error);\n        }\n      } else {\n        console.log(\"male is not a string, it's:\", typeof malee);\n      }\n      const couplee = res.data.couple;\n      if (typeof couplee === \"string\") {\n        try {\n          // Attempt to parse the string into an array\n          const coupleArray = JSON.parse(couplee);\n          console.log(\"Female options array:\", coupleArray); // Log the parsed array\n\n          setCoupleOptions((prevState) => {\n            const updatedCoupleOptions = { ...prevState };\n            coupleArray.forEach((option) => {\n              if (updatedCoupleOptions.hasOwnProperty(option)) {\n                updatedCoupleOptions[option] = true;\n              }\n            });\n            return updatedCoupleOptions;\n          });\n        } catch (error) {\n          console.error(\"Error parsing 'couplee' field:\", error);\n        }\n      } else {\n        console.log(\"couplee is not a string, it's:\", typeof couplee);\n      }\n      console.log(maleOptions);\n    } catch (err) {}\n  };\n  const MAX_FILE_SIZE = 5 * 1024 * 1024; // 2 MB\n  const handleFileChange = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      // Check if the file is an image\n      const isImage = file.type.startsWith(\"image/\");\n      if (!isImage) {\n        setErrorMessage(\"Please upload a valid image file.\");\n        setSelectedFile(null);\n        setImageUrl(\"\"); // Clear the image URL\n        return;\n      }\n\n      // Check the file size\n      if (file.size > MAX_FILE_SIZE) {\n        setErrorMessage(\"File size must be less than 2 MB.\");\n        setSelectedFile(null);\n        setImageUrl(\"\"); // Clear the image URL\n        return;\n      }\n\n      // Clear any previous error messages and set the selected file\n      setErrorMessage(\"\");\n      setSelectedFile(file);\n      setImageUrl(URL.createObjectURL(file)); // Create a URL for the selected image\n    }\n  };\n\n  const handleFileChange_1 = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      // Check if the file is an image\n      const isImage = file.type.startsWith(\"image/\");\n      if (!isImage) {\n        setErrorMessage_1(\"Please upload a valid image file.\");\n        setSelectedFile_1(null);\n        setImageUrl1(\"\");\n        return;\n      }\n\n      // Check the file size\n      if (file.size > MAX_FILE_SIZE) {\n        setErrorMessage_1(\"File size must be less than 2 MB.\");\n        setSelectedFile_1(null);\n        setImageUrl1(\"\");\n        return;\n      }\n\n      // Clear any previous error messages and set the selected file\n      setErrorMessage_1(\"\");\n      setSelectedFile_1(file);\n      setImageUrl1(URL.createObjectURL(file)); // Create a URL for the selected image\n    }\n  };\n\n  const handleFileChange_2 = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      // Check if the file is an image\n      const isImage = file.type.startsWith(\"image/\");\n      if (!isImage) {\n        setErrorMessage_2(\"Please upload a valid image file.\");\n        setSelectedFile_2(null);\n        setImageUrl2(\"\");\n        return;\n      }\n\n      // Check the file size\n      if (file.size > MAX_FILE_SIZE) {\n        setErrorMessage_2(\"File size must be less than 2 MB.\");\n        setSelectedFile_2(null);\n        setImageUrl2(\"\");\n        return;\n      }\n\n      // Clear any previous error messages and set the selected file\n      setErrorMessage_2(\"\");\n      setSelectedFile_2(file);\n      setImageUrl2(URL.createObjectURL(file));\n    }\n  };\n  const handleFileChange_3 = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      // Check if the file is an image\n      const isImage = file.type.startsWith(\"image/\");\n      if (!isImage) {\n        setErrorMessage_3(\"Please upload a valid image file.\");\n        setSelectedFile_3(null);\n        setImageUrl3(\"\");\n        return;\n      }\n\n      // Check the file size\n      if (file.size > MAX_FILE_SIZE) {\n        setErrorMessage_3(\"File size must be less than 2 MB.\");\n        setSelectedFile_3(null);\n        setImageUrl3(\"\");\n        return;\n      }\n\n      // Clear any previous error messages and set the selected file\n      setErrorMessage_3(\"\");\n      setSelectedFile_3(file);\n      setImageUrl3(URL.createObjectURL(file));\n    }\n  };\n  const handleFileChange_4 = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      // Check if the file is an image\n      const isImage = file.type.startsWith(\"image/\");\n      if (!isImage) {\n        setErrorMessage_4(\"Please upload a valid image file.\");\n        setSelectedFile_4(null);\n        setImageUrl4(\"\");\n        return;\n      }\n\n      // Check the file size\n      if (file.size > MAX_FILE_SIZE) {\n        setErrorMessage_4(\"File size must be less than 2 MB.\");\n        setSelectedFile_4(null);\n        setImageUrl4(\"\");\n        return;\n      }\n\n      // Clear any previous error messages and set the selected file\n      setErrorMessage_4(\"\");\n      setSelectedFile_4(file);\n      setImageUrl4(URL.createObjectURL(file));\n    }\n  };\n\n  const handleFemaleChange = () => {\n    const newStatus = !isFemaleChecked;\n    setIsFemaleChecked(newStatus);\n\n    // Set all nested options to match the new main checkbox state\n    if (newStatus) {\n      // If the main checkbox is checked, we set the options to true\n      setFemaleOptions({\n        Straight: true,\n        \"Bi-sexual\": true,\n        \"Bi-curious\": true,\n        lesbian: true,\n        Hotwife: true,\n      });\n    } else {\n      // If the main checkbox is unchecked, we set the options to false\n      setFemaleOptions({\n        straight: false,\n        \"Bi-sexual\": false,\n        \"Bi-curious\": false,\n        lesbian: false,\n        hotwife: false,\n      });\n    }\n  };\n\n  const handleOptionChangeFemaless = (option) => {\n    console.log(\"df - Triggered for option:\", option); // Add the option to identify which one was clicked\n    setFemaleOptions((prevOptions) => ({\n      ...prevOptions,\n      [option]: !prevOptions[option],\n    }));\n  };\n  const handleOption_ChangeMale = (options) => {\n    console.log(\"ht\");\n    setMaleOptions((prevOptionss) => ({\n      ...prevOptionss,\n      [options]: !prevOptionss[options],\n    }));\n  };\n  const handleCoupleChange = () => {\n    const newStatus = !isCoupleChecked;\n    setIsCoupleChecked(newStatus);\n\n    // Update all nested checkboxes based on the \"Couple\" checkbox\n    setCoupleOptions({\n      fullswap: newStatus,\n      softswap: newStatus,\n      cuckold: newStatus,\n      exhibitionist: newStatus,\n      voyeur: newStatus,\n      hotwife: newStatus,\n    });\n  };\n\n  const handleOptionChangeCouple = (option) => {\n    setCoupleOptions((prevOptions) => ({\n      ...prevOptions,\n      [option]: !prevOptions[option],\n    }));\n  };\n  useEffect(() => {\n    const anyOptionChecked = Object.values(maleOptions).some(\n      (isChecked) => isChecked\n    );\n    setIsMaleChecked(anyOptionChecked);\n  }, [maleOptions]);\n\n  const handleMaleChange = () => {\n    const newStatus = !isMaleChecked;\n    setIsMaleChecked(newStatus);\n\n    // Set all nested options to match the new main checkbox state\n    if (newStatus) {\n      // If the main checkbox is checked, set the options to true\n      setMaleOptions({\n        straight: true,\n        bisexual: true,\n        bicurious: true,\n        gay: true,\n        bull: true,\n      });\n    } else {\n      // If the main checkbox is unchecked, set the options to false\n      setMaleOptions({\n        straight: false,\n        bisexual: false,\n        bicurious: false,\n        gay: false,\n        bull: false,\n      });\n    }\n  };\n  function showErrorAndScroll(message, fieldId) {\n    showError(message);\n    const element = document.getElementById(fieldId);\n    if (element) {\n      element.scrollIntoView({ behavior: \"smooth\", block: \"center\" });\n    }\n  }\n  const showError = (message) => {\n    setShowPopError(true);\n    setPoperrorMessage(message);\n    setTimeout(() => {\n      setShowPopError(false);\n      setPoperrorMessage(\"\");\n    }, 1500);\n  };\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    var vl = event.target;\n    const formData = new FormData();\n    if (selectedRegion === 0 || selectedRegion === \"\") {\n      showErrorAndScroll(\"Please choose location\", \"location\");\n      return;\n    }\n    if (!nationality) {\n      showErrorAndScroll(\"Please select your nationality.\", \"nationality\");\n      return;\n    }\n    if (!bodyType) {\n      showErrorAndScroll(\"Please select your body type.\", \"bodyType\");\n      return;\n    }\n    if (heightFeet === \"null\" || heightFeet === null) {\n      showErrorAndScroll(\"Please select your height.\", \"heightFeet\");\n      return;\n    }\n    if (sexual_orientation.length === 0 || sexual_orientation === null) {\n      showErrorAndScroll(\n        \"Please choose sexual orientation\",\n        \"sexual_orientation\"\n      );\n      return;\n    }\n    if (genders === \"\" || genders === \"null\" || genders === null) {\n      showErrorAndScroll(\"Please select gender\", \"genders\");\n      return;\n    }\n    if (Singel.length === 0 || Singel === null) {\n      showErrorAndScroll(\"Please choose connect with\", \"Singel\");\n      return;\n    }\n    if (InterstedIn.length === 0 || InterstedIn === null) {\n      showErrorAndScroll(\"Please choose intersted in\", \"InterstedIn\");\n      return;\n    }\n    if (\n      relationship_status === \"\" ||\n      relationship_status === \"null\" ||\n      relationship_status === null\n    ) {\n      showErrorAndScroll(\n        \"Please select relationship status\",\n        \"relationship_status\"\n      );\n      return;\n    }\n    if (search_looking_for.length === 0 || search_looking_for === null) {\n      showErrorAndScroll(\"Please choose looking for\", \"search_looking_for\");\n      return;\n    }\n    if (degree === \"\" || degree === \"null\" || degree === null) {\n      showErrorAndScroll(\"Please select degree\", \"degree\");\n      return;\n    }\n    if (\n      drinkerValue === \"\" ||\n      drinkerValue === \"null\" ||\n      drinkerValue === null\n    ) {\n      showErrorAndScroll(\"Please select drinker\", \"drinkerValue\");\n      return;\n    }\n    if (smokerValue === \"\" || smokerValue === \"null\" || smokerValue === null) {\n      showErrorAndScroll(\"Please select smoker\", \"smokerValue\");\n      return;\n    }\n    if (tattosValue === \"\" || tattosValue === \"null\" || tattosValue === null) {\n      showErrorAndScroll(\"Please select tattoos\", \"tattosValue\");\n      return;\n    }\n    if (\n      body_piercingsValue === \"\" ||\n      body_piercingsValue === \"null\" ||\n      body_piercingsValue === null\n    ) {\n      showErrorAndScroll(\"Please select body piercing\", \"body_piercingsValue\");\n      return;\n    }\n    if (fetishValue === 0 || fetishValue === null) {\n      showErrorAndScroll(\"Please choose fetish\", \"fetishValue\");\n      return;\n    }\n    setspinner(true);\n    formData.append(\"looking_for\", editorContent !== \"\" ? editorContent : \"\");\n\n    // Append 'username' with a check\n    formData.append(\n      \"username\",\n      vl.username.value !== \"\" ? vl.username.value : \"\"\n    );\n\n    // Append other fields with checks\n    formData.append(\"location\", selectedRegion !== \"\" ? selectedRegion : \"\");\n    //formData.append(\"town\", selectedTown !== \"\" ? selectedTown : \"\");\n    formData.append(\n      \"preferences\",\n      vl.preferences.value !== \"\" ? vl.preferences.value : \"\"\n    );\n    formData.append(\n      \"nationality\",\n      vl.nationality.value !== \"\" ? vl.nationality.value : \"\"\n    );\n    formData.append(\n      \"bodytype\",\n      vl.bodytype.value !== \"\" ? vl.bodytype.value : \"\"\n    );\n    formData.append(\"height_feet\", heightFeet !== \"\" ? heightFeet : \"\");\n\n    if (Singel.length > 0) {\n      formData.append(\n        \"connectwith\",\n        JSON.stringify(Singel) // Ensure it's saved as a JSON string\n      );\n    } else {\n      formData.append(\"connectwith\", \"\"); // Append an empty string if no selection\n    }\n    if (InterstedIn.length > 0) {\n      formData.append(\n        \"interstedin\",\n        JSON.stringify(InterstedIn) // Ensure it's saved as a JSON string\n      );\n    } else {\n      formData.append(\"interstedin\", \"\"); // Append an empty string if no selection\n    }\n\n    formData.append(\"height_inches\", heightInches !== \"\" ? heightInches : \"\");\n    if (sexual_orientation.length > 0) {\n      formData.append(\n        \"sexual_orientation\",\n        JSON.stringify(sexual_orientation) // Ensure it's saved as a JSON string\n      );\n    } else {\n      formData.append(\"sexual_orientation\", \"\"); // Append an empty string if no selection\n    }\n    formData.append(\n      \"subregion\",\n      selectedSubRegion !== \"\" ? selectedSubRegion : \"\"\n    );\n    if (selectedTown.length > 0) {\n      formData.append(\n        \"town\",\n        JSON.stringify(selectedTown) // Ensure it's saved as a JSON string\n      );\n    } else {\n      formData.append(\"town\", \"\"); // Append an empty string if no selection\n    }\n    formData.append(\"genders\", genders !== \"\" ? genders : \"\");\n    formData.append(\n      \"relationship_status\",\n      relationship_status !== \"\" ? relationship_status : \"\"\n    );\n    if (search_looking_for.length > 0) {\n      formData.append(\n        \"search_looking_for\",\n        JSON.stringify(search_looking_for) // Ensure it's saved as a JSON string\n      );\n    } else {\n      formData.append(\"search_looking_for\", \"\"); // Append an empty string if no selection\n    }\n    formData.append(\"degree\", degree !== \"\" ? degree : \"\");\n    formData.append(\"fileType\", \"profileImage\");\n    formData.append(\"drinker\", drinkerValue !== \"\" ? drinkerValue : \"\");\n    formData.append(\"smoker\", smokerValue !== \"\" ? smokerValue : \"\");\n    formData.append(\"tattos\", tattosValue !== \"\" ? tattosValue : \"\");\n    formData.append(\n      \"body_piercings\",\n      body_piercingsValue !== \"\" ? body_piercingsValue : \"\"\n    );\n    if (fetishValue.length > 0) {\n      formData.append(\n        \"fetish\",\n        JSON.stringify(fetishValue) // Ensure it's saved as a JSON string\n      );\n    } else {\n      formData.append(\"fetish\", \"\"); // Append an empty string if no selection\n    }\n\n    formData.append(\"token\", LoginData.token);\n    formData.append(\"email\", LoginData.email);\n    Object.keys(maleOptions).forEach((option) => {\n      if (maleOptions[option]) {\n        formData.append(\"male[]\", option); // Append checked options as an array\n      }\n    });\n    Object.keys(femaleOptions).forEach((option) => {\n      if (femaleOptions[option]) {\n        formData.append(\"female[]\", option); // Append checked options as an array\n      }\n    });\n    Object.keys(coupleOptions).forEach((option) => {\n      if (coupleOptions[option]) {\n        formData.append(\"couple[]\", option); // Append checked options as an array\n      }\n    });\n    sexuality.forEach((item) => {\n      formData.append(\"sexuality\", item.value); // Append only the \"value\" field\n    });\n\n    formData.append(\"profile_image\", selectedFile);\n    formData.append(\"profile_image_1\", selectedFile_1);\n    formData.append(\"profile_image_2\", selectedFile_2);\n    formData.append(\"profile_image_3\", selectedFile_3);\n    formData.append(\"profile_image_4\", selectedFile_4);\n\n    formData.append(\"makeImagePrivate\", isImagePrivate ? 1 : 0);\n\n    try {\n      const res = await axios.post(apiURL + \"updateProfile\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      });\n      setspinner(false);\n      setShowPopSuccess(true);\n      setPopsuccessMessage(res.data.message);\n      setTimeout(() => {\n        setShowPopError(false);\n        setShowPopSuccess(false);\n        navigate(`/friend/${profilevalue.id}`);\n      }, 3500);\n\n      // Handle success (e.g., redirect or show a success message)\n    } catch (err) {\n      if (err.response && err.response.data && err.response.data.message) {\n        setShowPopSuccess(false);\n        setShowPopError(true);\n        setPoperrorMessage(err.response.data.message); // Store the error message in state\n      } else {\n        setShowPopSuccess(false);\n        setShowPopError(true);\n        setPoperrorMessage(\"An unknown error occurred.\");\n      }\n      setTimeout(() => {\n        setShowPopError(false);\n        setShowPopSuccess(false);\n      }, 3500);\n    }\n  };\n  const openPopup = () => {\n    setIsPopupOpen(true);\n    document.body.style.overflowY = \"hidden\";\n  };\n  const openPopup1 = () => {\n    setIsPopupOpen1(true);\n    document.body.style.overflowY = \"hidden\";\n  };\n\n  const closePopup = () => {\n    setIsPopupOpen(false);\n    document.body.style.overflowY = \"auto\";\n  };\n  const closePopup1 = () => {\n    setIsPopupOpen1(false);\n    document.body.style.overflowY = \"auto\";\n  };\n  const locations = {\n    \"Eastern Norway\": {\n      Viken: [\n        \"Drammen\",\n        \"Bærum\",\n        \"Asker\",\n        \"Moss\",\n        \"Fredrikstad\",\n        \"Sarpsborg\",\n        \"Halden\",\n        \"Lillestrøm\",\n        \"Jessheim\",\n        \"Kongsberg\",\n      ],\n      Innlandet: [\n        \"Hamar\",\n        \"Lillehammer\",\n        \"Gjøvik\",\n        \"Elverum\",\n        \"Kongsvinger\",\n        \"Tynset\",\n        \"Trysil\",\n        \"Rena\",\n      ],\n      \"Vestfold og Telemark\": [\n        \"Tønsberg\",\n        \"Sandefjord\",\n        \"Larvik\",\n        \"Skien\",\n        \"Porsgrunn\",\n        \"Notodden\",\n        \"Rjukan\",\n        \"Kragerø\",\n        \"Bø i Telemark\",\n      ],\n    },\n    \"Western Norway\": {\n      Hordaland: [\"Bergen\", \"Voss\", \"Odda\", \"Stord\", \"Os\", \"Leirvik\"],\n      \"Sogn og Fjordane\": [\n        \"Førde\",\n        \"Sogndal\",\n        \"Florø\",\n        \"Årdal\",\n        \"Stryn\",\n        \"Nordfjordeid\",\n      ],\n      Rogaland: [\n        \"Stavanger\",\n        \"Sandnes\",\n        \"Haugesund\",\n        \"Egersund\",\n        \"Bryne\",\n        \"Sauda\",\n        \"Jørpeland\",\n      ],\n      \"Møre og Romsdal\": [\n        \"Ålesund\",\n        \"Molde\",\n        \"Kristiansund\",\n        \"Åndalsnes\",\n        \"Sunndalsøra\",\n        \"Volda\",\n        \"Fosnavåg\",\n        \"Ørsta\",\n      ],\n    },\n    Trøndelag: {\n      Trøndelag: [\n        \"Trondheim\",\n        \"Steinkjer\",\n        \"Levanger\",\n        \"Stjørdal\",\n        \"Namsos\",\n        \"Orkanger\",\n        \"Røros\",\n        \"Verdal\",\n        \"Oppdal\",\n        \"Malvik\",\n        \"Melhus\",\n      ],\n    },\n    \"Northern Norway\": {\n      Nordland: [\n        \"Bodø\",\n        \"Narvik\",\n        \"Mo i Rana\",\n        \"Svolvær (Lofoten)\",\n        \"Leknes\",\n        \"Sortland\",\n        \"Mosjøen\",\n        \"Brønnøysund\",\n        \"Fauske\",\n      ],\n      \"Troms og Finnmark\": [\n        \"Tromsø\",\n        \"Alta\",\n        \"Hammerfest\",\n        \"Harstad\",\n        \"Vadsø\",\n        \"Kirkenes\",\n        \"Skjervøy\",\n        \"Nordkapp\",\n        \"Lakselv\",\n        \"Kautokeino\",\n      ],\n    },\n    Other: {},\n  };\n\n  // Map translation keys to English names for t() function\n  const regionTranslationKeys = {\n    ostlandet: \"Eastern Norway\",\n    vestlandet: \"Western Norway\",\n    trondelag: \"Trøndelag\",\n    nordnorge: \"Northern Norway\",\n    other: \"Other\",\n  };\n\n  const [selectedRegion, setSelectedRegion] = useState(\"\");\n  const [selectedTown, setSelectedTown] = useState([]);\n\n  // Handle region selection\n  const handleRegionChange = (e) => {\n    setSelectedRegion(e.target.value);\n    setSelectedSubRegion(\"\");\n    setSelectedTown([]); // Reset town when region changes\n  };\n  const handleSubRegionChange = (e) => {\n    setSelectedSubRegion(e.target.value);\n    setSelectedTown([]);\n  };\n\n  // Handle town selection\n  const handleTownChange = (event) => {\n    const { value, checked } = event.target;\n\n    setSelectedTown((prevSelectedTowns) => {\n      if (checked) {\n        // Add the town to the selected list\n        return [...prevSelectedTowns, value];\n      } else {\n        // Remove the town from the selected list\n        return prevSelectedTowns.filter((town) => town !== value);\n      }\n    });\n  };\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem(\"language\") || \"en\"; // Default to 'en' if no language is saved\n    // Change the language if it's not already the current language\n    if (i18n.language !== savedLanguage) {\n      i18n.changeLanguage(savedLanguage);\n    }\n  }, [i18n, t]);\n  console.log(\"ll\", genders);\n  const min = 15; // Start value\n  const max = 350; // End value\n  const step = 1; // Step size\n\n  // Create an array of numbers from min to max\n  const optionsheight = Array.from(\n    { length: (max - min) / step + 1 },\n    (_, i) => min + i * step\n  );\n  const selectedSexualityOptions = sexuality.filter((option) =>\n    sexuality.includes(option.value)\n  );\n  const closepopup11 = async () => {\n    setIsPopupOpen1(false);\n    document.body.style.overflowY = \"auto\";\n  };\n  const customStyles = {\n    control: (provided) => ({\n      ...provided,\n      backgroundColor: \"lightgray\",\n      padding: \"5px 10px\",\n      border: \"1px solid black\",\n      boxShadow: \"0 2px 4px rgba(0,0,0,.2)\",\n    }),\n    option: (provided, state) => ({\n      ...provided,\n      borderBottom: \"1px dotted #C2B59F\",\n      color: state.isSelected ? \"white\" : \"black\",\n      backgroundColor: state.isSelected ? \"#C2B59F\" : \"white\",\n      \":hover\": {\n        backgroundColor: \"#C2B59F\", // Change the background color on hover\n        color: \"white\", // Change the text color on hover\n      },\n    }),\n    multiValue: (provided) => ({\n      ...provided,\n      backgroundColor: \"#C2B59F\", // Style for selected items\n      color: \"white\",\n    }),\n    multiValueLabel: (provided) => ({\n      ...provided,\n      color: \"white\",\n    }),\n    multiValueRemove: (provided) => ({\n      ...provided,\n      color: \"white\",\n      \":hover\": {\n        backgroundColor: \"#C2B59F\",\n        color: \"white\",\n      },\n    }),\n  };\n  //Get All Albums\n  useEffect(() => {\n    getallAlbums();\n  }, []);\n  const getallAlbums = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      user_id: userLogin.id,\n    };\n\n    try {\n      const res = await axios.post(\n        apiURLMembers + \"getPageEditAlbums\",\n        formData,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        }\n      );\n      setgetallAlbum(res.data.results);\n      console.log(res.data.results);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        // console.error(\"Request data:\", err.request);\n      } else {\n        // console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  //Get All Albums\n  useEffect(() => {\n    if (location.pathname === \"/editprofile/viewrequest\") {\n      setIsPopupOpen(true);\n      navigate(\"/editprofile\");\n    }\n  }, [location.pathname]);\n  const [ImagesFriendsOwn, setImagesFriendsOwn] = useState([]);\n  const [isonlyallbumPublic, setisonlyallbumPublic] = useState([]);\n  useEffect(() => {\n    get_albumStatusonlyPublic();\n  }, []);\n  const get_albumStatusonlyPublic = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      user_id: userLogin.id,\n    };\n\n    try {\n      const res = await axios.post(\n        apiURLMembers + \"get_albumStatusonlyPublic\",\n        formData,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        }\n      );\n      console.log(res.data.results);\n      setisonlyallbumPublic(res.data.results);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        //console.error(\"Request data:\", err.request);\n      } else {\n        //console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  useEffect(() => {\n    getUserDetailsOwn();\n  }, []);\n  const getUserDetailsOwn = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n\n    let formData = {\n      user_id: userLogin.id,\n    };\n\n    try {\n      const res = await axios.post(\n        apiURLMembers + \"getUserDetailsOwn\",\n        formData,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n\n      // Extract the images/videos from the API response\n      const mediaList = res.data.results;\n      console.log(mediaList);\n      // Initialize empty arrays for images and videos\n      let images = [];\n      let videos = [];\n\n      // Supported image and video extensions\n      const imageExtensions = [\"jpg\", \"jpeg\", \"png\", \"gif\", \"webp\"];\n      const videoExtensions = [\"mp4\", \"mov\", \"avi\", \"mkv\", \"webm\"];\n\n      mediaList.forEach((media) => {\n        if (typeof media.images === \"string\") {\n          let mediaArray = JSON.parse(media.images);\n\n          mediaArray.forEach((file) => {\n            images.push({ file, usersalbum_id: media.usersalbum_id });\n          });\n        }\n      });\n      setImagesFriendsOwn(images);\n    } catch (err) {\n      console.error(\"Error fetching data:\", err);\n    }\n  };\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [isonlyallbumfriend, setisonlyallbumfriend] = useState([]);\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      if (event.key === \"Escape\") {\n        setSelectedImage(null);\n      }\n    };\n\n    window.addEventListener(\"keydown\", handleKeyDown);\n\n    // Cleanup the event listener on component unmount\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [setSelectedImage]);\n\n  return (\n    <>\n      <Headertwo />\n      {showPopSuccess && <SuccessPop message={successPopMessage} />}\n      {showPopError && <ErrorPop message={errorPopMessage} />}\n      <section className=\"d-block editblock gapy\">\n        <div className=\"container-lg\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <form\n                onSubmit={handleSubmit}\n                action=\"javascript:void(0)\"\n                method=\"post\"\n              >\n                <div className=\"row gy-4\">\n                  {/* for desktop */}\n                  <div className=\"col-md-3 d-none d-md-block\">\n                    <div className=\"row useruploadpic gy-4\">\n                      <div className=\"col-12\">\n                        <div className=\"uploadfile rel bgload mb-3 rounded-3 overflow-hidden\">\n                          <input\n                            type=\"file\"\n                            name=\"profile_image\"\n                            accept=\"image/*\" // Accept only image files\n                            onChange={handleFileChange}\n                            className=\"fileload\"\n                          />\n                          <div className=\"upload_image\">\n                            {imageUrl ? ( // Display the image URL if available\n                              <img\n                                className=\"w-100 h-100\"\n                                src={imageUrl} // Use the URL created from the file\n                                alt=\"Selected\"\n                              />\n                            ) : (\n                              selectedFile && ( // Fallback to show the previously fetched image\n                                <img\n                                  className=\"w-100 h-100\"\n                                  src={selectedFile} // If it's an image URL from the profile\n                                  alt=\"Profile\"\n                                />\n                              )\n                            )}\n                          </div>\n                          <div className=\"inload\">\n                            <div>\n                              <BsCloudUpload />\n                              <h3>{t(\"Upload_image\")}</h3>\n                            </div>\n                          </div>\n                          {errorMessage && (\n                            <p className=\"text-danger\">{errorMessage}</p>\n                          )}\n                        </div>\n                        <div className=\"listbox d-flex justify-content-center\">\n                          <label className=\"cbox\">\n                            {t(\"Make_Image_Private\")}\n                            <input\n                              type=\"checkbox\"\n                              name=\"makeImagePrivate\"\n                              checked={isImagePrivate} // Bind checkbox to the state\n                              onChange={handleCheckChange}\n                            />\n                            <span className=\"checkmark\"></span>\n                          </label>\n                        </div>\n                      </div>\n                      {Array.isArray(isonlyallbumfriend) &&\n                        isonlyallbumfriend.map((item, index) => {\n                          // Parse the JSON string into an array\n                          const images = JSON.parse(item.images);\n                          if (\n                            item.visibility === \"Friends_visible\" &&\n                            item.addToAlbum === \"No\"\n                          ) {\n                            return images.map((image, imgIndex) => (\n                              <div className=\"col-6\" key={image}>\n                                <div className=\"uploadfile rel smallload\">\n                                  <Link\n                                    className=\"dd d-flex flex-column gap-3 justify-content-center align-items-center search_twoinfo\"\n                                    to=\"\"\n                                  >\n                                    <div className=\"d-block search_twoinfoicon\">\n                                      <MediaRenderer\n                                        onClick={() => setSelectedImage(image)}\n                                        className=\"w-100 h-100 object-fit-cover\"\n                                        url={image}\n                                      />\n                                    </div>\n                                  </Link>\n                                </div>\n                              </div>\n                            ));\n                          }\n                        })}\n                      {Array.isArray(ImagesFriendsOwn) &&\n                        ImagesFriendsOwn.map((item, index) => (\n                          <div className=\"col-6\" key={item.file || index}>\n                            <div className=\"uploadfile rel smallload\">\n                              <Link\n                                className=\"dd d-flex p-0 flex-column gap-3 justify-content-center align-items-center search_twoinfo\"\n                                to=\"\"\n                              >\n                                <div className=\"d-block w-100 h-100\">\n                                  <MediaRenderer\n                                    onClick={() => setSelectedImage(item.file)}\n                                    className=\"w-100 h-100 object-fit-cover\"\n                                    url={item.file}\n                                  />\n                                </div>\n                              </Link>\n                            </div>\n                          </div>\n                        ))}\n                      {Array.isArray(isonlyallbumPublic) &&\n                        isonlyallbumPublic.map((item, index) => {\n                          // Parse the JSON string into an array\n                          const images = JSON.parse(item.images);\n                          if (\n                            item.visibility === \"Public_visible\" &&\n                            item.addToAlbum === \"No\"\n                          ) {\n                            return images.map((image, imgIndex) => (\n                              <div className=\"col-6\" key={image}>\n                                <div className=\"uploadfile rel smallload\">\n                                  <Link\n                                    className=\"dd p-0 d-flex flex-column gap-3 justify-content-center align-items-center search_twoinfo\"\n                                    to=\"\"\n                                  >\n                                    <div className=\"d-block w-100 h-100\">\n                                      <MediaRenderer\n                                        onClick={() => setSelectedImage(image)}\n                                        className=\"w-100 h-100 object-fit-cover\"\n                                        url={image}\n                                      />\n                                    </div>\n                                  </Link>\n                                </div>\n                              </div>\n                            ));\n                          }\n                        })}\n\n                      {getallAlbum.map((album) => (\n                        <div className=\"col-12\" key={album.id}>\n                          <div className=\"uploadfile rel pvt_album smallload\">\n                            <Link\n                              className=\"dd d-flex flex-column gap-3 justify-content-center align-items-center search_twoinfo\"\n                              to={\n                                album.visibility === \"Friends_visible\" ||\n                                album.visibility === \"Public_visible\"\n                                  ? `/previewimages/${album.id}`\n                                  : `/privatealbum/${album.id}`\n                              }\n                              target=\"_blank\"\n                            >\n                              <div className=\"text-decoration-none\">\n                                <strong>{album.name}</strong>\n                              </div>\n                              <div className=\"d-block search_twoinfoicon\">\n                                {album.visibility === \"Friends_visible\" ||\n                                album.visibility === \"Public_visible\" ? (\n                                  <img\n                                    className=\"w-100 h-100\"\n                                    src={require(\"../assets/images/ms3.png\")}\n                                    alt=\"Album Preview\"\n                                  />\n                                ) : (\n                                  <img\n                                    className=\"w-100 h-100\"\n                                    src={require(\"../assets/images/padlock.png\")}\n                                    alt=\"Album Preview\"\n                                  />\n                                )}\n                              </div>\n                              {(album.visibility === \"Friends_visible\" ||\n                                album.visibility === \"Public_visible\") &&\n                                album.cover_image !== null && (\n                                  <div className=\"lock_image\">\n                                    <img\n                                      className=\"w-100 h-100\"\n                                      src={album.cover_image}\n                                      alt=\"Private Album\"\n                                    />\n                                  </div>\n                                )}\n\n                              {album.visibility === \"Friends_visible\" ||\n                              album.visibility === \"Public_visible\" ? (\n                                <p>{t(\"PreviewImages\")}</p>\n                              ) : (\n                                <p>{t(\"PRIVATE_ALBUM\")}</p> // Display \"Private\" for non-friend visible albums\n                              )}\n                              <strong>{album.name}</strong>\n                            </Link>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                  {/* for desktop */}\n                  {/* for mobile */}\n                  <div className=\"col-12 d-block d-md-none\">\n                    <div className=\"d-d-block edittitle mb-4\">\n                      <h3 className=\"\">{t(\"Edit_your_profile\")}</h3>\n                    </div>\n                    <div className=\"row useruploadpic gy-4\">\n                      <div className=\"col-5\">\n                        <div className=\"uploadfile rel bgload rounded-3 overflow-hidden\">\n                          <input\n                            type=\"file\"\n                            name=\"profile_image\"\n                            accept=\"image/*\" // Accept only image files\n                            onChange={handleFileChange}\n                            className=\"fileload\"\n                          />\n                          <div className=\"upload_image\">\n                            {imageUrl ? ( // Display the image URL if available\n                              <img\n                                className=\"w-100 h-100\"\n                                src={imageUrl} // Use the URL created from the file\n                                alt=\"Selected\"\n                              />\n                            ) : (\n                              selectedFile && ( // Fallback to show the previously fetched image\n                                <img\n                                  className=\"w-100 h-100\"\n                                  src={selectedFile} // If it's an image URL from the profile\n                                  alt=\"Profile\"\n                                />\n                              )\n                            )}\n                          </div>\n                          <div className=\"inload\">\n                            <div>\n                              <BsCloudUpload />\n                              <h3>{t(\"Upload_image\")}</h3>\n                            </div>\n                          </div>\n                          {errorMessage && (\n                            <p className=\"text-danger\">{errorMessage}</p>\n                          )}\n                        </div>\n                      </div>\n                      <div className=\"col-7\">\n                        <div className=\"d-flex flex-column h-100\">\n                          <div className=\"d-flex flex-wrap gap-3  justify-content-end\">\n                            <button\n                              type=\"button\"\n                              onClick={openPopup1}\n                              className=\"savebtn\"\n                            >\n                              {t(\"uploda_private_album\")}\n                            </button>\n                            <button\n                              type=\"button\"\n                              onClick={openPopup}\n                              className=\"savebtn\"\n                            >\n                              {t(\"View_Request\")}\n                            </button>\n                            <button type=\"submit\" className=\"savebtn\">\n                              {t(\"Save_Profile\")}\n                            </button>\n                          </div>\n                          <div className=\"overscrolllog mt-auto \">\n                            <div className=\"overscrolllog_mob\">\n                              {Array.isArray(isonlyallbumfriend) &&\n                                isonlyallbumfriend.map((item, index) => {\n                                  // Parse the JSON string into an array\n                                  const images = JSON.parse(item.images);\n                                  if (\n                                    item.visibility === \"Friends_visible\" &&\n                                    item.addToAlbum === \"No\"\n                                  ) {\n                                    return images.map((image, imgIndex) => (\n                                      <div\n                                        className=\"overscrolllog_mob4\"\n                                        key={image}\n                                      >\n                                        <div className=\"uploadfile rel smallload\">\n                                          <Link\n                                            className=\"dd d-flex flex-column gap-3 justify-content-center align-items-center search_twoinfo\"\n                                            to=\"\"\n                                          >\n                                            <div className=\"d-block search_twoinfoicon\">\n                                              <MediaRenderer\n                                                onClick={() =>\n                                                  setSelectedImage(image)\n                                                }\n                                                className=\"w-100 h-100 object-fit-cover\"\n                                                url={image}\n                                              />\n                                            </div>\n                                          </Link>\n                                        </div>\n                                      </div>\n                                    ));\n                                  }\n                                })}\n                              {Array.isArray(ImagesFriendsOwn) &&\n                                ImagesFriendsOwn.map((item, index) => (\n                                  <div\n                                    className=\"overscrolllog_mob4\"\n                                    key={item.file || index}\n                                  >\n                                    <div className=\"uploadfile rel smallload\">\n                                      <Link\n                                        className=\"dd d-flex p-0 flex-column gap-3 justify-content-center align-items-center search_twoinfo\"\n                                        to=\"\"\n                                      >\n                                        <div className=\"d-block w-100 h-100\">\n                                          <MediaRenderer\n                                            onClick={() =>\n                                              setSelectedImage(item.file)\n                                            }\n                                            className=\"w-100 h-100 object-fit-cover\"\n                                            url={item.file}\n                                          />\n                                        </div>\n                                      </Link>\n                                    </div>\n                                  </div>\n                                ))}\n                              {Array.isArray(isonlyallbumPublic) &&\n                                isonlyallbumPublic.map((item, index) => {\n                                  // Parse the JSON string into an array\n                                  const images = JSON.parse(item.images);\n                                  if (\n                                    item.visibility === \"Public_visible\" &&\n                                    item.addToAlbum === \"No\"\n                                  ) {\n                                    return images.map((image, imgIndex) => (\n                                      <div\n                                        className=\"overscrolllog_mob4\"\n                                        key={image}\n                                      >\n                                        <div className=\"uploadfile rel smallload\">\n                                          <Link\n                                            className=\"dd p-0 d-flex flex-column gap-3 justify-content-center align-items-center search_twoinfo\"\n                                            to=\"\"\n                                          >\n                                            <div className=\"d-block w-100 h-100\">\n                                              <MediaRenderer\n                                                onClick={() =>\n                                                  setSelectedImage(image)\n                                                }\n                                                className=\"w-100 h-100 object-fit-cover\"\n                                                url={image}\n                                              />\n                                            </div>\n                                          </Link>\n                                        </div>\n                                      </div>\n                                    ));\n                                  }\n                                })}\n\n                              {getallAlbum.map((album) => (\n                                <div\n                                  className=\"overscrolllog_mob6\"\n                                  key={album.id}\n                                >\n                                  <div className=\"uploadfile rel pvt_album smallload\">\n                                    <Link\n                                      className=\"dd d-flex flex-column gap-3 justify-content-center align-items-center search_twoinfo\"\n                                      to={\n                                        album.visibility === \"Friends_visible\"\n                                          ? `/previewimages/${album.id}`\n                                          : `/privatealbum/${album.id}`\n                                      }\n                                      target=\"_blank\"\n                                    >\n                                      <div className=\"text-decoration-none\">\n                                        <strong>{album.name}</strong>\n                                      </div>\n                                      <div className=\"d-block search_twoinfoicon\">\n                                        {album.visibility ===\n                                          \"Friends_visible\" ||\n                                        album.visibility ===\n                                          \"Public_visible\" ? (\n                                          <img\n                                            className=\"w-100 h-100\"\n                                            src={require(\"../assets/images/ms3.png\")}\n                                            alt=\"Album Preview\"\n                                          />\n                                        ) : (\n                                          <img\n                                            className=\"w-100 h-100\"\n                                            src={require(\"../assets/images/padlock.png\")}\n                                            alt=\"Album Preview\"\n                                          />\n                                        )}\n                                      </div>\n                                      {(album.visibility ===\n                                        \"Friends_visible\" ||\n                                        album.visibility ===\n                                          \"Public_visible\") &&\n                                        album.cover_image !== null && (\n                                          <div className=\"lock_image\">\n                                            <img\n                                              className=\"w-100 h-100\"\n                                              src={album.cover_image}\n                                              alt=\"Private Album\"\n                                            />\n                                          </div>\n                                        )}\n\n                                      {album.visibility === \"Friends_visible\" ||\n                                      album.visibility === \"Public_visible\" ? (\n                                        <p>{t(\"PreviewImages\")}</p>\n                                      ) : (\n                                        <p>{t(\"PRIVATE_ALBUM\")}</p> // Display \"Private\" for non-friend visible albums\n                                      )}\n                                      <strong>{album.name}</strong>\n                                    </Link>\n                                  </div>\n                                </div>\n                              ))}\n                              {/* <div className=\"col-6 col-sm-4\">\n                              <div className=\"uploadfile rel smallload mobb\">\n                                <input\n                                  type=\"file\"\n                                  name=\"profile_image_4\"\n                                  id=\"\"\n                                  accept=\"image/*\" // Accept only image files\n                                  onChange={handleFileChange_4}\n                                  className=\"fileload\"\n                                />\n                                <div className=\"upload_image\">\n                                  {imageUrl4 ? ( // Display the image URL if available\n                                    <img\n                                      className=\"w-100 h-100\"\n                                      src={imageUrl4} // Use the URL created from the file\n                                      alt=\"Selected\"\n                                    />\n                                  ) : (\n                                    selectedFile_4 && ( // Fallback to show the previously fetched image\n                                      <img\n                                        className=\"w-100 h-100\"\n                                        src={selectedFile_4} // If it's an image URL from the profile\n                                        alt=\"Profile\"\n                                      />\n                                    )\n                                  )}\n                                </div>\n                                <div className=\"inload\">\n                                  <FiPlus />\n                                </div>\n                              </div>\n                            </div> */}\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"col-12\">\n                        <div className=\"listbox d-flex \">\n                          <label className=\"cbox\">\n                            {t(\"Make_Image_Private\")}\n                            <input\n                              type=\"checkbox\"\n                              name=\"makeImagePrivate\"\n                              checked={isImagePrivate} // Bind checkbox to the state\n                              onChange={handleCheckChange}\n                            />\n                            <span className=\"checkmark\"></span>\n                          </label>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  {/* for mobile */}\n                  <div className=\"col-md-9\">\n                    <div className=\"d-flex flex-column gap-3 formlook\">\n                      <div className=\"d-flex flex-column flex-md-row gap-3 justify-content-md-between edittitle\">\n                        <h3 className=\"d-none d-md-block\">\n                          {t(\"Edit_your_profile\")}\n                        </h3>\n\n                        <div className=\"d-none d-md-flex flex-wrap flex-md-nowrap justify-content-md-between gap-2\">\n                          <button\n                            type=\"button\"\n                            onClick={openPopup1}\n                            className=\"savebtn\"\n                          >\n                            {t(\"uploda_private_album\")}\n                          </button>\n                          <button\n                            type=\"button\"\n                            onClick={openPopup}\n                            className=\"savebtn\"\n                          >\n                            {t(\"View_Request\")}\n                          </button>\n                          <button type=\"submit\" className=\"savebtn\">\n                            {t(\"Save_Profile\")}\n                          </button>\n                        </div>\n                      </div>\n                      <div className=\"d-flex flex-column gap-2\">\n                        <label htmlFor=\"\">{t(\"iamlooking\")}</label>\n                        <div style={{ height: \"400px\" }}>\n                          <Editor\n                            apiKey=\"143ut3uu44px2okporfe4favr5f39zv8rdlrcoc10z9jks6u\"\n                            onInit={(_evt, editor) =>\n                              (editorRef.current = editor)\n                            }\n                            value={editorContent} // Use value to dynamically set content\n                            onEditorChange={(content) =>\n                              setEditorContent(content)\n                            }\n                            init={{\n                              height: 500,\n                              menubar: false,\n                              plugins: [\n                                \"advlist\",\n                                \"autolink\",\n                                \"lists\",\n                                \"link\",\n                                \"image\",\n                                \"charmap\",\n                                \"preview\",\n                                \"anchor\",\n                                \"searchreplace\",\n                                \"visualblocks\",\n                                \"code\",\n                                \"fullscreen\",\n                                \"insertdatetime\",\n                                \"media\",\n                                \"table\",\n                                \"help\",\n                                \"wordcount\",\n                                \"emoticons\", // Added emoji plugin\n                              ],\n                              toolbar:\n                                \"undo redo | blocks | \" +\n                                \"bold italic forecolor | alignleft aligncenter \" +\n                                \"alignright alignjustify | bullist numlist outdent indent | \" +\n                                \"removeformat | emoticons | help\", // Added emoticons button\n                              content_style:\n                                \"body { font-family:Helvetica,Arial,sans-serif; font-size:14px }\",\n                            }}\n                          />\n                        </div>\n                      </div>\n                      <div className=\"d-flex flex-column gap-2\">\n                        <label htmlFor=\"\">{t(\"Username\")}</label>\n                        <input\n                          type=\"text\"\n                          defaultValue={profilevalue.username}\n                          placeholder={t(\"Writesomething\")}\n                          name=\"username\"\n                        />\n                      </div>\n                      <div className=\"d-flex flex-column gap-3\" id=\"location\">\n                        {/* Region */}\n                        <label htmlFor=\"region\">{t(\"Location\")}</label>\n                        <select\n                          id=\"region\"\n                          name=\"region\"\n                          value={selectedRegion}\n                          onChange={handleRegionChange}\n                        >\n                          <option value=\"\">-- {t(\"SelectRegion\")} --</option>\n                          {Object.keys(locations).map((regionKey) => (\n                            <option key={regionKey} value={regionKey}>\n                              {t(\n                                Object.keys(regionTranslationKeys).find(\n                                  (key) =>\n                                    regionTranslationKeys[key] === regionKey\n                                ) || regionKey\n                              )}\n                            </option>\n                          ))}\n                        </select>\n\n                        {/* Subregion */}\n                        {selectedRegion && locations[selectedRegion] && (\n                          <>\n                            <label htmlFor=\"subregion\">{t(\"City\")}</label>\n                            <select\n                              id=\"subregion\"\n                              name=\"subregion\"\n                              value={selectedSubRegion}\n                              onChange={handleSubRegionChange}\n                            >\n                              <option value=\"\">-- {t(\"SelectCity\")} --</option>\n                              {Object.keys(locations[selectedRegion]).map(\n                                (subRegion) => (\n                                  <option key={subRegion} value={subRegion}>\n                                    {subRegion}\n                                  </option>\n                                )\n                              )}\n                            </select>\n                          </>\n                        )}\n\n                        {/* Town */}\n                        {selectedRegion &&\n                          selectedSubRegion &&\n                          locations[selectedRegion]?.[selectedSubRegion] && (\n                            <>\n                              <label htmlFor=\"town\">{t(\"Town\")}</label>\n                              <div\n                                id=\"town\"\n                                className=\"d-flex flex-column gap-1\"\n                              >\n                                {locations[selectedRegion][\n                                  selectedSubRegion\n                                ].map((town, index) => (\n                                  <div\n                                    key={index}\n                                    className=\"d-flex gap-2 align-items-center\"\n                                  >\n                                    <input\n                                      type=\"checkbox\"\n                                      id={`town-${index}`}\n                                      value={town}\n                                      checked={selectedTown.includes(town)}\n                                      onChange={handleTownChange}\n                                    />\n                                    <label htmlFor={`town-${index}`}>\n                                      {town}\n                                    </label>\n                                  </div>\n                                ))}\n                              </div>\n                            </>\n                          )}\n                      </div>\n                      <div className=\"d-flex flex-column gap-2\">\n                        <label htmlFor=\"\">{t(\"Preferences\")}</label>\n                        <input\n                          type=\"text\"\n                          defaultValue={profilevalue.preferences}\n                          placeholder={t(\"Writesomething\")}\n                          name=\"preferences\"\n                        />\n                      </div>\n                      {/* <ul className=\"d-flex flex-column gap-3 list-group-item\">\n                        <li className=\"listbox \">\n                          <label\n                            className=\"d-flex align-items-center gap-2 cbox\"\n                            htmlFor=\"couple\"\n                          >\n                            <input\n                              id=\"couple\"\n                              name=\"couple\"\n                              value=\"couple\"\n                              type=\"checkbox\"\n                              checked={isCoupleChecked}\n                              onChange={handleCoupleChange}\n                            />\n                            <span className=\"checkmark\"></span>\n                            <p>{t(\"Couple\")}</p>\n                          </label>\n                          <ul className=\"d-flex flex-column gap-1 mt-3 couple_list\">\n                            {Object.keys(coupleOptions).map((option) => (\n                              <li className=\"couple_inner\" key={option}>\n                                <label\n                                  className=\"d-flex align-items-center gap-2 cbox\"\n                                  htmlFor={option}\n                                >\n                                  <input\n                                    id={option}\n                                    name=\"couple\"\n                                    value={option}\n                                    type=\"checkbox\"\n                                    checked={coupleOptions[option]}\n                                    onChange={() =>\n                                      handleOptionChangeCouple(option)\n                                    }\n                                  />\n                                  <span className=\"checkmark\"></span>\n                                  <p>\n                                    {option.charAt(0).toUpperCase() +\n                                      option\n                                        .slice(1)\n                                        .replace(/([A-Z])/g, \" $1\")}\n                                  </p>\n                                </label>\n                              </li>\n                            ))}\n                          </ul>\n                        </li>\n                        <li className=\"listbox \">\n                          <label\n                            className=\"d-flex align-items-center gap-2 cbox\"\n                            htmlFor=\"female\"\n                          >\n                            <input\n                              id=\"female\"\n                              name=\"female\"\n                              value=\"female\"\n                              type=\"checkbox\"\n                              checked={isFemaleChecked}\n                              onChange={handleFemaleChange}\n                            />\n                            <span className=\"checkmark\"></span>\n                            <p>{t(\"Female\")}</p>\n                          </label>\n                          <ul className=\"d-flex flex-column gap-1 mt-3 couple_list\">\n                            {Object.keys(femaleOptions).map((option) => (\n                              <li className=\"couple_inner\" key={option}>\n                                <label\n                                  className=\"d-flex align-items-center gap-2 cbox\"\n                                  htmlFor={option}\n                                >\n                                  <input\n                                    id={option}\n                                    name=\"female\"\n                                    value={option}\n                                    type=\"checkbox\"\n                                    checked={femaleOptions[option]}\n                                    onChange={() =>\n                                      handleOptionChangeFemaless(option)\n                                    }\n                                  />\n                                  <span className=\"checkmark\"></span>\n                                  <p>\n                                    {option.charAt(0).toUpperCase() +\n                                      option\n                                        .slice(1)\n                                        .replace(/([A-Z])/g, \" $1\")}\n                                  </p>\n                                </label>\n                              </li>\n                            ))}\n                          </ul>\n                        </li>\n                        <li className=\"listbox \">\n                          <label\n                            className=\"d-flex align-items-center gap-2 cbox\"\n                            htmlFor=\"male\"\n                          >\n                            <input\n                              id=\"male\"\n                              name=\"male\"\n                              value=\"male\"\n                              type=\"checkbox\"\n                              checked={\n                                maleOptions.straight ||\n                                maleOptions.bisexual ||\n                                maleOptions.bicurious ||\n                                maleOptions.gay ||\n                                maleOptions.bull\n                              } // Check if any of the male options are true\n                              onChange={handleMaleChange} // Optionally handle changes for \"Male\" checkbox\n                            />\n                            <span className=\"checkmark\"></span>\n                            <p>{t(\"Male\")}</p>\n                          </label>\n\n                          <ul className=\"d-flex flex-column gap-1 mt-3 couple_list\">\n                            {Object.keys(maleOptions).map((option) => (\n                              <li className=\"couple_inner\" key={option}>\n                                <label\n                                  className=\"d-flex align-items-center gap-2 cbox\"\n                                  htmlFor={option}\n                                >\n                                  <input\n                                    id={option}\n                                    name=\"male\"\n                                    value={option}\n                                    type=\"checkbox\"\n                                    checked={maleOptions[option]} // Reflect the checked state from maleOptions\n                                    onChange={() =>\n                                      handleOption_ChangeMale(option)\n                                    } // Handle changes\n                                  />\n                                  <span className=\"checkmark\"></span>\n                                  <p>\n                                    {option.charAt(0).toUpperCase() +\n                                      option\n                                        .slice(1)\n                                        .replace(/([A-Z])/g, \" $1\")}\n                                  </p>\n                                </label>\n                              </li>\n                            ))}\n                          </ul>\n                        </li>\n                      </ul> */}\n                      <Accordion>\n                        <AccordionItem>\n                          <AccordionItemHeading>\n                            <AccordionItemButton>\n                              <div\n                                className=\"d-flex gap-2 align-items-center\"\n                                id=\"nationality\"\n                              >\n                                <div className=\"flex-shrink-0\">\n                                  <div className=\"acciconimg fulw\">\n                                    <img src={de1} alt=\"accimg\" />\n                                  </div>\n                                </div>\n                                <div className=\"flex-grow-1\">\n                                  <h4>{t(\"Nationality\")}</h4>\n                                </div>\n                              </div>\n                            </AccordionItemButton>\n                          </AccordionItemHeading>\n                          <AccordionItemPanel>\n                            <div className=\"listbox d-flex flex-wrap gap-3\">\n                              <label class=\"cbox\">\n                                {t(\"Caucasian\")}\n                                <input\n                                  type=\"radio\"\n                                  name=\"nationality\"\n                                  value=\"Caucasian\"\n                                  checked={nationality === \"Caucasian\"} // Check if this option is selected\n                                  onChange={handleNationalityChange}\n                                />\n                                <span class=\"checkmark\"></span>\n                              </label>\n\n                              <label class=\"cbox\">\n                                {t(\"Hispanic\")}\n                                <input\n                                  type=\"radio\"\n                                  name=\"nationality\"\n                                  value=\"Hispanic\"\n                                  checked={nationality === \"Hispanic\"} // Check if this option is selected\n                                  onChange={handleNationalityChange}\n                                />\n                                <span class=\"checkmark\"></span>\n                              </label>\n\n                              <label class=\"cbox\">\n                                {t(\"Asian\")}\n                                <input\n                                  type=\"radio\"\n                                  name=\"nationality\"\n                                  value=\"Asian\"\n                                  checked={nationality === \"Asian\"} // Check if this option is selected\n                                  onChange={handleNationalityChange}\n                                />\n                                <span class=\"checkmark\"></span>\n                              </label>\n                              <label class=\"cbox\">\n                                {t(\"African\")}\n                                <input\n                                  type=\"radio\"\n                                  name=\"nationality\"\n                                  value=\"African\"\n                                  checked={nationality === \"African\"} // Check if this option is selected\n                                  onChange={handleNationalityChange}\n                                />\n                                <span class=\"checkmark\"></span>\n                              </label>\n\n                              <label class=\"cbox\">\n                                {t(\"Indian\")}\n                                <input\n                                  type=\"radio\"\n                                  name=\"nationality\"\n                                  value=\"Indian\"\n                                  checked={nationality === \"Indian\"} // Check if this option is selected\n                                  onChange={handleNationalityChange}\n                                />\n                                <span class=\"checkmark\"></span>\n                              </label>\n\n                              <label class=\"cbox\">\n                                {t(\"Middle_Eastern\")}\n                                <input\n                                  type=\"radio\"\n                                  name=\"nationality\"\n                                  value=\"Middle Eastern\"\n                                  checked={nationality === \"Middle Eastern\"} // Check if this option is selected\n                                  onChange={handleNationalityChange}\n                                />\n                                <span class=\"checkmark\"></span>\n                              </label>\n\n                              <label class=\"cbox\">\n                                {t(\"Jewish\")}\n                                <input\n                                  type=\"radio\"\n                                  name=\"nationality\"\n                                  value=\"Jewish\"\n                                  checked={nationality === \"Jewish\"} // Check if this option is selected\n                                  onChange={handleNationalityChange}\n                                />\n                                <span class=\"checkmark\"></span>\n                              </label>\n\n                              <label class=\"cbox\">\n                                {t(\"Other\")}\n                                <input\n                                  type=\"radio\"\n                                  name=\"nationality\"\n                                  value=\"Other\"\n                                  checked={nationality === \"Other\"} // Check if this option is selected\n                                  onChange={handleNationalityChange}\n                                />\n                                <span class=\"checkmark\"></span>\n                              </label>\n                            </div>\n                          </AccordionItemPanel>\n                        </AccordionItem>\n                        <AccordionItem>\n                          <AccordionItemHeading>\n                            <AccordionItemButton>\n                              <div\n                                className=\"d-flex gap-2 align-items-center\"\n                                id=\"bodyType\"\n                              >\n                                <div className=\"flex-shrink-0\">\n                                  <div className=\"acciconimg fulw\">\n                                    <img src={de2} alt=\"accimg\" />\n                                  </div>\n                                </div>\n                                <div className=\"flex-grow-1\">\n                                  <h4>{t(\"Bodytype\")}</h4>\n                                </div>\n                              </div>\n                            </AccordionItemButton>\n                          </AccordionItemHeading>\n                          <AccordionItemPanel>\n                            <div className=\"listbox d-flex flex-wrap gap-3\">\n                              <label className=\"cbox\">\n                                {t(\"Slim\")}\n                                <input\n                                  type=\"radio\"\n                                  name=\"bodytype\"\n                                  value=\"slim\"\n                                  checked={bodyType === \"slim\"} // Check if this option is selected\n                                  onChange={handleBodyTypeChange} // Update state on change\n                                />\n                                <span className=\"checkmark\"></span>\n                              </label>\n\n                              <label className=\"cbox\">\n                                {t(\"Athletic\")}\n                                <input\n                                  type=\"radio\"\n                                  name=\"bodytype\"\n                                  value=\"athletic\"\n                                  checked={bodyType === \"athletic\"} // Check if this option is selected\n                                  onChange={handleBodyTypeChange} // Update state on change\n                                />\n                                <span className=\"checkmark\"></span>\n                              </label>\n\n                              <label className=\"cbox\">\n                                {t(\"Average\")}\n                                <input\n                                  type=\"radio\"\n                                  name=\"bodytype\"\n                                  value=\"average\"\n                                  checked={bodyType === \"average\"} // Check if this option is selected\n                                  onChange={handleBodyTypeChange} // Update state on change\n                                />\n                                <span className=\"checkmark\"></span>\n                              </label>\n\n                              <label className=\"cbox\">\n                                {t(\"Curvy\")}\n                                <input\n                                  type=\"radio\"\n                                  name=\"bodytype\"\n                                  value=\"curvy\"\n                                  checked={bodyType === \"curvy\"} // Check if this option is selected\n                                  onChange={handleBodyTypeChange} // Update state on change\n                                />\n                                <span className=\"checkmark\"></span>\n                              </label>\n\n                              <label className=\"cbox\">\n                                {t(\"Full_figured\")}\n                                <input\n                                  type=\"radio\"\n                                  name=\"bodytype\"\n                                  value=\"full-figured\"\n                                  checked={bodyType === \"full-figured\"} // Check if this option is selected\n                                  onChange={handleBodyTypeChange} // Update state on change\n                                />\n                                <span className=\"checkmark\"></span>\n                              </label>\n\n                              <label className=\"cbox\">\n                                {t(\"Plus_size\")}\n                                <input\n                                  type=\"radio\"\n                                  name=\"bodytype\"\n                                  value=\"plus-size\"\n                                  checked={bodyType === \"plus-size\"} // Check if this option is selected\n                                  onChange={handleBodyTypeChange} // Update state on change\n                                />\n                                <span className=\"checkmark\"></span>\n                              </label>\n\n                              <label className=\"cbox\">\n                                {t(\"Muscular\")}\n                                <input\n                                  type=\"radio\"\n                                  name=\"bodytype\"\n                                  value=\"muscular\"\n                                  checked={bodyType === \"muscular\"} // Check if this option is selected\n                                  onChange={handleBodyTypeChange} // Update state on change\n                                />\n                                <span className=\"checkmark\"></span>\n                              </label>\n\n                              <label className=\"cbox\">\n                                {t(\"Petite\")}\n                                <input\n                                  type=\"radio\"\n                                  name=\"bodytype\"\n                                  value=\"petite\"\n                                  checked={bodyType === \"petite\"} // Check if this option is selected\n                                  onChange={handleBodyTypeChange} // Update state on change\n                                />\n                                <span className=\"checkmark\"></span>\n                              </label>\n\n                              <label className=\"cbox\">\n                                {t(\"Tall\")}\n                                <input\n                                  type=\"radio\"\n                                  name=\"bodytype\"\n                                  value=\"tall\"\n                                  checked={bodyType === \"tall\"} // Check if this option is selected\n                                  onChange={handleBodyTypeChange} // Update state on change\n                                />\n                                <span className=\"checkmark\"></span>\n                              </label>\n\n                              <label className=\"cbox\">\n                                {t(\"Other\")}\n                                <input\n                                  type=\"radio\"\n                                  name=\"bodytype\"\n                                  value=\"other\"\n                                  checked={bodyType === \"other\"} // Check if this option is selected\n                                  onChange={handleBodyTypeChange} // Update state on change\n                                />\n                                <span className=\"checkmark\"></span>\n                              </label>\n                            </div>\n                          </AccordionItemPanel>\n                        </AccordionItem>\n                        <AccordionItem>\n                          <AccordionItemHeading>\n                            <AccordionItemButton>\n                              <div\n                                className=\"d-flex gap-2 align-items-center\"\n                                id=\"heightFeet\"\n                              >\n                                <div className=\"flex-shrink-0\">\n                                  <div className=\"acciconimg fulw\">\n                                    <img src={de3} alt=\"accimg\" />\n                                  </div>\n                                </div>\n                                <div className=\"flex-grow-1\">\n                                  <h4>{t(\"Height\")}</h4>\n                                </div>\n                              </div>\n                            </AccordionItemButton>\n                          </AccordionItemHeading>\n                          <AccordionItemPanel>\n                            <div className=\"d-flex gap-2 heightsel\">\n                              <select\n                                onChange={handleFeetChange}\n                                value={heightFeet}\n                                name=\"height_feet\"\n                              >\n                                <option value=\"\">{t(\"Select_Feet\")}</option>\n                                {optionsheight.map((value) => (\n                                  <option key={value} value={value}>\n                                    {value} cm\n                                  </option>\n                                ))}\n                              </select>\n                            </div>\n                          </AccordionItemPanel>\n                        </AccordionItem>\n                        <AccordionItem>\n                          <AccordionItemHeading>\n                            <AccordionItemButton>\n                              <div\n                                className=\"d-flex gap-2 align-items-center\"\n                                id=\"sexual_orientation\"\n                              >\n                                <div className=\"flex-shrink-0\">\n                                  <div className=\"acciconimg fulw\">\n                                    <img src={de4} alt=\"accimg\" />\n                                  </div>\n                                </div>\n                                <div className=\"flex-grow-1\">\n                                  <h4>{t(\"Sexual_orientation\")}</h4>\n                                </div>\n                              </div>\n                            </AccordionItemButton>\n                          </AccordionItemHeading>\n                          <AccordionItemPanel>\n                            <div className=\"listbox d-flex flex-wrap gap-3\">\n                              {[\n                                \"Heterosexual\",\n                                \"Homosexual\",\n                                \"Bisexual\",\n                                \"Pansexual\",\n                                \"Asexual\",\n                                \"Other\",\n                              ].map((label) => (\n                                <label className=\"cbox\" key={label}>\n                                  {label}\n                                  <input\n                                    type=\"checkbox\"\n                                    name=\"sexual_orientation\"\n                                    value={label}\n                                    checked={sexual_orientation.includes(label)}\n                                    onChange={handleSexualOrientationChange}\n                                  />\n                                  <span className=\"checkmark\"></span>\n                                </label>\n                              ))}\n                            </div>\n                          </AccordionItemPanel>\n                        </AccordionItem>\n\n                        <AccordionItem>\n                          <AccordionItemHeading>\n                            <AccordionItemButton>\n                              <div\n                                className=\"d-flex gap-2 align-items-center\"\n                                id=\"genders\"\n                              >\n                                <div className=\"flex-shrink-0\">\n                                  <div className=\"acciconimg fulw\">\n                                    <img src={de15} alt=\"accimg\" />\n                                  </div>\n                                </div>\n                                <div className=\"flex-grow-1\">\n                                  <h4>{t(\"Genders\")}</h4>\n                                </div>\n                              </div>\n                            </AccordionItemButton>\n                          </AccordionItemHeading>\n                          <AccordionItemPanel>\n                            <div className=\"listbox d-flex flex-wrap gap-3\">\n                              <label className=\"cbox\">\n                                {t(\"Male\")}\n                                <input\n                                  type=\"radio\"\n                                  name=\"genders\"\n                                  checked={genders === \"Male\"}\n                                  onChange={handlegendersChange}\n                                  value=\"Male\"\n                                />\n                                <span className=\"checkmark\"></span>\n                              </label>\n                              <label className=\"cbox\">\n                                {t(\"Female\")}\n                                <input\n                                  type=\"radio\"\n                                  name=\"genders\"\n                                  checked={genders === \"Female\"}\n                                  onChange={handlegendersChange}\n                                  value=\"Female\"\n                                />\n                                <span className=\"checkmark\"></span>\n                              </label>\n                              <label className=\"cbox\">\n                                Trans\n                                <input\n                                  type=\"radio\"\n                                  name=\"genders\"\n                                  checked={genders === \"Trans\"}\n                                  onChange={handlegendersChange}\n                                  value=\"Trans\"\n                                />\n                                <span className=\"checkmark\"></span>\n                              </label>\n                              <label className=\"cbox\">\n                                Trans (MTF)\n                                <input\n                                  type=\"radio\"\n                                  name=\"genders\"\n                                  checked={genders === \"Trans (MTF)\"}\n                                  onChange={handlegendersChange}\n                                  value=\"Trans (MTF)\"\n                                />\n                                <span className=\"checkmark\"></span>\n                              </label>\n                              <label className=\"cbox\">\n                                Trans (FTM)\n                                <input\n                                  type=\"radio\"\n                                  checked={genders === \"Trans (FTM)\"}\n                                  onChange={handlegendersChange}\n                                  name=\"genders\"\n                                  value=\"Trans (FTM)\"\n                                />\n                                <span className=\"checkmark\"></span>\n                              </label>\n                              <label className=\"cbox\">\n                                {t(\"Couple\")}\n                                <input\n                                  type=\"radio\"\n                                  checked={genders === \"Couple\"}\n                                  onChange={handlegendersChange}\n                                  name=\"genders\"\n                                  value=\"Couple\"\n                                />\n                                <span className=\"checkmark\"></span>\n                              </label>\n                              <label className=\"cbox\">\n                                {t(\"Non_binary\")}\n                                <input\n                                  type=\"radio\"\n                                  checked={genders === \"Ikke-binær\"}\n                                  onChange={handlegendersChange}\n                                  name=\"genders\"\n                                  value=\"Ikke-binær\"\n                                />\n                                <span className=\"checkmark\"></span>\n                              </label>\n                            </div>\n                            {genders === \"Male\" && (\n                              <Select\n                                styles={customStyles}\n                                isMulti\n                                options={maleOptions_select}\n                                value={sexuality}\n                                onChange={handleSexualityChange}\n                                placeholder=\"Select Male\"\n                                className=\"custom-select\"\n                                classNamePrefix=\"custom-select\"\n                              />\n                            )}\n\n                            {genders === \"Female\" && (\n                              <Select\n                                isMulti\n                                options={femaleOptions_select}\n                                value={sexuality}\n                                onChange={handleSexualityChange}\n                                placeholder=\"Select Female\"\n                                className=\"custom-select\"\n                                classNamePrefix=\"custom-select\"\n                              />\n                            )}\n\n                            {genders === \"Couple\" && (\n                              <Select\n                                styles={customStyles}\n                                isMulti\n                                options={coupleOptions_select}\n                                value={sexuality}\n                                onChange={handleSexualityChange}\n                                placeholder=\"Select Couple\"\n                                className=\"custom-select\"\n                                classNamePrefix=\"custom-select\"\n                              />\n                            )}\n                          </AccordionItemPanel>\n                        </AccordionItem>\n\n                        <AccordionItem>\n                          <AccordionItemHeading>\n                            <AccordionItemButton>\n                              <div\n                                className=\"d-flex gap-2 align-items-center\"\n                                id=\"Singel\"\n                              >\n                                <div className=\"flex-shrink-0\">\n                                  <div className=\"acciconimg fulw\">\n                                    <img src={de14} alt=\"accimg\" />\n                                  </div>\n                                </div>\n                                <div className=\"flex-grow-1\">\n                                  <h4>Connect With</h4>\n                                </div>\n                              </div>\n                            </AccordionItemButton>\n                          </AccordionItemHeading>\n                          <AccordionItemPanel>\n                            <div className=\"listbox d-flex flex-wrap gap-3\">\n                              {[\n                                \"Singel\",\n                                \"Mann\",\n                                \"Kvinne\",\n                                \"Trans\",\n                                \"Trans (MTF)\",\n                                \"Trans (FTM)\",\n                                \"Ikke-binær\",\n                                \"Heteropar\",\n                                \"Homopar\",\n                                \"Lesbepar\",\n                                \"Flexipar\",\n                              ].map((label) => (\n                                <label className=\"cbox\" key={label}>\n                                  {label}\n                                  <input\n                                    type=\"checkbox\"\n                                    name=\"connectwith\"\n                                    value={label}\n                                    checked={Singel.includes(label)}\n                                    onChange={handleSingelChange}\n                                  />\n                                  <span className=\"checkmark\"></span>\n                                </label>\n                              ))}\n                            </div>\n                          </AccordionItemPanel>\n                        </AccordionItem>\n                        <AccordionItem>\n                          <AccordionItemHeading>\n                            <AccordionItemButton>\n                              <div\n                                className=\"d-flex gap-2 align-items-center\"\n                                id=\"InterstedIn\"\n                              >\n                                <div className=\"flex-shrink-0\">\n                                  <div className=\"acciconimg fulw\">\n                                    <img src={de16} alt=\"accimg\" />\n                                  </div>\n                                </div>\n                                <div className=\"flex-grow-1\">\n                                  <h4>{t(\"Intersted_In\")}</h4>\n                                </div>\n                              </div>\n                            </AccordionItemButton>\n                          </AccordionItemHeading>\n                          <AccordionItemPanel>\n                            <div className=\"listbox d-flex flex-wrap gap-3\">\n                              {[\n                                \"Diskusjon\",\n                                \"Inspirasjon\",\n                                \"Flørt\",\n                                \"Date\",\n                                \"Vennskap\",\n                                \"Forhold\",\n                                \"Kjærlighet\",\n                                \"Chat\",\n                                \"Bare nettkontakt\",\n                                \"Treff\",\n                                \"Sosialt samvær\",\n                              ].map((label) => (\n                                <label className=\"cbox\" key={label}>\n                                  {label}\n                                  <input\n                                    type=\"checkbox\"\n                                    name=\"interstedin\"\n                                    value={label}\n                                    checked={InterstedIn.includes(label)}\n                                    onChange={handleInterstedInChange}\n                                  />\n                                  <span className=\"checkmark\"></span>\n                                </label>\n                              ))}\n                            </div>\n                          </AccordionItemPanel>\n                        </AccordionItem>\n                        <AccordionItem>\n                          <AccordionItemHeading>\n                            <AccordionItemButton>\n                              <div\n                                className=\"d-flex gap-2 align-items-center\"\n                                id=\"relationship_status\"\n                              >\n                                <div className=\"flex-shrink-0\">\n                                  <div className=\"acciconimg fulw\">\n                                    <img src={de5} alt=\"accimg\" />\n                                  </div>\n                                </div>\n                                <div className=\"flex-grow-1\">\n                                  <h4>{t(\"Relationship_status\")}</h4>\n                                </div>\n                              </div>\n                            </AccordionItemButton>\n                          </AccordionItemHeading>\n                          <AccordionItemPanel>\n                            <div className=\"listbox d-flex flex-wrap gap-3\">\n                              <label className=\"cbox\">\n                                {t(\"Single\")}\n                                <input\n                                  type=\"radio\"\n                                  name=\"relationship_status\"\n                                  value=\"Single\"\n                                  checked={relationship_status === \"Single\"}\n                                  onChange={handleRelationStatusChange}\n                                />\n                                <span className=\"checkmark\"></span>\n                              </label>\n\n                              <label className=\"cbox\">\n                                {t(\"In_a_Relationship\")}\n                                <input\n                                  type=\"radio\"\n                                  checked={\n                                    relationship_status === \"InaRelationship\"\n                                  }\n                                  onChange={handleRelationStatusChange}\n                                  name=\"relationship_status\"\n                                  value=\"InaRelationship\"\n                                />\n                                <span className=\"checkmark\"></span>\n                              </label>\n\n                              <label className=\"cbox\">\n                                {t(\"Engaged\")}\n                                <input\n                                  type=\"radio\"\n                                  checked={relationship_status === \"engaged\"}\n                                  onChange={handleRelationStatusChange}\n                                  name=\"relationship_status\"\n                                  value=\"engaged\"\n                                />\n                                <span className=\"checkmark\"></span>\n                              </label>\n\n                              <label className=\"cbox\">\n                                {t(\"Married\")}\n                                <input\n                                  type=\"radio\"\n                                  checked={relationship_status === \"Married\"}\n                                  onChange={handleRelationStatusChange}\n                                  name=\"relationship_status\"\n                                  value=\"Married\"\n                                />\n                                <span className=\"checkmark\"></span>\n                              </label>\n\n                              <label className=\"cbox\">\n                                {t(\"It_s_Complicated\")}\n                                <input\n                                  type=\"radio\"\n                                  checked={\n                                    relationship_status === \"ItsComplicated\"\n                                  }\n                                  onChange={handleRelationStatusChange}\n                                  name=\"relationship_status\"\n                                  value=\"ItsComplicated\"\n                                />\n                                <span className=\"checkmark\"></span>\n                              </label>\n\n                              <label className=\"cbox\">\n                                {t(\"Separated\")}\n                                <input\n                                  type=\"radio\"\n                                  checked={relationship_status === \"Separated\"}\n                                  onChange={handleRelationStatusChange}\n                                  name=\"relationship_status\"\n                                  value=\"Separated\"\n                                />\n                                <span className=\"checkmark\"></span>\n                              </label>\n\n                              <label className=\"cbox\">\n                                {t(\"Divorced\")}\n                                <input\n                                  type=\"radio\"\n                                  checked={relationship_status === \"Divorced\"}\n                                  onChange={handleRelationStatusChange}\n                                  name=\"relationship_status\"\n                                  value=\"Divorced\"\n                                />\n                                <span className=\"checkmark\"></span>\n                              </label>\n\n                              <label className=\"cbox\">\n                                {t(\"Widowed\")}\n                                <input\n                                  type=\"radio\"\n                                  checked={relationship_status === \"Widowed\"}\n                                  onChange={handleRelationStatusChange}\n                                  name=\"relationship_status\"\n                                  value=\"Widowed\"\n                                />\n                                <span className=\"checkmark\"></span>\n                              </label>\n                              <label className=\"cbox\">\n                                {t(\"Polyamorous\")}\n                                <input\n                                  type=\"radio\"\n                                  checked={\n                                    relationship_status === \"Polyamorous\"\n                                  }\n                                  onChange={handleRelationStatusChange}\n                                  name=\"relationship_status\"\n                                  value=\"Polyamorous\"\n                                />\n                                <span className=\"checkmark\"></span>\n                              </label>\n                              <label className=\"cbox\">\n                                {t(\"Other\")}\n                                <input\n                                  type=\"radio\"\n                                  checked={relationship_status === \"Other\"}\n                                  onChange={handleRelationStatusChange}\n                                  name=\"relationship_status\"\n                                  value=\"Other\"\n                                />\n                                <span className=\"checkmark\"></span>\n                              </label>\n                            </div>\n                          </AccordionItemPanel>\n                        </AccordionItem>\n                        <AccordionItem>\n                          <AccordionItemHeading>\n                            <AccordionItemButton>\n                              <div\n                                className=\"d-flex gap-2 align-items-center\"\n                                id=\"search_looking_for\"\n                              >\n                                <div className=\"flex-shrink-0\">\n                                  <div className=\"acciconimg fulw\">\n                                    <img src={de6} alt=\"accimg\" />\n                                  </div>\n                                </div>\n                                <div className=\"flex-grow-1\">\n                                  <h4>{t(\"Looking_for\")}</h4>\n                                </div>\n                              </div>\n                            </AccordionItemButton>\n                          </AccordionItemHeading>\n                          <AccordionItemPanel>\n                            <div className=\"listbox d-flex flex-wrap gap-3\">\n                              {[\n                                \"Friends\",\n                                \"Dating\",\n                                \"Parties\",\n                                \"Flirting\",\n                                \"Relationships\",\n                                \"Fun\",\n                                \"Serious\",\n                                \"Hookups\",\n                              ].map((label) => (\n                                <label className=\"cbox\" key={label}>\n                                  {label}\n                                  <input\n                                    type=\"checkbox\"\n                                    name=\"search_looking_for\"\n                                    value={label}\n                                    checked={search_looking_for.includes(label)}\n                                    onChange={handleSearchLookingforChange}\n                                  />\n                                  <span className=\"checkmark\"></span>\n                                </label>\n                              ))}\n                            </div>\n                          </AccordionItemPanel>\n                        </AccordionItem>\n                        <AccordionItem>\n                          <AccordionItemHeading>\n                            <AccordionItemButton>\n                              <div\n                                className=\"d-flex gap-2 align-items-center\"\n                                id=\"degree\"\n                              >\n                                <div className=\"flex-shrink-0\">\n                                  <div className=\"acciconimg fulw\">\n                                    <img src={de7} alt=\"accimg\" />\n                                  </div>\n                                </div>\n                                <div className=\"flex-grow-1\">\n                                  <h4>{t(\"Degree\")}</h4>\n                                </div>\n                              </div>\n                            </AccordionItemButton>\n                          </AccordionItemHeading>\n                          <AccordionItemPanel>\n                            <select\n                              onChange={handleDegreeChange}\n                              value={degree}\n                              name=\"degree\"\n                              className=\"custom-select\"\n                              classNamePrefix=\"custom-select\"\n                            >\n                              <option value=\"\">\n                                {t(\"Select_your_degree\")}\n                              </option>\n                              <option value=\"BachelorDegree\">\n                                {t(\"Bachelor_s_Degree\")}\n                              </option>\n                              <option value=\"MasterDegree\">\n                                {t(\"Master_s_Degree\")}\n                              </option>\n                              <option value=\"DoctorateDegree\">\n                                {t(\"Doctorate_s_Degree\")}\n                              </option>\n                              <option value=\"other\">{t(\"Other\")}</option>\n                            </select>\n                          </AccordionItemPanel>\n                        </AccordionItem>\n                        <AccordionItem>\n                          <AccordionItemHeading>\n                            <AccordionItemButton>\n                              <div\n                                className=\"d-flex gap-2 align-items-center\"\n                                id=\"drinkerValue\"\n                              >\n                                <div className=\"flex-shrink-0\">\n                                  <div className=\"acciconimg fulw\">\n                                    <img src={de8} alt=\"accimg\" />\n                                  </div>\n                                </div>\n                                <div className=\"flex-grow-1\">\n                                  <h4>{t(\"Drinker\")}</h4>\n                                </div>\n                              </div>\n                            </AccordionItemButton>\n                          </AccordionItemHeading>\n                          <AccordionItemPanel>\n                            <div className=\"listbox d-flex flex-wrap gap-3\">\n                              <label className=\"cbox\">\n                                {t(\"Yes\")}\n                                <input\n                                  id=\"drinker\"\n                                  type=\"radio\"\n                                  name=\"drinker\"\n                                  checked={drinkerValue === \"Yes\"} // Set checked based on state\n                                  onChange={handledrinkerChange}\n                                  value=\"Yes\"\n                                />\n                                <span className=\"checkmark\"></span>\n                              </label>\n\n                              <label className=\"cbox\">\n                                {t(\"No\")}\n                                <input\n                                  type=\"radio\"\n                                  name=\"drinker\"\n                                  checked={drinkerValue === \"No\"} // Set checked based on state\n                                  onChange={handledrinkerChange}\n                                  value=\"No\"\n                                />\n                                <span className=\"checkmark\"></span>\n                              </label>\n                            </div>\n                          </AccordionItemPanel>\n                        </AccordionItem>\n                        <AccordionItem>\n                          <AccordionItemHeading>\n                            <AccordionItemButton>\n                              <div\n                                className=\"d-flex gap-2 align-items-center\"\n                                id=\"smokerValue\"\n                              >\n                                <div className=\"flex-shrink-0\">\n                                  <div className=\"acciconimg fulw\">\n                                    <img src={de9} alt=\"accimg\" />\n                                  </div>\n                                </div>\n                                <div className=\"flex-grow-1\">\n                                  <h4>{t(\"Smoker\")}</h4>\n                                </div>\n                              </div>\n                            </AccordionItemButton>\n                          </AccordionItemHeading>\n                          <AccordionItemPanel>\n                            <div className=\"listbox d-flex flex-wrap gap-3\">\n                              <label className=\"cbox\">\n                                {t(\"Yes\")}\n                                <input\n                                  id=\"smoker\"\n                                  type=\"radio\"\n                                  name=\"smoker\"\n                                  checked={smokerValue === \"Yes\"} // Set checked based on state\n                                  onChange={handlesmokerChange}\n                                  value=\"Yes\"\n                                />\n                                <span className=\"checkmark\"></span>\n                              </label>\n\n                              <label className=\"cbox\">\n                                {t(\"No\")}\n                                <input\n                                  type=\"radio\"\n                                  checked={smokerValue === \"No\"} // Set checked based on state\n                                  onChange={handlesmokerChange}\n                                  name=\"smoker\"\n                                  value=\"No\"\n                                />\n                                <span className=\"checkmark\"></span>\n                              </label>\n                            </div>\n                          </AccordionItemPanel>\n                        </AccordionItem>\n\n                        <AccordionItem>\n                          <AccordionItemHeading>\n                            <AccordionItemButton>\n                              <div\n                                className=\"d-flex gap-2 align-items-center\"\n                                id=\"tattosValue\"\n                              >\n                                <div className=\"flex-shrink-0\">\n                                  <div className=\"acciconimg fulw\">\n                                    <img src={de10} alt=\"accimg\" />\n                                  </div>\n                                </div>\n                                <div className=\"flex-grow-1\">\n                                  <h4>{t(\"Tattoos\")}</h4>\n                                </div>\n                              </div>\n                            </AccordionItemButton>\n                          </AccordionItemHeading>\n                          <AccordionItemPanel>\n                            <div className=\"listbox d-flex flex-wrap gap-3\">\n                              <label className=\"cbox\">\n                                {t(\"Yes\")}\n                                <input\n                                  type=\"radio\"\n                                  name=\"tattos\"\n                                  id=\"tattos\"\n                                  checked={tattosValue === \"Yes\"} // Set checked based on state\n                                  onChange={handletattosChange}\n                                  value=\"Yes\"\n                                />\n                                <span className=\"checkmark\"></span>\n                              </label>\n\n                              <label className=\"cbox\">\n                                {t(\"No\")}\n                                <input\n                                  type=\"radio\"\n                                  checked={tattosValue === \"No\"} // Set checked based on state\n                                  onChange={handletattosChange}\n                                  name=\"tattos\"\n                                  value=\"No\"\n                                />\n                                <span className=\"checkmark\"></span>\n                              </label>\n                              <label className=\"cbox\">\n                                {t(\"Few\")}\n                                <input\n                                  type=\"radio\"\n                                  checked={tattosValue === \"Few\"} // Set checked based on state\n                                  onChange={handletattosChange}\n                                  name=\"tattos\"\n                                  value=\"Few\"\n                                />\n                                <span className=\"checkmark\"></span>\n                              </label>\n                            </div>\n                          </AccordionItemPanel>\n                        </AccordionItem>\n                        <AccordionItem>\n                          <AccordionItemHeading>\n                            <AccordionItemButton>\n                              <div\n                                className=\"d-flex gap-2 align-items-center\"\n                                id=\"body_piercingsValue\"\n                              >\n                                <div className=\"flex-shrink-0\">\n                                  <div className=\"acciconimg fulw\">\n                                    <img src={de11} alt=\"accimg\" />\n                                  </div>\n                                </div>\n                                <div className=\"flex-grow-1\">\n                                  <h4>{t(\"Body_piercings\")}</h4>\n                                </div>\n                              </div>\n                            </AccordionItemButton>\n                          </AccordionItemHeading>\n                          <AccordionItemPanel>\n                            <div className=\"listbox d-flex flex-wrap gap-3\">\n                              <label className=\"cbox\">\n                                {t(\"Yes\")}\n                                <input\n                                  id=\"body_piercings\"\n                                  type=\"radio\"\n                                  name=\"body_piercings\"\n                                  checked={body_piercingsValue === \"Yes\"} // Set checked based on state\n                                  onChange={handlebody_piercingsChange}\n                                  value=\"Yes\"\n                                />\n                                <span className=\"checkmark\"></span>\n                              </label>\n\n                              <label className=\"cbox\">\n                                {t(\"No\")}\n                                <input\n                                  type=\"radio\"\n                                  name=\"body_piercings\"\n                                  checked={body_piercingsValue === \"No\"} // Set checked based on state\n                                  onChange={handlebody_piercingsChange}\n                                  value=\"No\"\n                                />\n                                <span className=\"checkmark\"></span>\n                              </label>\n                              <label className=\"cbox\">\n                                {t(\"Few\")}\n                                <input\n                                  type=\"radio\"\n                                  name=\"body_piercings\"\n                                  checked={body_piercingsValue === \"Few\"} // Set checked based on state\n                                  onChange={handlebody_piercingsChange}\n                                  value=\"Few\"\n                                />\n                                <span className=\"checkmark\"></span>\n                              </label>\n                            </div>\n                          </AccordionItemPanel>\n                        </AccordionItem>\n                        <AccordionItem>\n                          <AccordionItemHeading>\n                            <AccordionItemButton>\n                              <div\n                                className=\"d-flex gap-2 align-items-center\"\n                                id=\"fetishValue\"\n                              >\n                                <div className=\"flex-shrink-0\">\n                                  <div className=\"acciconimg fulw\">\n                                    <img src={de12} alt=\"accimg\" />\n                                  </div>\n                                </div>\n                                <div className=\"flex-grow-1\">\n                                  <h4>{t(\"Fetish\")}</h4>\n                                </div>\n                              </div>\n                            </AccordionItemButton>\n                          </AccordionItemHeading>\n                          <AccordionItemPanel>\n                            <div className=\"listbox d-flex flex-wrap gap-3\">\n                              {[\n                                \"None\",\n                                \"BDSM\",\n                                \"Bondage\",\n                                \"Dominant\",\n                                \"Latex & Leather\",\n                                \"Roleplay\",\n                                \"Spanking\",\n                                \"Switch\",\n                                \"Submissive\",\n                                \"Lingerie\",\n                                \"Wet\",\n                                \"Other\",\n                              ].map((label) => (\n                                <label className=\"cbox\" key={label}>\n                                  {label}\n                                  <input\n                                    id=\"fetish\"\n                                    type=\"checkbox\"\n                                    name=\"fetish\"\n                                    value={label}\n                                    checked={fetishValue.includes(label)}\n                                    onChange={handlefetishChange}\n                                  />\n                                  <span className=\"checkmark\"></span>\n                                </label>\n                              ))}\n                            </div>\n                          </AccordionItemPanel>\n                        </AccordionItem>\n                      </Accordion>\n                    </div>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </section>\n      {spinner && (\n        <div className=\"spinner_overlay\">\n          <div className=\"spinner-border text-success\" role=\"status\">\n            <span className=\"visually-hidden\">Loading...</span>\n          </div>\n        </div>\n      )}\n\n      <PrivateImageRequest\n        isOpen={isPopupOpen}\n        onClose={closePopup}\n        LoginData={LoginData}\n      />\n      <Uploadprivatealbum\n        isOpen={isPopupOpen1}\n        onClose={closePopup1}\n        LoginData={LoginData}\n        closepopup11={closepopup11}\n      ></Uploadprivatealbum>\n      {selectedImage && (\n        <div\n          style={{\n            position: \"fixed\",\n            top: 0,\n            left: 0,\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: \"rgba(0, 0, 0, 0.8)\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            zIndex: 989898,\n          }}\n          onClick={() => setSelectedImage(null)} // Close when clicked outside\n        >\n          <div className=\"rel d-block pt-5\">\n            <button type=\"button\" className=\"closebtnpic\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width={24}\n                height={24}\n                viewBox=\"0 0 24 24\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                strokeWidth={2}\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                className=\"icon icon-tabler icons-tabler-outline icon-tabler-x\"\n              >\n                <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                <path d=\"M18 6l-12 12\" />\n                <path d=\"M6 6l12 12\" />\n              </svg>\n            </button>\n            <MediaRenderer\n              className=\"w-100 h-100 object-fit-cover\"\n              url={selectedImage}\n              style={{\n                maxWidth: \"100%\",\n                maxHeight: \"100%\",\n                borderRadius: \"10px\",\n                height: \"85vh\",\n                objectFit: \"contain\",\n              }}\n            />\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default Editprofile;\n"],"names":["_ref","isOpen","onClose","LoginData","apiUrl2","isRequestDetail","setRequestDetail","useState","t","useTranslation","useEffect","savedLanguage","localStorage","getItem","i18n","language","changeLanguage","getRequestDetails","ws","WebSocket","onmessage","event","receivedMessage","JSON","parse","data","console","error","log","close","async","formData","user_id","id","respo","axios","post","apiUrl","headers","Accept","err","response","request","message","calculateAge","birthday","birthDate","Date","today","age","getFullYear","monthDifference","getMonth","getDate","_jsx","_Fragment","children","className","onClick","e","target","classList","contains","_jsxs","length","map","index","Link","to","src","profile_image","alt","username","birthday_date","location","album_name","status","type","disabled","to_id","req_id","RequestConfirm","RequestDelete","_locations$selectedRe","navigate","useNavigate","editorRef","useRef","useLocation","spinner","setspinner","ErrorForAll","setErrorForAll","editorContent","setEditorContent","isPopupOpen","setIsPopupOpen","isPopupOpen1","setIsPopupOpen1","isImagePrivate","setIsImagePrivate","showPopSuccess","setShowPopSuccess","showPopError","setShowPopError","successPopMessage","setPopsuccessMessage","errorPopMessage","setPoperrorMessage","setLoginData","profilevalue","setprofilevalue","genders","setgenders","Singel","setSingel","InterstedIn","setInterstedIn","nationality","setNationality","bodyType","setBodyType","selectedSubRegion","setSelectedSubRegion","React","sexual_orientation","setsexual_orientation","relationship_status","setrelationship_status","smokerValue","setsmokerValue","tattosValue","settattosValue","fetishValue","setfetishValue","search_looking_for","setsearch_looking_for","drinkerValue","setdrinkerValue","body_piercingsValue","setbody_piercingsValue","degree","setDegree","heightFeet","setHeightFeet","height_feet","heightInches","setHeightInches","height_inches","selectedFile","setSelectedFile","errorMessage","setErrorMessage","selectedFile_1","setSelectedFile_1","errorMessage_1","setErrorMessage_1","selectedFile_2","setSelectedFile_2","errorMessage_2","setErrorMessage_2","selectedFile_3","setSelectedFile_3","errorMessage_3","setErrorMessage_3","selectedFile_4","setSelectedFile_4","errorMessage_4","setErrorMessage_4","imageUrl","setImageUrl","imageUrl1","setImageUrl1","imageUrl2","setImageUrl2","imageUrl3","setImageUrl3","imageUrl4","setImageUrl4","isMaleChecked","setIsMaleChecked","maleOptions","setMaleOptions","straight","gay","bull","isCoupleChecked","setIsCoupleChecked","coupleOptions","setCoupleOptions","fullswap","softswap","cuckold","exhibitionist","voyeur","hotwife","isFemaleChecked","setIsFemaleChecked","femaleOptions","setFemaleOptions","Straight","lesbian","Hotwife","sexuality","setSexuality","getallAlbum","setgetallAlbum","apiURL","apiURLMembers","anyOptionChecked","Object","values","some","isChecked","storedUsername","userLogin","getprofile","email","looking_for","handlefetishChange","value","checked","prev","filter","orientation","handlebody_piercingsChange","handledrinkerChange","handletattosChange","handlesmokerChange","handleSingelChange","handleInterstedInChange","handleNationalityChange","handleBodyTypeChange","handleRelationStatusChange","handleSearchLookingforChange","handleCheckChange","handleSexualOrientationChange","handlegendersChange","handleSexualityChange","selectedOptions","res","makeImagePrivate","bodytype","drinker","fetish","Array","isArray","body_piercings","tattos","smoker","parsedSexualOrientation","connectwith","interstedin","gender","optionss","item","label","profile_image_1","profile_image_2","profile_image_3","profile_image_4","selectedRegion","setSelectedRegion","town","parsedtown","setSelectedTown","subregion","malee","male","maleArray","prevState","updatedMaleOptions","forEach","option","hasOwnProperty","femalee","female","femaleArray","updatedFeMaleOptions","couplee","couple","coupleArray","updatedCoupleOptions","MAX_FILE_SIZE","handleFileChange","file","files","startsWith","size","URL","createObjectURL","showErrorAndScroll","fieldId","showError","element","document","getElementById","scrollIntoView","behavior","block","setTimeout","openPopup","body","style","overflowY","openPopup1","locations","Viken","Innlandet","Hordaland","Rogaland","Trøndelag","Nordland","Other","regionTranslationKeys","ostlandet","vestlandet","trondelag","nordnorge","other","selectedTown","handleTownChange","prevSelectedTowns","optionsheight","from","_","i","customStyles","includes","control","provided","backgroundColor","padding","border","boxShadow","state","borderBottom","color","isSelected","multiValue","multiValueLabel","multiValueRemove","getallAlbums","results","pathname","ImagesFriendsOwn","setImagesFriendsOwn","isonlyallbumPublic","setisonlyallbumPublic","get_albumStatusonlyPublic","getUserDetailsOwn","mediaList","images","media","push","usersalbum_id","selectedImage","setSelectedImage","isonlyallbumfriend","setisonlyallbumfriend","handleKeyDown","key","window","addEventListener","removeEventListener","Headertwo","SuccessPop","ErrorPop","onSubmit","preventDefault","vl","FormData","append","preferences","stringify","token","keys","action","method","name","accept","onChange","BsCloudUpload","visibility","addToAlbum","image","imgIndex","MediaRenderer","url","album","require","cover_image","htmlFor","height","Editor","apiKey","onInit","_evt","editor","current","onEditorChange","content","init","menubar","plugins","toolbar","content_style","defaultValue","placeholder","regionKey","find","subRegion","Accordion","AccordionItem","AccordionItemHeading","AccordionItemButton","de1","AccordionItemPanel","class","de2","de3","de4","Select","styles","isMulti","options","classNamePrefix","de16","de5","de6","de7","de8","de9","de10","de11","de12","role","PrivateImageRequest","closePopup","Uploadprivatealbum","closePopup1","closepopup11","position","top","left","width","display","justifyContent","alignItems","zIndex","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","maxWidth","maxHeight","borderRadius","objectFit"],"sourceRoot":""}