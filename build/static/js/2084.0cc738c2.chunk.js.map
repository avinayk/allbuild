{"version":3,"file":"static/js/2084.0cc738c2.chunk.js","mappings":"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","sources":["components/Uploadprivatealbum.jsx","components/PrivateImageRequest.jsx","pages/Editprofile.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { BsCloudUpload } from \"react-icons/bs\";\nimport axios from \"axios\";\nimport { useTranslation } from \"react-i18next\";\nimport i18n from \"../i18n\";\nimport MediaRenderer from \"../components/MediaRenderer\";\nexport const Uploadprivatealbum = ({\n  isOpen,\n  onClose,\n  children,\n  closepopup11,\n}) => {\n  const handleOverlayClick = (e) => {\n    // Check if the clicked element is the overlay\n    if (e.target.classList.contains(\"popup-overlay\")) {\n      onClose(); // Close the popup if the overlay is clicked\n    }\n  };\n  const [spinner, setspinner] = useState(false);\n  const [images, setImages] = useState(null);\n  const [visibility, setVisibility] = useState(\"\");\n  const [addToAlbum, setAddToAlbum] = useState(\"No\");\n  const [addToAlbumPass, setAddToAlbumpass] = useState(\"No\");\n  const [Password, setPassword] = useState(\"\");\n  const [albumName, setAlbumName] = useState(\"\");\n  const [rightsConfirmed, setRightsConfirmed] = useState(\"Yes\");\n  const [error, setError] = useState(\"\");\n  const [successmsg, setsuccessmsg] = useState(\"\");\n  const [preebtn, setpreebtn] = useState(false);\n  const { t } = useTranslation();\n  const fileInputRef = useRef(null);\n\n  useEffect(() => {\n    if (visibility === \"Private_visible\") {\n      setAddToAlbumpass(\"Yes\");\n      setAddToAlbum(\"Yes\");\n    } else {\n      setAddToAlbumpass(\"No\");\n    }\n  }, [visibility]);\n\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem(\"language\") || \"en\"; // Default to 'en' if no language is saved\n    // Change the language if it's not already the current language\n    if (i18n.language !== savedLanguage) {\n      i18n.changeLanguage(savedLanguage);\n    }\n  }, [i18n, t]);\n  var apiUrl = \"https://backend.amourette.no/api/members/\";\n  const handleFileChange = (e) => {\n    const selectedFiles = e.target.files;\n    const maxFileSize = 10 * 1024 * 1024; // 10 MB in bytes\n    const maxFileCount = 10; // Maximum of 10 files\n    let validFiles = [];\n    let fileError = \"\";\n\n    // Check if the number of files exceeds the limit\n    if (selectedFiles.length > maxFileCount) {\n      fileError = `You can only upload a maximum of ${maxFileCount} files.`;\n    } else {\n      Array.from(selectedFiles).forEach((file) => {\n        const fileType = file.type;\n\n        // Allow only images and videos\n        if (!fileType.startsWith(\"image/\") && !fileType.startsWith(\"video/\")) {\n          fileError = `File \"${file.name}\" is not an image or video.`;\n        } else if (file.size > maxFileSize) {\n          fileError = `File \"${file.name}\" exceeds the 10 MB limit.`;\n        } else {\n          validFiles.push(file);\n        }\n      });\n    }\n\n    if (fileError) {\n      setError(fileError);\n    } else {\n      setError(\"\");\n      setImages(validFiles);\n    }\n  };\n  const [yesNoerror, setYesNoError] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!images) {\n      alert(\"Please select images to upload.\");\n      return;\n    }\n\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    const formData = new FormData();\n\n    images.forEach((file) => {\n      formData.append(\"images\", file); // Use the key 'files' for your backend to handle multiple files\n    });\n    formData.append(\"visibility\", visibility);\n    formData.append(\"addToAlbum\", addToAlbum);\n    formData.append(\"albumName\", albumName);\n    formData.append(\"password\", Password);\n    formData.append(\"rightsConfirmed\", rightsConfirmed);\n    formData.append(\"user_id\", userLogin.id);\n    formData.append(\"fileType\", \"\");\n    if (rightsConfirmed === \"No\") {\n      setYesNoError(true);\n      return;\n    } else {\n      setYesNoError(false);\n    }\n    setspinner(true);\n    setpreebtn(true);\n    try {\n      const res = await axios.post(apiUrl + \"saveprivateAlbum\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      });\n      var respo = res.data;\n      setpreebtn(false);\n      setsuccessmsg(respo.message);\n      setTimeout(() => {\n        window.location.reload();\n        setspinner(false);\n        setsuccessmsg(\"\");\n        closepopup11();\n        setVisibility(\"\");\n        setAlbumName(\"\");\n        setPassword(\"\");\n        setAddToAlbum(\"No\");\n        setRightsConfirmed(\"Yes\");\n        setImages(null);\n      }, 3500);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const removeFile = (index) => {\n    setImages((prev) => {\n      const updatedImages = prev.filter((_, i) => i !== index);\n      // If no files left, reset the input value\n      if (updatedImages.length === 0 && fileInputRef.current) {\n        fileInputRef.current.value = \"\";\n      }\n      return updatedImages;\n    });\n  };\n\n  const handlecheck = () => {};\n  if (!isOpen) return null;\n  return (\n    <>\n      <div className=\"popup-overlay\" onClick={handleOverlayClick}>\n        <div className=\"popup-content col-md-5\">\n          <button className=\"close-button\" onClick={onClose}>\n            &times; {/* Close button */}\n          </button>\n          <div className=\"gallery_pop  d-flex flex-column gap-4\">\n            <h3>{t(\"upload_album\")}</h3>\n            <form\n              action=\"javascript:void(0)\"\n              method=\"post\"\n              onSubmit={handleSubmit}\n            >\n              <div className=\"row gy-3 align-items-end\">\n                <div className=\"col-md-12\">\n                  <div className=\"uploadfile rel bgload\">\n                    <p className=\"pb-2\">{t(\"select_one_more\")}</p>\n                    <input\n                      type=\"file\"\n                      name=\"file\"\n                      required\n                      multiple\n                      onChange={handleFileChange}\n                      className=\"fileload\"\n                      ref={fileInputRef}\n                    />\n                    {error && <p style={{ color: \"red\" }}>{error}</p>}\n                    <div className=\"inload\" style={{ height: \"50px\" }}>\n                      <div className=\"d-flex gap-3 align-items-center\">\n                        {images !== null && (\n                          <>\n                            {images.map((file, index) => (\n                              <div className=\"upimage rel\" key={index}>\n                                <button\n                                  type=\"button\"\n                                  onClick={() => removeFile(index)}\n                                >\n                                  X\n                                </button>\n                                <div className=\"inimag ofit\">\n                                  {file.type.startsWith(\"image/\") ? (\n                                    <img\n                                      src={URL.createObjectURL(file)}\n                                      alt={file.name}\n                                    />\n                                  ) : (\n                                    <video width=\"160\" height=\"120\" controls>\n                                      <source\n                                        src={URL.createObjectURL(file)}\n                                        type={file.type}\n                                      />\n                                    </video>\n                                  )}\n                                </div>\n                              </div>\n                            ))}\n                          </>\n                        )}\n\n                        <div className=\"d-flex align-items-center gap-2\">\n                          <BsCloudUpload style={{ fontSize: \"24px\" }} />\n                          <h3 className=\"m-0\" style={{ fontSize: \"14px\" }}>\n                            {t(\"upload_image\")}/{t(\"Videos\")}\n                          </h3>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"col-12\">\n                  <div className=\"d-flex flex-column gap-2\">\n                    <p>{t(\"how_private\")}</p>\n                    <div className=\"d-flex align-items-center gap-2\">\n                      <div className=\"icon\">\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width=\"24\"\n                          height=\"24\"\n                          viewBox=\"0 0 24 24\"\n                          fill=\"none\"\n                          stroke=\"currentColor\"\n                          stroke-width=\"2\"\n                          stroke-linecap=\"round\"\n                          stroke-linejoin=\"round\"\n                          class=\"icon icon-tabler icons-tabler-outline icon-tabler-lock\"\n                        >\n                          <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                          <path d=\"M5 13a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2v6a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2v-6z\" />\n                          <path d=\"M11 16a1 1 0 1 0 2 0a1 1 0 0 0 -2 0\" />\n                          <path d=\"M8 11v-4a4 4 0 1 1 8 0v4\" />\n                        </svg>\n                      </div>\n                      <select\n                        value={visibility}\n                        onChange={(e) => setVisibility(e.target.value)}\n                        className=\"\"\n                        required\n                        name=\"visibility\"\n                      >\n                        <option value=\"\">--{t(\"Select\")}--</option>\n                        <option value=\"Public_visible\">{t(\"All\")}</option>\n                        <option value=\"Friends_visible\">\n                          {t(\"Friends_visible\")}\n                        </option>\n                        <option value=\"Private_visible\">\n                          {t(\"Private_visible\")}\n                        </option>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n                {addToAlbumPass === \"Yes\" && (\n                  <div className=\"col-12\">\n                    <div className=\"d-flex flex-column gap-2\">\n                      <p>Password</p>\n                      <div className=\"d-flex align-items-center gap-2\">\n                        <div className=\"icon\">\n                          <svg\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            width=\"24\"\n                            height=\"24\"\n                            viewBox=\"0 0 24 24\"\n                            fill=\"none\"\n                            stroke=\"currentColor\"\n                            stroke-width=\"2\"\n                            stroke-linecap=\"round\"\n                            stroke-linejoin=\"round\"\n                            class=\"icon icon-tabler icons-tabler-outline icon-tabler-lock\"\n                          >\n                            <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                            <path d=\"M5 13a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2v6a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2v-6z\" />\n                            <path d=\"M11 16a1 1 0 1 0 2 0a1 1 0 0 0 -2 0\" />\n                            <path d=\"M8 11v-4a4 4 0 1 1 8 0v4\" />\n                          </svg>\n                        </div>\n                        <input\n                          type=\"password\"\n                          name=\"password\"\n                          placeholder=\"Enter protected password here...\"\n                          value={Password}\n                          onChange={(e) => setPassword(e.target.value)}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                )}\n                <div className=\"col-12\">\n                  <div className=\"d-flex flex-column gap-2\">\n                    <p> {t(\"Add_the\")}</p>\n                    <div className=\"d-flex align-items-center gap-2\">\n                      <div className=\"icon\">\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width=\"24\"\n                          height=\"24\"\n                          viewBox=\"0 0 24 24\"\n                          fill=\"none\"\n                          stroke=\"currentColor\"\n                          stroke-width=\"2\"\n                          stroke-linecap=\"round\"\n                          stroke-linejoin=\"round\"\n                          class=\"icon icon-tabler icons-tabler-outline icon-tabler-library-photo\"\n                        >\n                          <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                          <path d=\"M7 3m0 2.667a2.667 2.667 0 0 1 2.667 -2.667h8.666a2.667 2.667 0 0 1 2.667 2.667v8.666a2.667 2.667 0 0 1 -2.667 2.667h-8.666a2.667 2.667 0 0 1 -2.667 -2.667z\" />\n                          <path d=\"M4.012 7.26a2.005 2.005 0 0 0 -1.012 1.737v10c0 1.1 .9 2 2 2h10c.75 0 1.158 -.385 1.5 -1\" />\n                          <path d=\"M17 7h.01\" />\n                          <path d=\"M7 13l3.644 -3.644a1.21 1.21 0 0 1 1.712 0l3.644 3.644\" />\n                          <path d=\"M15 12l1.644 -1.644a1.21 1.21 0 0 1 1.712 0l2.644 2.644\" />\n                        </svg>\n                      </div>\n                      <select\n                        name=\"addToAlbum\"\n                        value={addToAlbum}\n                        onChange={(e) => setAddToAlbum(e.target.value)}\n                        required\n                        style={{\n                          pointerEvents:\n                            visibility === \"Private_visible\" ? \"none\" : \"auto\",\n                          opacity: visibility === \"Private_visible\" ? 0.1 : 1,\n                        }}\n                      >\n                        <option value=\"No\">No</option>\n                        <option value=\"Yes\">Yes</option>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n\n                {addToAlbum === \"Yes\" && (\n                  <div className=\"col-12\">\n                    <div className=\"d-flex flex-column gap-2\">\n                      <p>{t(\"Add_the_album\")}</p>\n                      <div className=\"d-flex align-items-center gap-2\">\n                        <div className=\"icon\">\n                          <svg\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            width=\"24\"\n                            height=\"24\"\n                            viewBox=\"0 0 24 24\"\n                            fill=\"none\"\n                            stroke=\"currentColor\"\n                            strokeWidth=\"2\"\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                            className=\"icon icon-tabler icons-tabler-outline icon-tabler-library-photo\"\n                          >\n                            <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                            <path d=\"M7 3m0 2.667a2.667 2.667 0 0 1 2.667 -2.667h8.666a2.667 2.667 0 0 1 2.667 2.667v8.666a2.667 2.667 0 0 1 -2.667 2.667h-8.666a2.667 2.667 0 0 1 -2.667 -2.667z\" />\n                            <path d=\"M4.012 7.26a2.005 2.005 0 0 0 -1.012 1.737v10c0 1.1 .9 2 2 2h10c.75 0 1.158 -.385 1.5 -1\" />\n                            <path d=\"M17 7h.01\" />\n                            <path d=\"M7 13l3.644 -3.644a1.21 1.21 0 0 1 1.712 0l3.644 3.644\" />\n                            <path d=\"M15 12l1.644 -1.644a1.21 1.21 0 0 1 1.712 0l2.644 2.644\" />\n                          </svg>\n                        </div>\n                        <input\n                          type=\"text\"\n                          name=\"album_name\"\n                          placeholder=\"Enter album name...\"\n                          value={albumName}\n                          onChange={(e) => setAlbumName(e.target.value)}\n                          required={addToAlbum === \"Yes\"} // Required only if \"Yes\" is selected\n                        />\n                      </div>\n                    </div>\n                  </div>\n                )}\n                <div className=\"col-12\">\n                  <div className=\"d-flex flex-column gap-2 warning_text\">\n                    <div className=\"d-flex align-items-center gap-2\">\n                      <div className=\"icon\">\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width=\"24\"\n                          height=\"24\"\n                          viewBox=\"0 0 24 24\"\n                          fill=\"none\"\n                          stroke=\"currentColor\"\n                          stroke-width=\"2\"\n                          stroke-linecap=\"round\"\n                          stroke-linejoin=\"round\"\n                          class=\"icon icon-tabler icons-tabler-outline icon-tabler-alert-triangle\"\n                        >\n                          <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                          <path d=\"M12 9v4\" />\n                          <path d=\"M10.363 3.591l-8.106 13.534a1.914 1.914 0 0 0 1.636 2.871h16.214a1.914 1.914 0 0 0 1.636 -2.87l-8.106 -13.536a1.914 1.914 0 0 0 -3.274 0z\" />\n                          <path d=\"M12 16h.01\" />\n                        </svg>\n                      </div>\n                      <p>{t(\"Responsibility_for\")}</p>\n                    </div>\n                    <div className=\"d-flex align-items-center gap-2\">\n                      <p>\n                        {\" \"}\n                        <span>{t(\"This_forum_ONLY\")}</span>\n                        <br />\n                        <span>{t(\"By_uploading_images\")}</span>\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-12\">\n                  {yesNoerror && (\n                    <span style={{ color: \"red\", fontSize: \"12px\" }}>\n                      Please confirm that you have the rights to upload these\n                      images.\n                    </span>\n                  )}\n                  <div className=\"d-flex flex-column gap-2\">\n                    <p>{t(\"Do_you_have_the\")}</p>\n                    <div className=\"d-flex align-items-center gap-2\">\n                      <div className=\"icon\">\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width=\"24\"\n                          height=\"24\"\n                          viewBox=\"0 0 24 24\"\n                          fill=\"none\"\n                          stroke=\"currentColor\"\n                          stroke-width=\"2\"\n                          stroke-linecap=\"round\"\n                          stroke-linejoin=\"round\"\n                          class=\"icon icon-tabler icons-tabler-outline icon-tabler-copyright\"\n                        >\n                          <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                          <path d=\"M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0\" />\n                          <path d=\"M14 9.75a3.016 3.016 0 0 0 -4.163 .173a2.993 2.993 0 0 0 0 4.154a3.016 3.016 0 0 0 4.163 .173\" />\n                        </svg>\n                      </div>\n\n                      <select\n                        value={rightsConfirmed}\n                        onChange={(e) => setRightsConfirmed(e.target.value)}\n                        name=\"rightsConfirmed\"\n                      >\n                        <option value=\"Yes\">Yes</option>\n                        <option value=\"No\">No</option>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n                <span className=\"text-success\">{successmsg}</span>\n                <div className=\"col-12\">\n                  {spinner && (\n                    <div\n                      className=\"spinner-border text-success send_load\"\n                      role=\"status\"\n                    >\n                      <span className=\"visually-hidden\">{t(\"loading\")}...</span>\n                    </div>\n                  )}\n                  <button\n                    type=\"submit\"\n                    style={{\n                      pointerEvents: preebtn ? \"none\" : \"auto\", // Disable button when preebtn is true\n                      opacity: preebtn ? 0.1 : 1, // Reduce opacity when disabled\n                    }}\n                  >\n                    {t(\"upload\")}\n                  </button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport i18n from \"../i18n\";\nexport const PrivateImageRequest = ({ isOpen, onClose, LoginData }) => {\n  const apiUrl = \"https://backend.amourette.no/api/\";\n  const apiUrl2 = \"https://backend.amourette.no/api/members/\";\n  const [isRequestDetail, setRequestDetail] = useState([]);\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem(\"language\") || \"en\"; // Default to 'en' if no language is saved\n    // Change the language if it's not already the current language\n    if (i18n.language !== savedLanguage) {\n      i18n.changeLanguage(savedLanguage);\n    }\n  }, [i18n, t]);\n  useEffect(() => {\n    if (isOpen) {\n      getRequestDetails(); // Call the function only if the component is open\n    }\n  }, [isOpen]); // Dependency array ensures this runs when isOpen changes\n  useEffect(() => {\n    const ws = new WebSocket(\"wss://backend.amourette.no\"); // Adjust port if needed\n\n    ws.onmessage = (event) => {\n      try {\n        const receivedMessage = JSON.parse(event.data);\n        if (!receivedMessage) {\n          console.error(\"Received invalid JSON:\", event.data);\n          return;\n        }\n        console.log(receivedMessage);\n\n        // Ensure message is only seen by the sender or receiver\n      } catch (error) {\n        console.error(\"Failed to parse WebSocket message:\", error);\n        console.error(\"Raw message:\", event.data);\n      }\n    };\n\n    return () => {\n      ws.close();\n    };\n  }, [LoginData]);\n  const handleOverlayClick = (e) => {\n    // Check if the clicked element is the overlay\n    if (e.target.classList.contains(\"popup-overlay\")) {\n      onClose(); // Close the popup if the overlay is clicked\n    }\n  };\n\n  const getRequestDetails = async () => {\n    const formData = {\n      user_id: LoginData.id,\n    };\n    console.log(formData);\n    try {\n      const res = await axios.post(apiUrl + \"getRequestDetails\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      const respo = res.data;\n      setRequestDetail(respo);\n      // You can also set state here to manage the response data\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n        console.error(\"Error response data:\", err.response.data);\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const calculateAge = (birthday) => {\n    const birthDate = new Date(birthday);\n    const today = new Date();\n    let age = today.getFullYear() - birthDate.getFullYear();\n    const monthDifference = today.getMonth() - birthDate.getMonth();\n\n    // Adjust age if the birthday hasn't occurred yet this year\n    if (\n      monthDifference < 0 ||\n      (monthDifference === 0 && today.getDate() < birthDate.getDate())\n    ) {\n      age--;\n    }\n\n    return age;\n  };\n  const RequestConfirm = async (id, user_id, to_id) => {\n    const formData = {\n      user_id: to_id,\n      req_id: id,\n      to_id: user_id,\n    };\n    console.log(formData);\n    try {\n      const res = await axios.post(apiUrl2 + \"RequestConfirm\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      const respo = res.data;\n      getRequestDetails();\n      // You can also set state here to manage the response data\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n        console.error(\"Error response data:\", err.response.data);\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const RequestDelete = async (id, user_id, to_id) => {\n    const formData = {\n      user_id: to_id,\n      req_id: id,\n      to_id: user_id,\n    };\n    console.log(formData);\n    try {\n      const res = await axios.post(apiUrl2 + \"Requestdelete\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      const respo = res.data;\n      getRequestDetails();\n      // You can also set state here to manage the response data\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n        console.error(\"Error response data:\", err.response.data);\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  // Early return if the chat box is not open\n  if (!isOpen) return null;\n\n  return (\n    <>\n      <div className=\"popup-overlay checkbox\" onClick={handleOverlayClick}>\n        <div className=\"popup-content col-md-4\">\n          <button className=\"close-button\" onClick={onClose}>\n            &times; {/* Close button */}\n          </button>\n          <div className=\"d-flex flex-column gap-0 chat_box \">\n            <h3 className=\"p-3\">{t(\"All_Request\")}</h3>\n            <div className=\"requestscroll\">\n              {isRequestDetail.length === 0 ? (\n                <p className=\"p-3 text-center\">{t(\"No_result_found\")}.</p> // Message when no requests are available\n              ) : (\n                isRequestDetail.map((request, index) => (\n                  <div className=\"friend_formen w-100 p-3\" key={index}>\n                    <div className=\"d-flex w-100 flex-md-row flex-column align-items-start justify-content-between gap-3\">\n                      <Link\n                        to=\"/singlesearch\"\n                        className=\"d-flex flex-md-row gap-3\"\n                      >\n                        <div className=\"flex-shrink-0\">\n                          <div className=\"fromimg ofit rounded-2 overflow-hidden\">\n                            <img src={request.profile_image} alt=\"userimag\" />\n                          </div>\n                        </div>\n                        <div className=\"flex-grow-1\">\n                          <div className=\"d-flex flex-column gap-2\">\n                            <div className=\"d-flex gap-3 align-items-center\">\n                              <h3>{request.username},</h3>{\" \"}\n                              {/* Display username */}\n                              <h3>\n                                {calculateAge(request.birthday_date)}\n                              </h3>{\" \"}\n                              {/* Display age */}\n                            </div>\n                            <h4>{request.location}</h4> {/* Display location */}\n                          </div>\n                        </div>\n                      </Link>\n                      <div className=\"d-flex flex-column gap-2\">\n                        <h5>{request.album_name}</h5>\n                        <div className=\"d-flex align-items-center gap-4\">\n                          {request.status === \"Yes\" ? (\n                            <button\n                              type=\"button\"\n                              className=\"confirm_btn\"\n                              disabled\n                            >\n                              {t(\"Confirmed\")}\n                            </button>\n                          ) : (\n                            <>\n                              <button\n                                className=\"confirm_btn\"\n                                onClick={() =>\n                                  RequestConfirm(\n                                    request.id,\n                                    request.user_id,\n                                    request.to_id\n                                  )\n                                }\n                              >\n                                {t(\"Confirm\")}\n                              </button>\n                              <button\n                                className=\"cancel_btn\"\n                                onClick={() =>\n                                  RequestDelete(\n                                    request.id,\n                                    request.user_id,\n                                    request.to_id\n                                  )\n                                }\n                              >\n                                {t(\"Cancel\")}\n                              </button>\n                            </>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                ))\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\nexport default PrivateImageRequest;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport { Link, useNavigate, useLocation } from \"react-router-dom\";\n// import { Link } from \"react-router-dom\";\n\nimport Select from \"react-select\";\nimport Headertwo from \"../components/Headertwo\";\nimport { Uploadprivatealbum } from \"../components/Uploadprivatealbum\";\nimport {\n  Accordion,\n  AccordionItem,\n  AccordionItemHeading,\n  AccordionItemButton,\n  AccordionItemPanel,\n} from \"react-accessible-accordion\";\n\n// Demo styles, see 'Styles' section below for some notes on use.\nimport \"react-accessible-accordion/dist/fancy-example.css\";\nimport { FiPlus } from \"react-icons/fi\";\nimport { BsCloudUpload } from \"react-icons/bs\";\n\nimport SuccessPop from \"../components/SuccessPop\";\nimport ErrorPop from \"../components/ErrorPop\";\n\nimport PrivateImageRequest from \"../components/PrivateImageRequest\";\n\nimport de1 from \"../assets/images/de1.png\";\nimport de2 from \"../assets/images/de2.png\";\nimport de3 from \"../assets/images/de3.png\";\nimport de4 from \"../assets/images/de4.png\";\nimport de5 from \"../assets/images/de5.png\";\nimport de6 from \"../assets/images/de6.png\";\nimport de7 from \"../assets/images/de7.png\";\nimport de8 from \"../assets/images/de8.png\";\nimport de9 from \"../assets/images/de9.png\";\nimport de10 from \"../assets/images/de10.png\";\nimport de11 from \"../assets/images/de11.png\";\nimport de12 from \"../assets/images/de12.png\";\nimport de13 from \"../assets/images/de13.png\";\nimport de14 from \"../assets/images/connected_with.png\";\nimport de15 from \"../assets/images/gender.png\";\nimport de16 from \"../assets/images/intersted_in.png\";\nimport { useTranslation } from \"react-i18next\";\nimport i18n from \"../i18n\";\nimport MediaRenderer from \"../components/MediaRenderer\";\nimport { Editor } from \"@tinymce/tinymce-react\";\nfunction Editprofile() {\n  const navigate = useNavigate();\n  const editorRef = useRef(null);\n  const log = () => {\n    if (editorRef.current) {\n      console.log(editorRef.current.getContent());\n    }\n  };\n  const location = useLocation();\n  const [spinner, setspinner] = useState(false);\n  const [ErrorForAll, setErrorForAll] = useState(\"\");\n  const [editorContent, setEditorContent] = useState(\"\");\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  const [isPopupOpen1, setIsPopupOpen1] = useState(false);\n  const [isImagePrivate, setIsImagePrivate] = useState(false);\n  const [showPopSuccess, setShowPopSuccess] = useState(false);\n  const [showPopError, setShowPopError] = useState(false);\n  const [successPopMessage, setPopsuccessMessage] = useState(\"\");\n  const [errorPopMessage, setPoperrorMessage] = useState(\"\");\n  const [LoginData, setLoginData] = useState(null);\n  const [profilevalue, setprofilevalue] = useState(\"\");\n  const [genders, setgenders] = useState(\"\");\n  const [Singel, setSingel] = useState([]);\n  const [InterstedIn, setInterstedIn] = useState([]);\n  const [nationality, setNationality] = useState(\"\");\n  const [bodyType, setBodyType] = useState(\"\");\n  const [selectedSubRegion, setSelectedSubRegion] = React.useState(\"\");\n\n  const [sexual_orientation, setsexual_orientation] = useState([]);\n  const [relationship_status, setrelationship_status] = useState(\"\");\n\n  const [smokerValue, setsmokerValue] = useState(\"\");\n  const [tattosValue, settattosValue] = useState(\"\");\n\n  const [fetishValue, setfetishValue] = useState([]);\n  const [search_looking_for, setsearch_looking_for] = useState([]);\n  const [drinkerValue, setdrinkerValue] = useState(\"\");\n  const [body_piercingsValue, setbody_piercingsValue] = useState(\"\");\n  const [degree, setDegree] = useState(\"\");\n  const [heightFeet, setHeightFeet] = useState(profilevalue.height_feet || \"\");\n  const [heightInches, setHeightInches] = useState(\n    profilevalue.height_inches || \"\"\n  );\n\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const [selectedFile_1, setSelectedFile_1] = useState(null);\n  const [errorMessage_1, setErrorMessage_1] = useState(\"\");\n\n  const [selectedFile_2, setSelectedFile_2] = useState(null);\n  const [errorMessage_2, setErrorMessage_2] = useState(\"\");\n\n  const [selectedFile_3, setSelectedFile_3] = useState(null);\n  const [errorMessage_3, setErrorMessage_3] = useState(\"\");\n\n  const [selectedFile_4, setSelectedFile_4] = useState(null);\n  const [errorMessage_4, setErrorMessage_4] = useState(\"\");\n\n  const [imageUrl, setImageUrl] = useState(\"\");\n\n  const [imageUrl1, setImageUrl1] = useState(\"\");\n  const [imageUrl2, setImageUrl2] = useState(\"\");\n  const [imageUrl3, setImageUrl3] = useState(\"\");\n  const [imageUrl4, setImageUrl4] = useState(\"\");\n  const [isMaleChecked, setIsMaleChecked] = useState(false);\n  const [maleOptions, setMaleOptions] = useState({\n    straight: false,\n    \"bi-sexual\": false,\n    \"bi-curious\": false,\n    gay: false,\n    bull: false,\n  });\n  const [isCoupleChecked, setIsCoupleChecked] = useState(false);\n  const [coupleOptions, setCoupleOptions] = useState({\n    fullswap: false,\n    softswap: false,\n    cuckold: false,\n    exhibitionist: false,\n    voyeur: false,\n    hotwife: false,\n  });\n  const [isFemaleChecked, setIsFemaleChecked] = useState(false);\n  const [femaleOptions, setFemaleOptions] = useState({\n    Straight: false,\n    \"Bi-sexual\": false,\n    \"Bi-curious\": false,\n    lesbian: false,\n    Hotwife: false,\n  });\n  const [sexuality, setSexuality] = useState([]);\n  const [getallAlbum, setgetallAlbum] = useState([]);\n  var apiURL = \"https://backend.amourette.no/api/\";\n  var apiURLMembers = \"https://backend.amourette.no/api/members/\";\n  useEffect(() => {\n    const anyOptionChecked = Object.values(coupleOptions).some(\n      (isChecked) => isChecked\n    );\n    setIsCoupleChecked(anyOptionChecked);\n  }, [coupleOptions]);\n  useEffect(() => {\n    const anyOptionChecked = Object.values(femaleOptions).some(\n      (isChecked) => isChecked\n    );\n    setIsFemaleChecked(anyOptionChecked);\n  }, [femaleOptions]);\n  useEffect(() => {\n    // Check if the username key exists in session storage\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = JSON.parse(storedUsername);\n    if (userLogin == null) {\n      navigate(\"/login\");\n    } else {\n      setLoginData(userLogin);\n      // Call getProfile only if userLogin is available\n      getprofile(userLogin.email);\n    }\n  }, []);\n  useEffect(() => {\n    if (profilevalue?.looking_for) {\n      setEditorContent(profilevalue.looking_for);\n    }\n  }, [profilevalue]);\n  const handleFeetChange = (event) => {\n    setHeightFeet(event.target.value);\n  };\n\n  const handlefetishChange = (event) => {\n    //setSingel(event.target.value); // Update state with the selected value\n    const { value, checked } = event.target;\n\n    if (checked) {\n      // Add the value to the array if checked\n      setfetishValue((prev) => [...prev, value]);\n    } else {\n      // Remove the value from the array if unchecked\n      setfetishValue((prev) =>\n        prev.filter((orientation) => orientation !== value)\n      );\n    }\n  };\n  const handlebody_piercingsChange = (event) => {\n    setbody_piercingsValue(event.target.value);\n  };\n  const handledrinkerChange = (event) => {\n    setdrinkerValue(event.target.value);\n  };\n  const handletattosChange = (event) => {\n    settattosValue(event.target.value);\n  };\n  const handlesmokerChange = (event) => {\n    setsmokerValue(event.target.value);\n  };\n  const handleDegreeChange = (event) => {\n    setDegree(event.target.value);\n  };\n\n  const handleInchesChange = (event) => {\n    setHeightInches(event.target.value);\n  };\n  const handleSingelChange = (event) => {\n    //setSingel(event.target.value); // Update state with the selected value\n    const { value, checked } = event.target;\n\n    if (checked) {\n      // Add the value to the array if checked\n      setSingel((prev) => [...prev, value]);\n    } else {\n      // Remove the value from the array if unchecked\n      setSingel((prev) => prev.filter((orientation) => orientation !== value));\n    }\n  };\n\n  const handleInterstedInChange = (event) => {\n    const { value, checked } = event.target;\n\n    if (checked) {\n      // Add the value to the array if checked\n      setInterstedIn((prev) => [...prev, value]);\n    } else {\n      // Remove the value from the array if unchecked\n      setInterstedIn((prev) =>\n        prev.filter((orientation) => orientation !== value)\n      );\n    }\n  };\n  const handleNationalityChange = (event) => {\n    setNationality(event.target.value); // Update state with the selected value\n  };\n  const handleBodyTypeChange = (event) => {\n    setBodyType(event.target.value); // Update state with the selected value\n  };\n\n  const handleRelationStatusChange = (event) => {\n    setrelationship_status(event.target.value); // Update state with the selected value\n  };\n  const handleSearchLookingforChange = (event) => {\n    const { value, checked } = event.target;\n\n    if (checked) {\n      // Add the value to the array if checked\n      setsearch_looking_for((prev) => [...prev, value]);\n    } else {\n      // Remove the value from the array if unchecked\n      setsearch_looking_for((prev) =>\n        prev.filter((orientation) => orientation !== value)\n      );\n    }\n  };\n\n  const handleCheckChange = (event) => {\n    const { checked } = event.target; // Get the checked status of the checkbox\n    if (checked === true) {\n      console.log(checked);\n      setIsImagePrivate(true); // Update the state\n    } else {\n      setIsImagePrivate(false); // Update the state\n    }\n\n    // Append the checked status to formData\n  };\n\n  const handleSexualOrientationChange = (event) => {\n    const { value, checked } = event.target;\n\n    if (checked) {\n      // Add the value to the array if checked\n      setsexual_orientation((prev) => [...prev, value]);\n    } else {\n      // Remove the value from the array if unchecked\n      setsexual_orientation((prev) =>\n        prev.filter((orientation) => orientation !== value)\n      );\n    }\n  };\n\n  const handlegendersChange = (event) => {\n    setgenders(event.target.value); // Update state with the selected value\n    setSexuality([]);\n  };\n  const maleOptions_select = [\n    { value: \"Straight\", label: \"Straight\" },\n    { value: \"Bi-sexual\", label: \"Bi-sexual\" },\n    { value: \"Bi-curious\", label: \"Bi-curious\" },\n    { value: \"Gay\", label: \"Gay\" },\n    { value: \"Bull\", label: \"Bull\" },\n  ];\n\n  const femaleOptions_select = [\n    { value: \"Straight\", label: \"Straight\" },\n    { value: \"Bi-sexual\", label: \"Bi-sexual\" },\n    { value: \"Bi-curious\", label: \"Bi-curious\" },\n    { value: \"Lesbian\", label: \"Lesbian\" },\n    { value: \"Hotwife\", label: \"Hotwife\" },\n  ];\n\n  const coupleOptions_select = [\n    { value: \"Full swap\", label: \"Full swap\" },\n    { value: \"Soft swap\", label: \"Soft swap\" },\n    { value: \"Cuckold\", label: \"Cuckold\" },\n    { value: \"Exhibitionist\", label: \"Exhibitionist\" },\n    { value: \"Voyeur\", label: \"Voyeur\" },\n    { value: \"Still Exploring\", label: \"Still Exploring\" },\n    { value: \"HotWife\", label: \"HotWife\" },\n  ];\n  const setSexualitys = (event) => {\n    setSexuality(event);\n  };\n  const handleSexualityChange = (selectedOptions) => {\n    setSexuality(selectedOptions); // Handle the selected multiple options\n  };\n  const getprofile = async (email) => {\n    let formData = {\n      email: email,\n    };\n    try {\n      const res = await axios.post(apiURL + \"getProfile\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      });\n      console.log(res.data);\n      console.log(\"het\");\n      setprofilevalue(res.data);\n      if (res.data.makeImagePrivate === 1) {\n        setIsImagePrivate(true);\n      } else {\n        setIsImagePrivate(false);\n      }\n\n      setNationality(res.data.nationality);\n      setBodyType(res.data.bodytype);\n      setDegree(res.data.degree);\n      setdrinkerValue(res.data.drinker);\n      if (res.data.fetish) {\n        try {\n          const fetish = JSON.parse(res.data.fetish);\n          setfetishValue(Array.isArray(fetish) ? fetish : []);\n        } catch (error) {\n          console.error(\"Error parsing fetish:\", error);\n          setfetishValue([]); // Fallback to empty array on error\n        }\n      } else {\n        setfetishValue([]);\n      }\n\n      setbody_piercingsValue(res.data.body_piercings);\n      settattosValue(res.data.tattos);\n      setsmokerValue(res.data.smoker);\n\n      if (res.data.search_looking_for) {\n        try {\n          const search_looking_for = JSON.parse(res.data.search_looking_for);\n          setsearch_looking_for(\n            Array.isArray(search_looking_for) ? search_looking_for : []\n          );\n        } catch (error) {\n          console.error(\"Error parsing search_looking_for:\", error);\n          setsearch_looking_for([]); // Fallback to empty array on error\n        }\n      } else {\n        setsearch_looking_for([]);\n      }\n      setrelationship_status(res.data.relationship_status);\n      setHeightFeet(res.data.height_feet);\n      setHeightInches(res.data.height_inches);\n      if (\n        res.data.sexual_orientation !== null &&\n        res.data.sexual_orientation !== \"\" &&\n        res.data.sexual_orientation !== \"null\"\n      ) {\n        const parsedSexualOrientation = JSON.parse(res.data.sexual_orientation);\n\n        // Now, you can update the state with the parsed array\n        setsexual_orientation(parsedSexualOrientation);\n      }\n      if (res.data.connectwith) {\n        try {\n          const connectwith = JSON.parse(res.data.connectwith);\n          setSingel(Array.isArray(connectwith) ? connectwith : []);\n        } catch (error) {\n          console.error(\"Error parsing connectwith:\", error);\n          setSingel([]); // Fallback to empty array on error\n        }\n      } else {\n        setSingel([]);\n      }\n\n      if (res.data.interstedin) {\n        try {\n          const interstedin = JSON.parse(res.data.interstedin);\n          setInterstedIn(Array.isArray(interstedin) ? interstedin : []);\n        } catch (error) {\n          console.error(\"Error parsing interstedin:\", error);\n          setInterstedIn([]); // Fallback to empty array on error\n        }\n      } else {\n        setInterstedIn([]);\n      }\n\n      setImageUrl(res.data.profile_image);\n      setgenders(res.data.gender);\n      if (res.data.sexuality !== null && res.data.sexuality !== \"\") {\n        const inputString = JSON.parse(res.data.sexuality);\n        const optionss = inputString.map((item) => ({\n          value: item,\n          label: item,\n        }));\n        // Now, you can update the state with the parsed array\n        setSexuality(optionss);\n      }\n\n      setImageUrl1(res.data.profile_image_1);\n      setImageUrl2(res.data.profile_image_2);\n      setImageUrl3(res.data.profile_image_3);\n      setImageUrl4(res.data.profile_image_4);\n\n      console.log(selectedRegion);\n\n      if (res.data.location !== \"null\") {\n        setSelectedRegion(res.data.location);\n      }\n\n      if (res.data.town !== null && res.data.town !== \"\") {\n        const parsedtown = JSON.parse(res.data.town);\n\n        // Now, you can update the state with the parsed array\n        setSelectedTown(parsedtown);\n      }\n      if (res.data.subregion !== \"null\") {\n        setSelectedSubRegion(res.data.subregion);\n      }\n\n      const malee = res.data.male;\n\n      if (typeof malee === \"string\") {\n        try {\n          // Attempt to parse the string into an array\n          const maleArray = JSON.parse(malee);\n          console.log(\"Male options array:\", maleArray); // Log the parsed array\n\n          setMaleOptions((prevState) => {\n            const updatedMaleOptions = { ...prevState };\n            maleArray.forEach((option) => {\n              if (updatedMaleOptions.hasOwnProperty(option)) {\n                updatedMaleOptions[option] = true;\n              }\n            });\n            return updatedMaleOptions;\n          });\n        } catch (error) {\n          console.error(\"Error parsing 'male' field:\", error);\n        }\n      } else {\n        console.log(\"male is not a string, it's:\", typeof malee);\n      }\n      const femalee = res.data.female;\n      if (typeof femalee === \"string\") {\n        try {\n          // Attempt to parse the string into an array\n          const femaleArray = JSON.parse(femalee);\n          console.log(\"Female options array:\", femaleArray); // Log the parsed array\n\n          setFemaleOptions((prevState) => {\n            const updatedFeMaleOptions = { ...prevState };\n            femaleArray.forEach((option) => {\n              if (updatedFeMaleOptions.hasOwnProperty(option)) {\n                updatedFeMaleOptions[option] = true;\n              }\n            });\n            return updatedFeMaleOptions;\n          });\n        } catch (error) {\n          console.error(\"Error parsing 'male' field:\", error);\n        }\n      } else {\n        console.log(\"male is not a string, it's:\", typeof malee);\n      }\n      const couplee = res.data.couple;\n      if (typeof couplee === \"string\") {\n        try {\n          // Attempt to parse the string into an array\n          const coupleArray = JSON.parse(couplee);\n          console.log(\"Female options array:\", coupleArray); // Log the parsed array\n\n          setCoupleOptions((prevState) => {\n            const updatedCoupleOptions = { ...prevState };\n            coupleArray.forEach((option) => {\n              if (updatedCoupleOptions.hasOwnProperty(option)) {\n                updatedCoupleOptions[option] = true;\n              }\n            });\n            return updatedCoupleOptions;\n          });\n        } catch (error) {\n          console.error(\"Error parsing 'couplee' field:\", error);\n        }\n      } else {\n        console.log(\"couplee is not a string, it's:\", typeof couplee);\n      }\n      console.log(maleOptions);\n    } catch (err) {}\n  };\n  const MAX_FILE_SIZE = 5 * 1024 * 1024; // 2 MB\n  const handleFileChange = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      // Check if the file is an image\n      const isImage = file.type.startsWith(\"image/\");\n      if (!isImage) {\n        setErrorMessage(\"Please upload a valid image file.\");\n        setSelectedFile(null);\n        setImageUrl(\"\"); // Clear the image URL\n        return;\n      }\n\n      // Check the file size\n      if (file.size > MAX_FILE_SIZE) {\n        setErrorMessage(\"File size must be less than 2 MB.\");\n        setSelectedFile(null);\n        setImageUrl(\"\"); // Clear the image URL\n        return;\n      }\n\n      // Clear any previous error messages and set the selected file\n      setErrorMessage(\"\");\n      setSelectedFile(file);\n      setImageUrl(URL.createObjectURL(file)); // Create a URL for the selected image\n    }\n  };\n\n  const handleFileChange_1 = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      // Check if the file is an image\n      const isImage = file.type.startsWith(\"image/\");\n      if (!isImage) {\n        setErrorMessage_1(\"Please upload a valid image file.\");\n        setSelectedFile_1(null);\n        setImageUrl1(\"\");\n        return;\n      }\n\n      // Check the file size\n      if (file.size > MAX_FILE_SIZE) {\n        setErrorMessage_1(\"File size must be less than 2 MB.\");\n        setSelectedFile_1(null);\n        setImageUrl1(\"\");\n        return;\n      }\n\n      // Clear any previous error messages and set the selected file\n      setErrorMessage_1(\"\");\n      setSelectedFile_1(file);\n      setImageUrl1(URL.createObjectURL(file)); // Create a URL for the selected image\n    }\n  };\n\n  const handleFileChange_2 = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      // Check if the file is an image\n      const isImage = file.type.startsWith(\"image/\");\n      if (!isImage) {\n        setErrorMessage_2(\"Please upload a valid image file.\");\n        setSelectedFile_2(null);\n        setImageUrl2(\"\");\n        return;\n      }\n\n      // Check the file size\n      if (file.size > MAX_FILE_SIZE) {\n        setErrorMessage_2(\"File size must be less than 2 MB.\");\n        setSelectedFile_2(null);\n        setImageUrl2(\"\");\n        return;\n      }\n\n      // Clear any previous error messages and set the selected file\n      setErrorMessage_2(\"\");\n      setSelectedFile_2(file);\n      setImageUrl2(URL.createObjectURL(file));\n    }\n  };\n  const handleFileChange_3 = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      // Check if the file is an image\n      const isImage = file.type.startsWith(\"image/\");\n      if (!isImage) {\n        setErrorMessage_3(\"Please upload a valid image file.\");\n        setSelectedFile_3(null);\n        setImageUrl3(\"\");\n        return;\n      }\n\n      // Check the file size\n      if (file.size > MAX_FILE_SIZE) {\n        setErrorMessage_3(\"File size must be less than 2 MB.\");\n        setSelectedFile_3(null);\n        setImageUrl3(\"\");\n        return;\n      }\n\n      // Clear any previous error messages and set the selected file\n      setErrorMessage_3(\"\");\n      setSelectedFile_3(file);\n      setImageUrl3(URL.createObjectURL(file));\n    }\n  };\n  const handleFileChange_4 = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      // Check if the file is an image\n      const isImage = file.type.startsWith(\"image/\");\n      if (!isImage) {\n        setErrorMessage_4(\"Please upload a valid image file.\");\n        setSelectedFile_4(null);\n        setImageUrl4(\"\");\n        return;\n      }\n\n      // Check the file size\n      if (file.size > MAX_FILE_SIZE) {\n        setErrorMessage_4(\"File size must be less than 2 MB.\");\n        setSelectedFile_4(null);\n        setImageUrl4(\"\");\n        return;\n      }\n\n      // Clear any previous error messages and set the selected file\n      setErrorMessage_4(\"\");\n      setSelectedFile_4(file);\n      setImageUrl4(URL.createObjectURL(file));\n    }\n  };\n\n  const handleFemaleChange = () => {\n    const newStatus = !isFemaleChecked;\n    setIsFemaleChecked(newStatus);\n\n    // Set all nested options to match the new main checkbox state\n    if (newStatus) {\n      // If the main checkbox is checked, we set the options to true\n      setFemaleOptions({\n        Straight: true,\n        \"Bi-sexual\": true,\n        \"Bi-curious\": true,\n        lesbian: true,\n        Hotwife: true,\n      });\n    } else {\n      // If the main checkbox is unchecked, we set the options to false\n      setFemaleOptions({\n        straight: false,\n        \"Bi-sexual\": false,\n        \"Bi-curious\": false,\n        lesbian: false,\n        hotwife: false,\n      });\n    }\n  };\n\n  const handleOptionChangeFemaless = (option) => {\n    console.log(\"df - Triggered for option:\", option); // Add the option to identify which one was clicked\n    setFemaleOptions((prevOptions) => ({\n      ...prevOptions,\n      [option]: !prevOptions[option],\n    }));\n  };\n  const handleOption_ChangeMale = (options) => {\n    console.log(\"ht\");\n    setMaleOptions((prevOptionss) => ({\n      ...prevOptionss,\n      [options]: !prevOptionss[options],\n    }));\n  };\n  const handleCoupleChange = () => {\n    const newStatus = !isCoupleChecked;\n    setIsCoupleChecked(newStatus);\n\n    // Update all nested checkboxes based on the \"Couple\" checkbox\n    setCoupleOptions({\n      fullswap: newStatus,\n      softswap: newStatus,\n      cuckold: newStatus,\n      exhibitionist: newStatus,\n      voyeur: newStatus,\n      hotwife: newStatus,\n    });\n  };\n\n  const handleOptionChangeCouple = (option) => {\n    setCoupleOptions((prevOptions) => ({\n      ...prevOptions,\n      [option]: !prevOptions[option],\n    }));\n  };\n  useEffect(() => {\n    const anyOptionChecked = Object.values(maleOptions).some(\n      (isChecked) => isChecked\n    );\n    setIsMaleChecked(anyOptionChecked);\n  }, [maleOptions]);\n\n  const handleMaleChange = () => {\n    const newStatus = !isMaleChecked;\n    setIsMaleChecked(newStatus);\n\n    // Set all nested options to match the new main checkbox state\n    if (newStatus) {\n      // If the main checkbox is checked, set the options to true\n      setMaleOptions({\n        straight: true,\n        bisexual: true,\n        bicurious: true,\n        gay: true,\n        bull: true,\n      });\n    } else {\n      // If the main checkbox is unchecked, set the options to false\n      setMaleOptions({\n        straight: false,\n        bisexual: false,\n        bicurious: false,\n        gay: false,\n        bull: false,\n      });\n    }\n  };\n  function showErrorAndScroll(message, fieldId) {\n    showError(message);\n    const element = document.getElementById(fieldId);\n    if (element) {\n      element.scrollIntoView({ behavior: \"smooth\", block: \"center\" });\n    }\n  }\n  const showError = (message) => {\n    setShowPopError(true);\n    setPoperrorMessage(message);\n    setTimeout(() => {\n      setShowPopError(false);\n      setPoperrorMessage(\"\");\n    }, 1500);\n  };\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    var vl = event.target;\n    const formData = new FormData();\n    if (selectedRegion === 0 || selectedRegion === \"\") {\n      showErrorAndScroll(\"Please choose location\", \"location\");\n      return;\n    }\n    if (!nationality) {\n      showErrorAndScroll(\"Please select your nationality.\", \"nationality\");\n      return;\n    }\n    if (!bodyType) {\n      showErrorAndScroll(\"Please select your body type.\", \"bodyType\");\n      return;\n    }\n    if (heightFeet === \"null\" || heightFeet === null) {\n      showErrorAndScroll(\"Please select your height.\", \"heightFeet\");\n      return;\n    }\n    if (sexual_orientation.length === 0 || sexual_orientation === null) {\n      showErrorAndScroll(\n        \"Please choose sexual orientation\",\n        \"sexual_orientation\"\n      );\n      return;\n    }\n    if (genders === \"\" || genders === \"null\" || genders === null) {\n      showErrorAndScroll(\"Please select gender\", \"genders\");\n      return;\n    }\n    if (Singel.length === 0 || Singel === null) {\n      showErrorAndScroll(\"Please choose connect with\", \"Singel\");\n      return;\n    }\n    if (InterstedIn.length === 0 || InterstedIn === null) {\n      showErrorAndScroll(\"Please choose intersted in\", \"InterstedIn\");\n      return;\n    }\n    if (\n      relationship_status === \"\" ||\n      relationship_status === \"null\" ||\n      relationship_status === null\n    ) {\n      showErrorAndScroll(\n        \"Please select relationship status\",\n        \"relationship_status\"\n      );\n      return;\n    }\n    if (search_looking_for.length === 0 || search_looking_for === null) {\n      showErrorAndScroll(\"Please choose looking for\", \"search_looking_for\");\n      return;\n    }\n    if (degree === \"\" || degree === \"null\" || degree === null) {\n      showErrorAndScroll(\"Please select degree\", \"degree\");\n      return;\n    }\n    if (\n      drinkerValue === \"\" ||\n      drinkerValue === \"null\" ||\n      drinkerValue === null\n    ) {\n      showErrorAndScroll(\"Please select drinker\", \"drinkerValue\");\n      return;\n    }\n    if (smokerValue === \"\" || smokerValue === \"null\" || smokerValue === null) {\n      showErrorAndScroll(\"Please select smoker\", \"smokerValue\");\n      return;\n    }\n    if (tattosValue === \"\" || tattosValue === \"null\" || tattosValue === null) {\n      showErrorAndScroll(\"Please select tattoos\", \"tattosValue\");\n      return;\n    }\n    if (\n      body_piercingsValue === \"\" ||\n      body_piercingsValue === \"null\" ||\n      body_piercingsValue === null\n    ) {\n      showErrorAndScroll(\"Please select body piercing\", \"body_piercingsValue\");\n      return;\n    }\n    if (fetishValue === 0 || fetishValue === null) {\n      showErrorAndScroll(\"Please choose fetish\", \"fetishValue\");\n      return;\n    }\n    setspinner(true);\n    formData.append(\"looking_for\", editorContent !== \"\" ? editorContent : \"\");\n\n    // Append 'username' with a check\n    formData.append(\n      \"username\",\n      vl.username.value !== \"\" ? vl.username.value : \"\"\n    );\n\n    // Append other fields with checks\n    formData.append(\"location\", selectedRegion !== \"\" ? selectedRegion : \"\");\n    //formData.append(\"town\", selectedTown !== \"\" ? selectedTown : \"\");\n    formData.append(\n      \"preferences\",\n      vl.preferences.value !== \"\" ? vl.preferences.value : \"\"\n    );\n    formData.append(\n      \"nationality\",\n      vl.nationality.value !== \"\" ? vl.nationality.value : \"\"\n    );\n    formData.append(\n      \"bodytype\",\n      vl.bodytype.value !== \"\" ? vl.bodytype.value : \"\"\n    );\n    formData.append(\"height_feet\", heightFeet !== \"\" ? heightFeet : \"\");\n\n    if (Singel.length > 0) {\n      formData.append(\n        \"connectwith\",\n        JSON.stringify(Singel) // Ensure it's saved as a JSON string\n      );\n    } else {\n      formData.append(\"connectwith\", \"\"); // Append an empty string if no selection\n    }\n    if (InterstedIn.length > 0) {\n      formData.append(\n        \"interstedin\",\n        JSON.stringify(InterstedIn) // Ensure it's saved as a JSON string\n      );\n    } else {\n      formData.append(\"interstedin\", \"\"); // Append an empty string if no selection\n    }\n\n    formData.append(\"height_inches\", heightInches !== \"\" ? heightInches : \"\");\n    if (sexual_orientation.length > 0) {\n      formData.append(\n        \"sexual_orientation\",\n        JSON.stringify(sexual_orientation) // Ensure it's saved as a JSON string\n      );\n    } else {\n      formData.append(\"sexual_orientation\", \"\"); // Append an empty string if no selection\n    }\n    formData.append(\n      \"subregion\",\n      selectedSubRegion !== \"\" ? selectedSubRegion : \"\"\n    );\n    if (selectedTown.length > 0) {\n      formData.append(\n        \"town\",\n        JSON.stringify(selectedTown) // Ensure it's saved as a JSON string\n      );\n    } else {\n      formData.append(\"town\", \"\"); // Append an empty string if no selection\n    }\n    formData.append(\"genders\", genders !== \"\" ? genders : \"\");\n    formData.append(\n      \"relationship_status\",\n      relationship_status !== \"\" ? relationship_status : \"\"\n    );\n    if (search_looking_for.length > 0) {\n      formData.append(\n        \"search_looking_for\",\n        JSON.stringify(search_looking_for) // Ensure it's saved as a JSON string\n      );\n    } else {\n      formData.append(\"search_looking_for\", \"\"); // Append an empty string if no selection\n    }\n    formData.append(\"degree\", degree !== \"\" ? degree : \"\");\n    formData.append(\"fileType\", \"profileImage\");\n    formData.append(\"drinker\", drinkerValue !== \"\" ? drinkerValue : \"\");\n    formData.append(\"smoker\", smokerValue !== \"\" ? smokerValue : \"\");\n    formData.append(\"tattos\", tattosValue !== \"\" ? tattosValue : \"\");\n    formData.append(\n      \"body_piercings\",\n      body_piercingsValue !== \"\" ? body_piercingsValue : \"\"\n    );\n    if (fetishValue.length > 0) {\n      formData.append(\n        \"fetish\",\n        JSON.stringify(fetishValue) // Ensure it's saved as a JSON string\n      );\n    } else {\n      formData.append(\"fetish\", \"\"); // Append an empty string if no selection\n    }\n\n    formData.append(\"token\", LoginData.token);\n    formData.append(\"email\", LoginData.email);\n    Object.keys(maleOptions).forEach((option) => {\n      if (maleOptions[option]) {\n        formData.append(\"male[]\", option); // Append checked options as an array\n      }\n    });\n    Object.keys(femaleOptions).forEach((option) => {\n      if (femaleOptions[option]) {\n        formData.append(\"female[]\", option); // Append checked options as an array\n      }\n    });\n    Object.keys(coupleOptions).forEach((option) => {\n      if (coupleOptions[option]) {\n        formData.append(\"couple[]\", option); // Append checked options as an array\n      }\n    });\n    sexuality.forEach((item) => {\n      formData.append(\"sexuality\", item.value); // Append only the \"value\" field\n    });\n\n    formData.append(\"profile_image\", selectedFile);\n    formData.append(\"profile_image_1\", selectedFile_1);\n    formData.append(\"profile_image_2\", selectedFile_2);\n    formData.append(\"profile_image_3\", selectedFile_3);\n    formData.append(\"profile_image_4\", selectedFile_4);\n\n    formData.append(\"makeImagePrivate\", isImagePrivate ? 1 : 0);\n\n    try {\n      const res = await axios.post(apiURL + \"updateProfile\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      });\n      setspinner(false);\n      setShowPopSuccess(true);\n      setPopsuccessMessage(res.data.message);\n      setTimeout(() => {\n        setShowPopError(false);\n        setShowPopSuccess(false);\n        navigate(`/friend/${profilevalue.id}`);\n      }, 3500);\n\n      // Handle success (e.g., redirect or show a success message)\n    } catch (err) {\n      if (err.response && err.response.data && err.response.data.message) {\n        setShowPopSuccess(false);\n        setShowPopError(true);\n        setPoperrorMessage(err.response.data.message); // Store the error message in state\n      } else {\n        setShowPopSuccess(false);\n        setShowPopError(true);\n        setPoperrorMessage(\"An unknown error occurred.\");\n      }\n      setTimeout(() => {\n        setShowPopError(false);\n        setShowPopSuccess(false);\n      }, 3500);\n    }\n  };\n  const openPopup = () => {\n    setIsPopupOpen(true);\n    document.body.style.overflowY = \"hidden\";\n  };\n  const openPopup1 = () => {\n    setIsPopupOpen1(true);\n    document.body.style.overflowY = \"hidden\";\n  };\n\n  const closePopup = () => {\n    setIsPopupOpen(false);\n    document.body.style.overflowY = \"auto\";\n  };\n  const closePopup1 = () => {\n    setIsPopupOpen1(false);\n    document.body.style.overflowY = \"auto\";\n  };\n  const locations = {\n    \"Eastern Norway\": {\n      Viken: [\n        \"Drammen\",\n        \"Bærum\",\n        \"Asker\",\n        \"Moss\",\n        \"Fredrikstad\",\n        \"Sarpsborg\",\n        \"Halden\",\n        \"Lillestrøm\",\n        \"Jessheim\",\n        \"Kongsberg\",\n      ],\n      Innlandet: [\n        \"Hamar\",\n        \"Lillehammer\",\n        \"Gjøvik\",\n        \"Elverum\",\n        \"Kongsvinger\",\n        \"Tynset\",\n        \"Trysil\",\n        \"Rena\",\n      ],\n      \"Vestfold og Telemark\": [\n        \"Tønsberg\",\n        \"Sandefjord\",\n        \"Larvik\",\n        \"Skien\",\n        \"Porsgrunn\",\n        \"Notodden\",\n        \"Rjukan\",\n        \"Kragerø\",\n        \"Bø i Telemark\",\n      ],\n    },\n    \"Western Norway\": {\n      Hordaland: [\"Bergen\", \"Voss\", \"Odda\", \"Stord\", \"Os\", \"Leirvik\"],\n      \"Sogn og Fjordane\": [\n        \"Førde\",\n        \"Sogndal\",\n        \"Florø\",\n        \"Årdal\",\n        \"Stryn\",\n        \"Nordfjordeid\",\n      ],\n      Rogaland: [\n        \"Stavanger\",\n        \"Sandnes\",\n        \"Haugesund\",\n        \"Egersund\",\n        \"Bryne\",\n        \"Sauda\",\n        \"Jørpeland\",\n      ],\n      \"Møre og Romsdal\": [\n        \"Ålesund\",\n        \"Molde\",\n        \"Kristiansund\",\n        \"Åndalsnes\",\n        \"Sunndalsøra\",\n        \"Volda\",\n        \"Fosnavåg\",\n        \"Ørsta\",\n      ],\n    },\n    Trøndelag: {\n      Trøndelag: [\n        \"Trondheim\",\n        \"Steinkjer\",\n        \"Levanger\",\n        \"Stjørdal\",\n        \"Namsos\",\n        \"Orkanger\",\n        \"Røros\",\n        \"Verdal\",\n        \"Oppdal\",\n        \"Malvik\",\n        \"Melhus\",\n      ],\n    },\n    \"Northern Norway\": {\n      Nordland: [\n        \"Bodø\",\n        \"Narvik\",\n        \"Mo i Rana\",\n        \"Svolvær (Lofoten)\",\n        \"Leknes\",\n        \"Sortland\",\n        \"Mosjøen\",\n        \"Brønnøysund\",\n        \"Fauske\",\n      ],\n      \"Troms og Finnmark\": [\n        \"Tromsø\",\n        \"Alta\",\n        \"Hammerfest\",\n        \"Harstad\",\n        \"Vadsø\",\n        \"Kirkenes\",\n        \"Skjervøy\",\n        \"Nordkapp\",\n        \"Lakselv\",\n        \"Kautokeino\",\n      ],\n    },\n    Other: {},\n  };\n\n  // Map translation keys to English names for t() function\n  const regionTranslationKeys = {\n    ostlandet: \"Eastern Norway\",\n    vestlandet: \"Western Norway\",\n    trondelag: \"Trøndelag\",\n    nordnorge: \"Northern Norway\",\n    other: \"Other\",\n  };\n\n  const [selectedRegion, setSelectedRegion] = useState(\"\");\n  const [selectedTown, setSelectedTown] = useState([]);\n\n  // Handle region selection\n  const handleRegionChange = (e) => {\n    setSelectedRegion(e.target.value);\n    setSelectedSubRegion(\"\");\n    setSelectedTown([]); // Reset town when region changes\n  };\n  const handleSubRegionChange = (e) => {\n    setSelectedSubRegion(e.target.value);\n    setSelectedTown([]);\n  };\n\n  // Handle town selection\n  const handleTownChange = (event) => {\n    const { value, checked } = event.target;\n\n    setSelectedTown((prevSelectedTowns) => {\n      if (checked) {\n        // Add the town to the selected list\n        return [...prevSelectedTowns, value];\n      } else {\n        // Remove the town from the selected list\n        return prevSelectedTowns.filter((town) => town !== value);\n      }\n    });\n  };\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem(\"language\") || \"en\"; // Default to 'en' if no language is saved\n    // Change the language if it's not already the current language\n    if (i18n.language !== savedLanguage) {\n      i18n.changeLanguage(savedLanguage);\n    }\n  }, [i18n, t]);\n  console.log(\"ll\", genders);\n  const min = 15; // Start value\n  const max = 350; // End value\n  const step = 1; // Step size\n\n  // Create an array of numbers from min to max\n  const optionsheight = Array.from(\n    { length: (max - min) / step + 1 },\n    (_, i) => min + i * step\n  );\n  const selectedSexualityOptions = sexuality.filter((option) =>\n    sexuality.includes(option.value)\n  );\n  const closepopup11 = async () => {\n    setIsPopupOpen1(false);\n    document.body.style.overflowY = \"auto\";\n  };\n  const customStyles = {\n    control: (provided) => ({\n      ...provided,\n      backgroundColor: \"lightgray\",\n      padding: \"5px 10px\",\n      border: \"1px solid black\",\n      boxShadow: \"0 2px 4px rgba(0,0,0,.2)\",\n    }),\n    option: (provided, state) => ({\n      ...provided,\n      borderBottom: \"1px dotted #C2B59F\",\n      color: state.isSelected ? \"white\" : \"black\",\n      backgroundColor: state.isSelected ? \"#C2B59F\" : \"white\",\n      \":hover\": {\n        backgroundColor: \"#C2B59F\", // Change the background color on hover\n        color: \"white\", // Change the text color on hover\n      },\n    }),\n    multiValue: (provided) => ({\n      ...provided,\n      backgroundColor: \"#C2B59F\", // Style for selected items\n      color: \"white\",\n    }),\n    multiValueLabel: (provided) => ({\n      ...provided,\n      color: \"white\",\n    }),\n    multiValueRemove: (provided) => ({\n      ...provided,\n      color: \"white\",\n      \":hover\": {\n        backgroundColor: \"#C2B59F\",\n        color: \"white\",\n      },\n    }),\n  };\n  //Get All Albums\n  useEffect(() => {\n    getallAlbums();\n  }, []);\n  const getallAlbums = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      user_id: userLogin.id,\n    };\n\n    try {\n      const res = await axios.post(\n        apiURLMembers + \"getPageEditAlbums\",\n        formData,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        }\n      );\n      setgetallAlbum(res.data.results);\n      console.log(res.data.results);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        // console.error(\"Request data:\", err.request);\n      } else {\n        // console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  //Get All Albums\n  useEffect(() => {\n    if (location.pathname === \"/editprofile/viewrequest\") {\n      setIsPopupOpen(true);\n      navigate(\"/editprofile\");\n    }\n  }, [location.pathname]);\n  const [ImagesFriendsOwn, setImagesFriendsOwn] = useState([]);\n  const [isonlyallbumPublic, setisonlyallbumPublic] = useState([]);\n  useEffect(() => {\n    get_albumStatusonlyPublic();\n  }, []);\n  const get_albumStatusonlyPublic = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      user_id: userLogin.id,\n    };\n\n    try {\n      const res = await axios.post(\n        apiURLMembers + \"get_albumStatusonlyPublic\",\n        formData,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        }\n      );\n      console.log(res.data.results);\n      setisonlyallbumPublic(res.data.results);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        //console.error(\"Request data:\", err.request);\n      } else {\n        //console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  useEffect(() => {\n    getUserDetailsOwn();\n  }, []);\n  const getUserDetailsOwn = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n\n    let formData = {\n      user_id: userLogin.id,\n    };\n\n    try {\n      const res = await axios.post(\n        apiURLMembers + \"getUserDetailsOwn\",\n        formData,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n\n      // Extract the images/videos from the API response\n      const mediaList = res.data.results;\n      console.log(mediaList);\n      // Initialize empty arrays for images and videos\n      let images = [];\n      let videos = [];\n\n      // Supported image and video extensions\n      const imageExtensions = [\"jpg\", \"jpeg\", \"png\", \"gif\", \"webp\"];\n      const videoExtensions = [\"mp4\", \"mov\", \"avi\", \"mkv\", \"webm\"];\n\n      mediaList.forEach((media) => {\n        if (typeof media.images === \"string\") {\n          let mediaArray = JSON.parse(media.images);\n\n          mediaArray.forEach((file) => {\n            images.push({ file, usersalbum_id: media.usersalbum_id });\n          });\n        }\n      });\n      setImagesFriendsOwn(images);\n    } catch (err) {\n      console.error(\"Error fetching data:\", err);\n    }\n  };\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [isonlyallbumfriend, setisonlyallbumfriend] = useState([]);\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      if (event.key === \"Escape\") {\n        setSelectedImage(null);\n      }\n    };\n\n    window.addEventListener(\"keydown\", handleKeyDown);\n\n    // Cleanup the event listener on component unmount\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [setSelectedImage]);\n\n  return (\n    <>\n      <Headertwo />\n      {showPopSuccess && <SuccessPop message={successPopMessage} />}\n      {showPopError && <ErrorPop message={errorPopMessage} />}\n      <section className=\"d-block editblock gapy\">\n        <div className=\"container-lg\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <form\n                onSubmit={handleSubmit}\n                action=\"javascript:void(0)\"\n                method=\"post\"\n              >\n                <div className=\"row gy-4\">\n                  {/* for desktop */}\n                  <div className=\"col-md-3 d-none d-md-block\">\n                    <div className=\"row useruploadpic gy-4\">\n                      <div className=\"col-12\">\n                        <div className=\"uploadfile rel bgload mb-3 rounded-3 overflow-hidden\">\n                          <input\n                            type=\"file\"\n                            name=\"profile_image\"\n                            accept=\"image/*\" // Accept only image files\n                            onChange={handleFileChange}\n                            className=\"fileload\"\n                          />\n                          <div className=\"upload_image\">\n                            {imageUrl ? ( // Display the image URL if available\n                              <img\n                                className=\"w-100 h-100\"\n                                src={imageUrl} // Use the URL created from the file\n                                alt=\"Selected\"\n                              />\n                            ) : (\n                              selectedFile && ( // Fallback to show the previously fetched image\n                                <img\n                                  className=\"w-100 h-100\"\n                                  src={selectedFile} // If it's an image URL from the profile\n                                  alt=\"Profile\"\n                                />\n                              )\n                            )}\n                          </div>\n                          <div className=\"inload\">\n                            <div>\n                              <BsCloudUpload />\n                              <h3>{t(\"Upload_image\")}</h3>\n                            </div>\n                          </div>\n                          {errorMessage && (\n                            <p className=\"text-danger\">{errorMessage}</p>\n                          )}\n                        </div>\n                        <div className=\"listbox d-flex justify-content-center\">\n                          <label className=\"cbox\">\n                            {t(\"Make_Image_Private\")}\n                            <input\n                              type=\"checkbox\"\n                              name=\"makeImagePrivate\"\n                              checked={isImagePrivate} // Bind checkbox to the state\n                              onChange={handleCheckChange}\n                            />\n                            <span className=\"checkmark\"></span>\n                          </label>\n                        </div>\n                      </div>\n                      {Array.isArray(isonlyallbumfriend) &&\n                        isonlyallbumfriend.map((item, index) => {\n                          // Parse the JSON string into an array\n                          const images = JSON.parse(item.images);\n                          if (\n                            item.visibility === \"Friends_visible\" &&\n                            item.addToAlbum === \"No\"\n                          ) {\n                            return images.map((image, imgIndex) => (\n                              <div className=\"col-6\" key={image}>\n                                <div className=\"uploadfile rel smallload\">\n                                  <Link\n                                    className=\"dd d-flex flex-column gap-3 justify-content-center align-items-center search_twoinfo\"\n                                    to=\"\"\n                                  >\n                                    <div className=\"d-block search_twoinfoicon\">\n                                      <MediaRenderer\n                                        onClick={() => setSelectedImage(image)}\n                                        className=\"w-100 h-100 object-fit-cover\"\n                                        url={image}\n                                      />\n                                    </div>\n                                  </Link>\n                                </div>\n                              </div>\n                            ));\n                          }\n                        })}\n                      {Array.isArray(ImagesFriendsOwn) &&\n                        ImagesFriendsOwn.map((item, index) => (\n                          <div className=\"col-6\" key={item.file || index}>\n                            <div className=\"uploadfile rel smallload\">\n                              <Link\n                                className=\"dd d-flex p-0 flex-column gap-3 justify-content-center align-items-center search_twoinfo\"\n                                to=\"\"\n                              >\n                                <div className=\"d-block w-100 h-100\">\n                                  <MediaRenderer\n                                    onClick={() => setSelectedImage(item.file)}\n                                    className=\"w-100 h-100 object-fit-cover\"\n                                    url={item.file}\n                                  />\n                                </div>\n                              </Link>\n                            </div>\n                          </div>\n                        ))}\n                      {Array.isArray(isonlyallbumPublic) &&\n                        isonlyallbumPublic.map((item, index) => {\n                          // Parse the JSON string into an array\n                          const images = JSON.parse(item.images);\n                          if (\n                            item.visibility === \"Public_visible\" &&\n                            item.addToAlbum === \"No\"\n                          ) {\n                            return images.map((image, imgIndex) => (\n                              <div className=\"col-6\" key={image}>\n                                <div className=\"uploadfile rel smallload\">\n                                  <Link\n                                    className=\"dd p-0 d-flex flex-column gap-3 justify-content-center align-items-center search_twoinfo\"\n                                    to=\"\"\n                                  >\n                                    <div className=\"d-block w-100 h-100\">\n                                      <MediaRenderer\n                                        onClick={() => setSelectedImage(image)}\n                                        className=\"w-100 h-100 object-fit-cover\"\n                                        url={image}\n                                      />\n                                    </div>\n                                  </Link>\n                                </div>\n                              </div>\n                            ));\n                          }\n                        })}\n\n                      {getallAlbum.map((album) => (\n                        <div className=\"col-12\" key={album.id}>\n                          <div className=\"uploadfile rel pvt_album smallload\">\n                            <Link\n                              className=\"dd d-flex flex-column gap-3 justify-content-center align-items-center search_twoinfo\"\n                              to={\n                                album.visibility === \"Friends_visible\" ||\n                                album.visibility === \"Public_visible\"\n                                  ? `/previewimages/${album.id}`\n                                  : `/privatealbum/${album.id}`\n                              }\n                              target=\"_blank\"\n                            >\n                              <div className=\"text-decoration-none\">\n                                <strong>{album.name}</strong>\n                              </div>\n                              <div className=\"d-block search_twoinfoicon\">\n                                {album.visibility === \"Friends_visible\" ||\n                                album.visibility === \"Public_visible\" ? (\n                                  <img\n                                    className=\"w-100 h-100\"\n                                    src={require(\"../assets/images/ms3.png\")}\n                                    alt=\"Album Preview\"\n                                  />\n                                ) : (\n                                  <img\n                                    className=\"w-100 h-100\"\n                                    src={require(\"../assets/images/padlock.png\")}\n                                    alt=\"Album Preview\"\n                                  />\n                                )}\n                              </div>\n                              {(album.visibility === \"Friends_visible\" ||\n                                album.visibility === \"Public_visible\") &&\n                                album.cover_image !== null && (\n                                  <div className=\"lock_image\">\n                                    <img\n                                      className=\"w-100 h-100\"\n                                      src={album.cover_image}\n                                      alt=\"Private Album\"\n                                    />\n                                  </div>\n                                )}\n\n                              {album.visibility === \"Friends_visible\" ||\n                              album.visibility === \"Public_visible\" ? (\n                                <p>{t(\"PreviewImages\")}</p>\n                              ) : (\n                                <p>{t(\"PRIVATE_ALBUM\")}</p> // Display \"Private\" for non-friend visible albums\n                              )}\n                              <strong>{album.name}</strong>\n                            </Link>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                  {/* for desktop */}\n                  {/* for mobile */}\n                  <div className=\"col-12 d-block d-md-none\">\n                    <div className=\"d-d-block edittitle mb-4\">\n                      <h3 className=\"\">{t(\"Edit_your_profile\")}</h3>\n                    </div>\n                    <div className=\"row useruploadpic gy-4\">\n                      <div className=\"col-5\">\n                        <div className=\"uploadfile rel bgload rounded-3 overflow-hidden\">\n                          <input\n                            type=\"file\"\n                            name=\"profile_image\"\n                            accept=\"image/*\" // Accept only image files\n                            onChange={handleFileChange}\n                            className=\"fileload\"\n                          />\n                          <div className=\"upload_image\">\n                            {imageUrl ? ( // Display the image URL if available\n                              <img\n                                className=\"w-100 h-100\"\n                                src={imageUrl} // Use the URL created from the file\n                                alt=\"Selected\"\n                              />\n                            ) : (\n                              selectedFile && ( // Fallback to show the previously fetched image\n                                <img\n                                  className=\"w-100 h-100\"\n                                  src={selectedFile} // If it's an image URL from the profile\n                                  alt=\"Profile\"\n                                />\n                              )\n                            )}\n                          </div>\n                          <div className=\"inload\">\n                            <div>\n                              <BsCloudUpload />\n                              <h3>{t(\"Upload_image\")}</h3>\n                            </div>\n                          </div>\n                          {errorMessage && (\n                            <p className=\"text-danger\">{errorMessage}</p>\n                          )}\n                        </div>\n                      </div>\n                      <div className=\"col-7\">\n                        <div className=\"d-flex flex-column h-100\">\n                          <div className=\"d-flex flex-wrap gap-3  justify-content-end\">\n                            <button\n                              type=\"button\"\n                              onClick={openPopup1}\n                              className=\"savebtn\"\n                            >\n                              {t(\"uploda_private_album\")}\n                            </button>\n                            <button\n                              type=\"button\"\n                              onClick={openPopup}\n                              className=\"savebtn\"\n                            >\n                              {t(\"View_Request\")}\n                            </button>\n                            <button type=\"submit\" className=\"savebtn\">\n                              {t(\"Save_Profile\")}\n                            </button>\n                          </div>\n                          <div className=\"overscrolllog mt-auto \">\n                            <div className=\"overscrolllog_mob\">\n                              {Array.isArray(isonlyallbumfriend) &&\n                                isonlyallbumfriend.map((item, index) => {\n                                  // Parse the JSON string into an array\n                                  const images = JSON.parse(item.images);\n                                  if (\n                                    item.visibility === \"Friends_visible\" &&\n                                    item.addToAlbum === \"No\"\n                                  ) {\n                                    return images.map((image, imgIndex) => (\n                                      <div\n                                        className=\"overscrolllog_mob4\"\n                                        key={image}\n                                      >\n                                        <div className=\"uploadfile rel smallload\">\n                                          <Link\n                                            className=\"dd d-flex flex-column gap-3 justify-content-center align-items-center search_twoinfo\"\n                                            to=\"\"\n                                          >\n                                            <div className=\"d-block search_twoinfoicon\">\n                                              <MediaRenderer\n                                                onClick={() =>\n                                                  setSelectedImage(image)\n                                                }\n                                                className=\"w-100 h-100 object-fit-cover\"\n                                                url={image}\n                                              />\n                                            </div>\n                                          </Link>\n                                        </div>\n                                      </div>\n                                    ));\n                                  }\n                                })}\n                              {Array.isArray(ImagesFriendsOwn) &&\n                                ImagesFriendsOwn.map((item, index) => (\n                                  <div\n                                    className=\"overscrolllog_mob4\"\n                                    key={item.file || index}\n                                  >\n                                    <div className=\"uploadfile rel smallload\">\n                                      <Link\n                                        className=\"dd d-flex p-0 flex-column gap-3 justify-content-center align-items-center search_twoinfo\"\n                                        to=\"\"\n                                      >\n                                        <div className=\"d-block w-100 h-100\">\n                                          <MediaRenderer\n                                            onClick={() =>\n                                              setSelectedImage(item.file)\n                                            }\n                                            className=\"w-100 h-100 object-fit-cover\"\n                                            url={item.file}\n                                          />\n                                        </div>\n                                      </Link>\n                                    </div>\n                                  </div>\n                                ))}\n                              {Array.isArray(isonlyallbumPublic) &&\n                                isonlyallbumPublic.map((item, index) => {\n                                  // Parse the JSON string into an array\n                                  const images = JSON.parse(item.images);\n                                  if (\n                                    item.visibility === \"Public_visible\" &&\n                                    item.addToAlbum === \"No\"\n                                  ) {\n                                    return images.map((image, imgIndex) => (\n                                      <div\n                                        className=\"overscrolllog_mob4\"\n                                        key={image}\n                                      >\n                                        <div className=\"uploadfile rel smallload\">\n                                          <Link\n                                            className=\"dd p-0 d-flex flex-column gap-3 justify-content-center align-items-center search_twoinfo\"\n                                            to=\"\"\n                                          >\n                                            <div className=\"d-block w-100 h-100\">\n                                              <MediaRenderer\n                                                onClick={() =>\n                                                  setSelectedImage(image)\n                                                }\n                                                className=\"w-100 h-100 object-fit-cover\"\n                                                url={image}\n                                              />\n                                            </div>\n                                          </Link>\n                                        </div>\n                                      </div>\n                                    ));\n                                  }\n                                })}\n\n                              {getallAlbum.map((album) => (\n                                <div\n                                  className=\"overscrolllog_mob6\"\n                                  key={album.id}\n                                >\n                                  <div className=\"uploadfile rel pvt_album smallload\">\n                                    <Link\n                                      className=\"dd d-flex flex-column gap-3 justify-content-center align-items-center search_twoinfo\"\n                                      to={\n                                        album.visibility === \"Friends_visible\"\n                                          ? `/previewimages/${album.id}`\n                                          : `/privatealbum/${album.id}`\n                                      }\n                                      target=\"_blank\"\n                                    >\n                                      <div className=\"text-decoration-none\">\n                                        <strong>{album.name}</strong>\n                                      </div>\n                                      <div className=\"d-block search_twoinfoicon\">\n                                        {album.visibility ===\n                                          \"Friends_visible\" ||\n                                        album.visibility ===\n                                          \"Public_visible\" ? (\n                                          <img\n                                            className=\"w-100 h-100\"\n                                            src={require(\"../assets/images/ms3.png\")}\n                                            alt=\"Album Preview\"\n                                          />\n                                        ) : (\n                                          <img\n                                            className=\"w-100 h-100\"\n                                            src={require(\"../assets/images/padlock.png\")}\n                                            alt=\"Album Preview\"\n                                          />\n                                        )}\n                                      </div>\n                                      {(album.visibility ===\n                                        \"Friends_visible\" ||\n                                        album.visibility ===\n                                          \"Public_visible\") &&\n                                        album.cover_image !== null && (\n                                          <div className=\"lock_image\">\n                                            <img\n                                              className=\"w-100 h-100\"\n                                              src={album.cover_image}\n                                              alt=\"Private Album\"\n                                            />\n                                          </div>\n                                        )}\n\n                                      {album.visibility === \"Friends_visible\" ||\n                                      album.visibility === \"Public_visible\" ? (\n                                        <p>{t(\"PreviewImages\")}</p>\n                                      ) : (\n                                        <p>{t(\"PRIVATE_ALBUM\")}</p> // Display \"Private\" for non-friend visible albums\n                                      )}\n                                      <strong>{album.name}</strong>\n                                    </Link>\n                                  </div>\n                                </div>\n                              ))}\n                              {/* <div className=\"col-6 col-sm-4\">\n                              <div className=\"uploadfile rel smallload mobb\">\n                                <input\n                                  type=\"file\"\n                                  name=\"profile_image_4\"\n                                  id=\"\"\n                                  accept=\"image/*\" // Accept only image files\n                                  onChange={handleFileChange_4}\n                                  className=\"fileload\"\n                                />\n                                <div className=\"upload_image\">\n                                  {imageUrl4 ? ( // Display the image URL if available\n                                    <img\n                                      className=\"w-100 h-100\"\n                                      src={imageUrl4} // Use the URL created from the file\n                                      alt=\"Selected\"\n                                    />\n                                  ) : (\n                                    selectedFile_4 && ( // Fallback to show the previously fetched image\n                                      <img\n                                        className=\"w-100 h-100\"\n                                        src={selectedFile_4} // If it's an image URL from the profile\n                                        alt=\"Profile\"\n                                      />\n                                    )\n                                  )}\n                                </div>\n                                <div className=\"inload\">\n                                  <FiPlus />\n                                </div>\n                              </div>\n                            </div> */}\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"col-12\">\n                        <div className=\"listbox d-flex \">\n                          <label className=\"cbox\">\n                            {t(\"Make_Image_Private\")}\n                            <input\n                              type=\"checkbox\"\n                              name=\"makeImagePrivate\"\n                              checked={isImagePrivate} // Bind checkbox to the state\n                              onChange={handleCheckChange}\n                            />\n                            <span className=\"checkmark\"></span>\n                          </label>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  {/* for mobile */}\n                  <div className=\"col-md-9\">\n                    <div className=\"d-flex flex-column gap-3 formlook\">\n                      <div className=\"d-flex flex-column flex-md-row gap-3 justify-content-md-between edittitle\">\n                        <h3 className=\"d-none d-md-block\">\n                          {t(\"Edit_your_profile\")}\n                        </h3>\n\n                        <div className=\"d-none d-md-flex flex-wrap flex-md-nowrap justify-content-md-between gap-2\">\n                          <button\n                            type=\"button\"\n                            onClick={openPopup1}\n                            className=\"savebtn\"\n                          >\n                            {t(\"uploda_private_album\")}\n                          </button>\n                          <button\n                            type=\"button\"\n                            onClick={openPopup}\n                            className=\"savebtn\"\n                          >\n                            {t(\"View_Request\")}\n                          </button>\n                          <button type=\"submit\" className=\"savebtn\">\n                            {t(\"Save_Profile\")}\n                          </button>\n                        </div>\n                      </div>\n                      <div className=\"d-flex flex-column gap-2\">\n                        <label htmlFor=\"\">{t(\"iamlooking\")}</label>\n                        <div style={{ height: \"400px\" }}>\n                          <Editor\n                            apiKey=\"143ut3uu44px2okporfe4favr5f39zv8rdlrcoc10z9jks6u\"\n                            onInit={(_evt, editor) =>\n                              (editorRef.current = editor)\n                            }\n                            value={editorContent} // Use value to dynamically set content\n                            onEditorChange={(content) =>\n                              setEditorContent(content)\n                            }\n                            init={{\n                              height: 500,\n                              menubar: false,\n                              plugins: [\n                                \"advlist\",\n                                \"autolink\",\n                                \"lists\",\n                                \"link\",\n                                \"image\",\n                                \"charmap\",\n                                \"preview\",\n                                \"anchor\",\n                                \"searchreplace\",\n                                \"visualblocks\",\n                                \"code\",\n                                \"fullscreen\",\n                                \"insertdatetime\",\n                                \"media\",\n                                \"table\",\n                                \"help\",\n                                \"wordcount\",\n                                \"emoticons\", // Added emoji plugin\n                              ],\n                              toolbar:\n                                \"undo redo | blocks | \" +\n                                \"bold italic forecolor | alignleft aligncenter \" +\n                                \"alignright alignjustify | bullist numlist outdent indent | \" +\n                                \"removeformat | emoticons | help\", // Added emoticons button\n                              content_style:\n                                \"body { font-family:Helvetica,Arial,sans-serif; font-size:14px }\",\n                            }}\n                          />\n                        </div>\n                      </div>\n                      <div className=\"d-flex flex-column gap-2\">\n                        <label htmlFor=\"\">{t(\"Username\")}</label>\n                        <input\n                          type=\"text\"\n                          defaultValue={profilevalue.username}\n                          placeholder={t(\"Writesomething\")}\n                          name=\"username\"\n                        />\n                      </div>\n                      <div className=\"d-flex flex-column gap-3\" id=\"location\">\n                        {/* Region */}\n                        <label htmlFor=\"region\">{t(\"Location\")}</label>\n                        <select\n                          id=\"region\"\n                          name=\"region\"\n                          value={selectedRegion}\n                          onChange={handleRegionChange}\n                        >\n                          <option value=\"\">-- {t(\"SelectRegion\")} --</option>\n                          {Object.keys(locations).map((regionKey) => (\n                            <option key={regionKey} value={regionKey}>\n                              {t(\n                                Object.keys(regionTranslationKeys).find(\n                                  (key) =>\n                                    regionTranslationKeys[key] === regionKey\n                                ) || regionKey\n                              )}\n                            </option>\n                          ))}\n                        </select>\n\n                        {/* Subregion */}\n                        {selectedRegion && locations[selectedRegion] && (\n                          <>\n                            <label htmlFor=\"subregion\">{t(\"City\")}</label>\n                            <select\n                              id=\"subregion\"\n                              name=\"subregion\"\n                              value={selectedSubRegion}\n                              onChange={handleSubRegionChange}\n                            >\n                              <option value=\"\">-- {t(\"SelectCity\")} --</option>\n                              {Object.keys(locations[selectedRegion]).map(\n                                (subRegion) => (\n                                  <option key={subRegion} value={subRegion}>\n                                    {subRegion}\n                                  </option>\n                                )\n                              )}\n                            </select>\n                          </>\n                        )}\n\n                        {/* Town */}\n                        {selectedRegion &&\n                          selectedSubRegion &&\n                          locations[selectedRegion]?.[selectedSubRegion] && (\n                            <>\n                              <label htmlFor=\"town\">{t(\"Town\")}</label>\n                              <div\n                                id=\"town\"\n                                className=\"d-flex flex-column gap-1\"\n                              >\n                                {locations[selectedRegion][\n                                  selectedSubRegion\n                                ].map((town, index) => (\n                                  <div\n                                    key={index}\n                                    className=\"d-flex gap-2 align-items-center\"\n                                  >\n                                    <input\n                                      type=\"checkbox\"\n                                      id={`town-${index}`}\n                                      value={town}\n                                      checked={selectedTown.includes(town)}\n                                      onChange={handleTownChange}\n                                    />\n                                    <label htmlFor={`town-${index}`}>\n                                      {town}\n                                    </label>\n                                  </div>\n                                ))}\n                              </div>\n                            </>\n                          )}\n                      </div>\n                      <div className=\"d-flex flex-column gap-2\">\n                        <label htmlFor=\"\">{t(\"Preferences\")}</label>\n                        <input\n                          type=\"text\"\n                          defaultValue={profilevalue.preferences}\n                          placeholder={t(\"Writesomething\")}\n                          name=\"preferences\"\n                        />\n                      </div>\n                      {/* <ul className=\"d-flex flex-column gap-3 list-group-item\">\n                        <li className=\"listbox \">\n                          <label\n                            className=\"d-flex align-items-center gap-2 cbox\"\n                            htmlFor=\"couple\"\n                          >\n                            <input\n                              id=\"couple\"\n                              name=\"couple\"\n                              value=\"couple\"\n                              type=\"checkbox\"\n                              checked={isCoupleChecked}\n                              onChange={handleCoupleChange}\n                            />\n                            <span className=\"checkmark\"></span>\n                            <p>{t(\"Couple\")}</p>\n                          </label>\n                          <ul className=\"d-flex flex-column gap-1 mt-3 couple_list\">\n                            {Object.keys(coupleOptions).map((option) => (\n                              <li className=\"couple_inner\" key={option}>\n                                <label\n                                  className=\"d-flex align-items-center gap-2 cbox\"\n                                  htmlFor={option}\n                                >\n                                  <input\n                                    id={option}\n                                    name=\"couple\"\n                                    value={option}\n                                    type=\"checkbox\"\n                                    checked={coupleOptions[option]}\n                                    onChange={() =>\n                                      handleOptionChangeCouple(option)\n                                    }\n                                  />\n                                  <span className=\"checkmark\"></span>\n                                  <p>\n                                    {option.charAt(0).toUpperCase() +\n                                      option\n                                        .slice(1)\n                                        .replace(/([A-Z])/g, \" $1\")}\n                                  </p>\n                                </label>\n                              </li>\n                            ))}\n                          </ul>\n                        </li>\n                        <li className=\"listbox \">\n                          <label\n                            className=\"d-flex align-items-center gap-2 cbox\"\n                            htmlFor=\"female\"\n                          >\n                            <input\n                              id=\"female\"\n                              name=\"female\"\n                              value=\"female\"\n                              type=\"checkbox\"\n                              checked={isFemaleChecked}\n                              onChange={handleFemaleChange}\n                            />\n                            <span className=\"checkmark\"></span>\n                            <p>{t(\"Female\")}</p>\n                          </label>\n                          <ul className=\"d-flex flex-column gap-1 mt-3 couple_list\">\n                            {Object.keys(femaleOptions).map((option) => (\n                              <li className=\"couple_inner\" key={option}>\n                                <label\n                                  className=\"d-flex align-items-center gap-2 cbox\"\n                                  htmlFor={option}\n                                >\n                                  <input\n                                    id={option}\n                                    name=\"female\"\n                                    value={option}\n                                    type=\"checkbox\"\n                                    checked={femaleOptions[option]}\n                                    onChange={() =>\n                                      handleOptionChangeFemaless(option)\n                                    }\n                                  />\n                                  <span className=\"checkmark\"></span>\n                                  <p>\n                                    {option.charAt(0).toUpperCase() +\n                                      option\n                                        .slice(1)\n                                        .replace(/([A-Z])/g, \" $1\")}\n                                  </p>\n                                </label>\n                              </li>\n                            ))}\n                          </ul>\n                        </li>\n                        <li className=\"listbox \">\n                          <label\n                            className=\"d-flex align-items-center gap-2 cbox\"\n                            htmlFor=\"male\"\n                          >\n                            <input\n                              id=\"male\"\n                              name=\"male\"\n                              value=\"male\"\n                              type=\"checkbox\"\n                              checked={\n                                maleOptions.straight ||\n                                maleOptions.bisexual ||\n                                maleOptions.bicurious ||\n                                maleOptions.gay ||\n                                maleOptions.bull\n                              } // Check if any of the male options are true\n                              onChange={handleMaleChange} // Optionally handle changes for \"Male\" checkbox\n                            />\n                            <span className=\"checkmark\"></span>\n                            <p>{t(\"Male\")}</p>\n                          </label>\n\n                          <ul className=\"d-flex flex-column gap-1 mt-3 couple_list\">\n                            {Object.keys(maleOptions).map((option) => (\n                              <li className=\"couple_inner\" key={option}>\n                                <label\n                                  className=\"d-flex align-items-center gap-2 cbox\"\n                                  htmlFor={option}\n                                >\n                                  <input\n                                    id={option}\n                                    name=\"male\"\n                                    value={option}\n                                    type=\"checkbox\"\n                                    checked={maleOptions[option]} // Reflect the checked state from maleOptions\n                                    onChange={() =>\n                                      handleOption_ChangeMale(option)\n                                    } // Handle changes\n                                  />\n                                  <span className=\"checkmark\"></span>\n                                  <p>\n                                    {option.charAt(0).toUpperCase() +\n                                      option\n                                        .slice(1)\n                                        .replace(/([A-Z])/g, \" $1\")}\n                                  </p>\n                                </label>\n                              </li>\n                            ))}\n                          </ul>\n                        </li>\n                      </ul> */}\n                      <Accordion>\n                        <AccordionItem>\n                          <AccordionItemHeading>\n                            <AccordionItemButton>\n                              <div\n                                className=\"d-flex gap-2 align-items-center\"\n                                id=\"nationality\"\n                              >\n                                <div className=\"flex-shrink-0\">\n                                  <div className=\"acciconimg fulw\">\n                                    <img src={de1} alt=\"accimg\" />\n                                  </div>\n                                </div>\n                                <div className=\"flex-grow-1\">\n                                  <h4>{t(\"Nationality\")}</h4>\n                                </div>\n                              </div>\n                            </AccordionItemButton>\n                          </AccordionItemHeading>\n                          <AccordionItemPanel>\n                            <div className=\"listbox d-flex flex-wrap gap-3\">\n                              <label class=\"cbox\">\n                                {t(\"Caucasian\")}\n                                <input\n                                  type=\"radio\"\n                                  name=\"nationality\"\n                                  value=\"Caucasian\"\n                                  checked={nationality === \"Caucasian\"} // Check if this option is selected\n                                  onChange={handleNationalityChange}\n                                />\n                                <span class=\"checkmark\"></span>\n                              </label>\n\n                              <label class=\"cbox\">\n                                {t(\"Hispanic\")}\n                                <input\n                                  type=\"radio\"\n                                  name=\"nationality\"\n                                  value=\"Hispanic\"\n                                  checked={nationality === \"Hispanic\"} // Check if this option is selected\n                                  onChange={handleNationalityChange}\n                                />\n                                <span class=\"checkmark\"></span>\n                              </label>\n\n                              <label class=\"cbox\">\n                                {t(\"Asian\")}\n                                <input\n                                  type=\"radio\"\n                                  name=\"nationality\"\n                                  value=\"Asian\"\n                                  checked={nationality === \"Asian\"} // Check if this option is selected\n                                  onChange={handleNationalityChange}\n                                />\n                                <span class=\"checkmark\"></span>\n                              </label>\n                              <label class=\"cbox\">\n                                {t(\"African\")}\n                                <input\n                                  type=\"radio\"\n                                  name=\"nationality\"\n                                  value=\"African\"\n                                  checked={nationality === \"African\"} // Check if this option is selected\n                                  onChange={handleNationalityChange}\n                                />\n                                <span class=\"checkmark\"></span>\n                              </label>\n\n                              <label class=\"cbox\">\n                                {t(\"Indian\")}\n                                <input\n                                  type=\"radio\"\n                                  name=\"nationality\"\n                                  value=\"Indian\"\n                                  checked={nationality === \"Indian\"} // Check if this option is selected\n                                  onChange={handleNationalityChange}\n                                />\n                                <span class=\"checkmark\"></span>\n                              </label>\n\n                              <label class=\"cbox\">\n                                {t(\"Middle_Eastern\")}\n                                <input\n                                  type=\"radio\"\n                                  name=\"nationality\"\n                                  value=\"Middle Eastern\"\n                                  checked={nationality === \"Middle Eastern\"} // Check if this option is selected\n                                  onChange={handleNationalityChange}\n                                />\n                                <span class=\"checkmark\"></span>\n                              </label>\n\n                              <label class=\"cbox\">\n                                {t(\"Jewish\")}\n                                <input\n                                  type=\"radio\"\n                                  name=\"nationality\"\n                                  value=\"Jewish\"\n                                  checked={nationality === \"Jewish\"} // Check if this option is selected\n                                  onChange={handleNationalityChange}\n                                />\n                                <span class=\"checkmark\"></span>\n                              </label>\n\n                              <label class=\"cbox\">\n                                {t(\"Other\")}\n                                <input\n                                  type=\"radio\"\n                                  name=\"nationality\"\n                                  value=\"Other\"\n                                  checked={nationality === \"Other\"} // Check if this option is selected\n                                  onChange={handleNationalityChange}\n                                />\n                                <span class=\"checkmark\"></span>\n                              </label>\n                            </div>\n                          </AccordionItemPanel>\n                        </AccordionItem>\n                        <AccordionItem>\n                          <AccordionItemHeading>\n                            <AccordionItemButton>\n                              <div\n                                className=\"d-flex gap-2 align-items-center\"\n                                id=\"bodyType\"\n                              >\n                                <div className=\"flex-shrink-0\">\n                                  <div className=\"acciconimg fulw\">\n                                    <img src={de2} alt=\"accimg\" />\n                                  </div>\n                                </div>\n                                <div className=\"flex-grow-1\">\n                                  <h4>{t(\"Bodytype\")}</h4>\n                                </div>\n                              </div>\n                            </AccordionItemButton>\n                          </AccordionItemHeading>\n                          <AccordionItemPanel>\n                            <div className=\"listbox d-flex flex-wrap gap-3\">\n                              <label className=\"cbox\">\n                                {t(\"Slim\")}\n                                <input\n                                  type=\"radio\"\n                                  name=\"bodytype\"\n                                  value=\"slim\"\n                                  checked={bodyType === \"slim\"} // Check if this option is selected\n                                  onChange={handleBodyTypeChange} // Update state on change\n                                />\n                                <span className=\"checkmark\"></span>\n                              </label>\n\n                              <label className=\"cbox\">\n                                {t(\"Athletic\")}\n                                <input\n                                  type=\"radio\"\n                                  name=\"bodytype\"\n                                  value=\"athletic\"\n                                  checked={bodyType === \"athletic\"} // Check if this option is selected\n                                  onChange={handleBodyTypeChange} // Update state on change\n                                />\n                                <span className=\"checkmark\"></span>\n                              </label>\n\n                              <label className=\"cbox\">\n                                {t(\"Average\")}\n                                <input\n                                  type=\"radio\"\n                                  name=\"bodytype\"\n                                  value=\"average\"\n                                  checked={bodyType === \"average\"} // Check if this option is selected\n                                  onChange={handleBodyTypeChange} // Update state on change\n                                />\n                                <span className=\"checkmark\"></span>\n                              </label>\n\n                              <label className=\"cbox\">\n                                {t(\"Curvy\")}\n                                <input\n                                  type=\"radio\"\n                                  name=\"bodytype\"\n                                  value=\"curvy\"\n                                  checked={bodyType === \"curvy\"} // Check if this option is selected\n                                  onChange={handleBodyTypeChange} // Update state on change\n                                />\n                                <span className=\"checkmark\"></span>\n                              </label>\n\n                              <label className=\"cbox\">\n                                {t(\"Full_figured\")}\n                                <input\n                                  type=\"radio\"\n                                  name=\"bodytype\"\n                                  value=\"full-figured\"\n                                  checked={bodyType === \"full-figured\"} // Check if this option is selected\n                                  onChange={handleBodyTypeChange} // Update state on change\n                                />\n                                <span className=\"checkmark\"></span>\n                              </label>\n\n                              <label className=\"cbox\">\n                                {t(\"Plus_size\")}\n                                <input\n                                  type=\"radio\"\n                                  name=\"bodytype\"\n                                  value=\"plus-size\"\n                                  checked={bodyType === \"plus-size\"} // Check if this option is selected\n                                  onChange={handleBodyTypeChange} // Update state on change\n                                />\n                                <span className=\"checkmark\"></span>\n                              </label>\n\n                              <label className=\"cbox\">\n                                {t(\"Muscular\")}\n                                <input\n                                  type=\"radio\"\n                                  name=\"bodytype\"\n                                  value=\"muscular\"\n                                  checked={bodyType === \"muscular\"} // Check if this option is selected\n                                  onChange={handleBodyTypeChange} // Update state on change\n                                />\n                                <span className=\"checkmark\"></span>\n                              </label>\n\n                              <label className=\"cbox\">\n                                {t(\"Petite\")}\n                                <input\n                                  type=\"radio\"\n                                  name=\"bodytype\"\n                                  value=\"petite\"\n                                  checked={bodyType === \"petite\"} // Check if this option is selected\n                                  onChange={handleBodyTypeChange} // Update state on change\n                                />\n                                <span className=\"checkmark\"></span>\n                              </label>\n\n                              <label className=\"cbox\">\n                                {t(\"Tall\")}\n                                <input\n                                  type=\"radio\"\n                                  name=\"bodytype\"\n                                  value=\"tall\"\n                                  checked={bodyType === \"tall\"} // Check if this option is selected\n                                  onChange={handleBodyTypeChange} // Update state on change\n                                />\n                                <span className=\"checkmark\"></span>\n                              </label>\n\n                              <label className=\"cbox\">\n                                {t(\"Other\")}\n                                <input\n                                  type=\"radio\"\n                                  name=\"bodytype\"\n                                  value=\"other\"\n                                  checked={bodyType === \"other\"} // Check if this option is selected\n                                  onChange={handleBodyTypeChange} // Update state on change\n                                />\n                                <span className=\"checkmark\"></span>\n                              </label>\n                            </div>\n                          </AccordionItemPanel>\n                        </AccordionItem>\n                        <AccordionItem>\n                          <AccordionItemHeading>\n                            <AccordionItemButton>\n                              <div\n                                className=\"d-flex gap-2 align-items-center\"\n                                id=\"heightFeet\"\n                              >\n                                <div className=\"flex-shrink-0\">\n                                  <div className=\"acciconimg fulw\">\n                                    <img src={de3} alt=\"accimg\" />\n                                  </div>\n                                </div>\n                                <div className=\"flex-grow-1\">\n                                  <h4>{t(\"Height\")}</h4>\n                                </div>\n                              </div>\n                            </AccordionItemButton>\n                          </AccordionItemHeading>\n                          <AccordionItemPanel>\n                            <div className=\"d-flex gap-2 heightsel\">\n                              <select\n                                onChange={handleFeetChange}\n                                value={heightFeet}\n                                name=\"height_feet\"\n                              >\n                                <option value=\"\">{t(\"Select_Feet\")}</option>\n                                {optionsheight.map((value) => (\n                                  <option key={value} value={value}>\n                                    {value} cm\n                                  </option>\n                                ))}\n                              </select>\n                            </div>\n                          </AccordionItemPanel>\n                        </AccordionItem>\n                        <AccordionItem>\n                          <AccordionItemHeading>\n                            <AccordionItemButton>\n                              <div\n                                className=\"d-flex gap-2 align-items-center\"\n                                id=\"sexual_orientation\"\n                              >\n                                <div className=\"flex-shrink-0\">\n                                  <div className=\"acciconimg fulw\">\n                                    <img src={de4} alt=\"accimg\" />\n                                  </div>\n                                </div>\n                                <div className=\"flex-grow-1\">\n                                  <h4>{t(\"Sexual_orientation\")}</h4>\n                                </div>\n                              </div>\n                            </AccordionItemButton>\n                          </AccordionItemHeading>\n                          <AccordionItemPanel>\n                            <div className=\"listbox d-flex flex-wrap gap-3\">\n                              {[\n                                \"Heterosexual\",\n                                \"Homosexual\",\n                                \"Bisexual\",\n                                \"Pansexual\",\n                                \"Asexual\",\n                                \"Other\",\n                              ].map((label) => (\n                                <label className=\"cbox\" key={label}>\n                                  {label}\n                                  <input\n                                    type=\"checkbox\"\n                                    name=\"sexual_orientation\"\n                                    value={label}\n                                    checked={sexual_orientation.includes(label)}\n                                    onChange={handleSexualOrientationChange}\n                                  />\n                                  <span className=\"checkmark\"></span>\n                                </label>\n                              ))}\n                            </div>\n                          </AccordionItemPanel>\n                        </AccordionItem>\n\n                        <AccordionItem>\n                          <AccordionItemHeading>\n                            <AccordionItemButton>\n                              <div\n                                className=\"d-flex gap-2 align-items-center\"\n                                id=\"genders\"\n                              >\n                                <div className=\"flex-shrink-0\">\n                                  <div className=\"acciconimg fulw\">\n                                    <img src={de15} alt=\"accimg\" />\n                                  </div>\n                                </div>\n                                <div className=\"flex-grow-1\">\n                                  <h4>{t(\"Genders\")}</h4>\n                                </div>\n                              </div>\n                            </AccordionItemButton>\n                          </AccordionItemHeading>\n                          <AccordionItemPanel>\n                            <div className=\"listbox d-flex flex-wrap gap-3\">\n                              <label className=\"cbox\">\n                                {t(\"Male\")}\n                                <input\n                                  type=\"radio\"\n                                  name=\"genders\"\n                                  checked={genders === \"Male\"}\n                                  onChange={handlegendersChange}\n                                  value=\"Male\"\n                                />\n                                <span className=\"checkmark\"></span>\n                              </label>\n                              <label className=\"cbox\">\n                                {t(\"Female\")}\n                                <input\n                                  type=\"radio\"\n                                  name=\"genders\"\n                                  checked={genders === \"Female\"}\n                                  onChange={handlegendersChange}\n                                  value=\"Female\"\n                                />\n                                <span className=\"checkmark\"></span>\n                              </label>\n                              <label className=\"cbox\">\n                                Trans\n                                <input\n                                  type=\"radio\"\n                                  name=\"genders\"\n                                  checked={genders === \"Trans\"}\n                                  onChange={handlegendersChange}\n                                  value=\"Trans\"\n                                />\n                                <span className=\"checkmark\"></span>\n                              </label>\n                              <label className=\"cbox\">\n                                Trans (MTF)\n                                <input\n                                  type=\"radio\"\n                                  name=\"genders\"\n                                  checked={genders === \"Trans (MTF)\"}\n                                  onChange={handlegendersChange}\n                                  value=\"Trans (MTF)\"\n                                />\n                                <span className=\"checkmark\"></span>\n                              </label>\n                              <label className=\"cbox\">\n                                Trans (FTM)\n                                <input\n                                  type=\"radio\"\n                                  checked={genders === \"Trans (FTM)\"}\n                                  onChange={handlegendersChange}\n                                  name=\"genders\"\n                                  value=\"Trans (FTM)\"\n                                />\n                                <span className=\"checkmark\"></span>\n                              </label>\n                              <label className=\"cbox\">\n                                {t(\"Couple\")}\n                                <input\n                                  type=\"radio\"\n                                  checked={genders === \"Couple\"}\n                                  onChange={handlegendersChange}\n                                  name=\"genders\"\n                                  value=\"Couple\"\n                                />\n                                <span className=\"checkmark\"></span>\n                              </label>\n                              <label className=\"cbox\">\n                                {t(\"Non_binary\")}\n                                <input\n                                  type=\"radio\"\n                                  checked={genders === \"Ikke-binær\"}\n                                  onChange={handlegendersChange}\n                                  name=\"genders\"\n                                  value=\"Ikke-binær\"\n                                />\n                                <span className=\"checkmark\"></span>\n                              </label>\n                            </div>\n                            {genders === \"Male\" && (\n                              <Select\n                                styles={customStyles}\n                                isMulti\n                                options={maleOptions_select}\n                                value={sexuality}\n                                onChange={handleSexualityChange}\n                                placeholder=\"Select Male\"\n                                className=\"custom-select\"\n                                classNamePrefix=\"custom-select\"\n                              />\n                            )}\n\n                            {genders === \"Female\" && (\n                              <Select\n                                isMulti\n                                options={femaleOptions_select}\n                                value={sexuality}\n                                onChange={handleSexualityChange}\n                                placeholder=\"Select Female\"\n                                className=\"custom-select\"\n                                classNamePrefix=\"custom-select\"\n                              />\n                            )}\n\n                            {genders === \"Couple\" && (\n                              <Select\n                                styles={customStyles}\n                                isMulti\n                                options={coupleOptions_select}\n                                value={sexuality}\n                                onChange={handleSexualityChange}\n                                placeholder=\"Select Couple\"\n                                className=\"custom-select\"\n                                classNamePrefix=\"custom-select\"\n                              />\n                            )}\n                          </AccordionItemPanel>\n                        </AccordionItem>\n\n                        <AccordionItem>\n                          <AccordionItemHeading>\n                            <AccordionItemButton>\n                              <div\n                                className=\"d-flex gap-2 align-items-center\"\n                                id=\"Singel\"\n                              >\n                                <div className=\"flex-shrink-0\">\n                                  <div className=\"acciconimg fulw\">\n                                    <img src={de14} alt=\"accimg\" />\n                                  </div>\n                                </div>\n                                <div className=\"flex-grow-1\">\n                                  <h4>Connect With</h4>\n                                </div>\n                              </div>\n                            </AccordionItemButton>\n                          </AccordionItemHeading>\n                          <AccordionItemPanel>\n                            <div className=\"listbox d-flex flex-wrap gap-3\">\n                              {[\n                                \"Singel\",\n                                \"Mann\",\n                                \"Kvinne\",\n                                \"Trans\",\n                                \"Trans (MTF)\",\n                                \"Trans (FTM)\",\n                                \"Ikke-binær\",\n                                \"Heteropar\",\n                                \"Homopar\",\n                                \"Lesbepar\",\n                                \"Flexipar\",\n                              ].map((label) => (\n                                <label className=\"cbox\" key={label}>\n                                  {label}\n                                  <input\n                                    type=\"checkbox\"\n                                    name=\"connectwith\"\n                                    value={label}\n                                    checked={Singel.includes(label)}\n                                    onChange={handleSingelChange}\n                                  />\n                                  <span className=\"checkmark\"></span>\n                                </label>\n                              ))}\n                            </div>\n                          </AccordionItemPanel>\n                        </AccordionItem>\n                        <AccordionItem>\n                          <AccordionItemHeading>\n                            <AccordionItemButton>\n                              <div\n                                className=\"d-flex gap-2 align-items-center\"\n                                id=\"InterstedIn\"\n                              >\n                                <div className=\"flex-shrink-0\">\n                                  <div className=\"acciconimg fulw\">\n                                    <img src={de16} alt=\"accimg\" />\n                                  </div>\n                                </div>\n                                <div className=\"flex-grow-1\">\n                                  <h4>{t(\"Intersted_In\")}</h4>\n                                </div>\n                              </div>\n                            </AccordionItemButton>\n                          </AccordionItemHeading>\n                          <AccordionItemPanel>\n                            <div className=\"listbox d-flex flex-wrap gap-3\">\n                              {[\n                                \"Diskusjon\",\n                                \"Inspirasjon\",\n                                \"Flørt\",\n                                \"Date\",\n                                \"Vennskap\",\n                                \"Forhold\",\n                                \"Kjærlighet\",\n                                \"Chat\",\n                                \"Bare nettkontakt\",\n                                \"Treff\",\n                                \"Sosialt samvær\",\n                              ].map((label) => (\n                                <label className=\"cbox\" key={label}>\n                                  {label}\n                                  <input\n                                    type=\"checkbox\"\n                                    name=\"interstedin\"\n                                    value={label}\n                                    checked={InterstedIn.includes(label)}\n                                    onChange={handleInterstedInChange}\n                                  />\n                                  <span className=\"checkmark\"></span>\n                                </label>\n                              ))}\n                            </div>\n                          </AccordionItemPanel>\n                        </AccordionItem>\n                        <AccordionItem>\n                          <AccordionItemHeading>\n                            <AccordionItemButton>\n                              <div\n                                className=\"d-flex gap-2 align-items-center\"\n                                id=\"relationship_status\"\n                              >\n                                <div className=\"flex-shrink-0\">\n                                  <div className=\"acciconimg fulw\">\n                                    <img src={de5} alt=\"accimg\" />\n                                  </div>\n                                </div>\n                                <div className=\"flex-grow-1\">\n                                  <h4>{t(\"Relationship_status\")}</h4>\n                                </div>\n                              </div>\n                            </AccordionItemButton>\n                          </AccordionItemHeading>\n                          <AccordionItemPanel>\n                            <div className=\"listbox d-flex flex-wrap gap-3\">\n                              <label className=\"cbox\">\n                                {t(\"Single\")}\n                                <input\n                                  type=\"radio\"\n                                  name=\"relationship_status\"\n                                  value=\"Single\"\n                                  checked={relationship_status === \"Single\"}\n                                  onChange={handleRelationStatusChange}\n                                />\n                                <span className=\"checkmark\"></span>\n                              </label>\n\n                              <label className=\"cbox\">\n                                {t(\"In_a_Relationship\")}\n                                <input\n                                  type=\"radio\"\n                                  checked={\n                                    relationship_status === \"InaRelationship\"\n                                  }\n                                  onChange={handleRelationStatusChange}\n                                  name=\"relationship_status\"\n                                  value=\"InaRelationship\"\n                                />\n                                <span className=\"checkmark\"></span>\n                              </label>\n\n                              <label className=\"cbox\">\n                                {t(\"Engaged\")}\n                                <input\n                                  type=\"radio\"\n                                  checked={relationship_status === \"engaged\"}\n                                  onChange={handleRelationStatusChange}\n                                  name=\"relationship_status\"\n                                  value=\"engaged\"\n                                />\n                                <span className=\"checkmark\"></span>\n                              </label>\n\n                              <label className=\"cbox\">\n                                {t(\"Married\")}\n                                <input\n                                  type=\"radio\"\n                                  checked={relationship_status === \"Married\"}\n                                  onChange={handleRelationStatusChange}\n                                  name=\"relationship_status\"\n                                  value=\"Married\"\n                                />\n                                <span className=\"checkmark\"></span>\n                              </label>\n\n                              <label className=\"cbox\">\n                                {t(\"It_s_Complicated\")}\n                                <input\n                                  type=\"radio\"\n                                  checked={\n                                    relationship_status === \"ItsComplicated\"\n                                  }\n                                  onChange={handleRelationStatusChange}\n                                  name=\"relationship_status\"\n                                  value=\"ItsComplicated\"\n                                />\n                                <span className=\"checkmark\"></span>\n                              </label>\n\n                              <label className=\"cbox\">\n                                {t(\"Separated\")}\n                                <input\n                                  type=\"radio\"\n                                  checked={relationship_status === \"Separated\"}\n                                  onChange={handleRelationStatusChange}\n                                  name=\"relationship_status\"\n                                  value=\"Separated\"\n                                />\n                                <span className=\"checkmark\"></span>\n                              </label>\n\n                              <label className=\"cbox\">\n                                {t(\"Divorced\")}\n                                <input\n                                  type=\"radio\"\n                                  checked={relationship_status === \"Divorced\"}\n                                  onChange={handleRelationStatusChange}\n                                  name=\"relationship_status\"\n                                  value=\"Divorced\"\n                                />\n                                <span className=\"checkmark\"></span>\n                              </label>\n\n                              <label className=\"cbox\">\n                                {t(\"Widowed\")}\n                                <input\n                                  type=\"radio\"\n                                  checked={relationship_status === \"Widowed\"}\n                                  onChange={handleRelationStatusChange}\n                                  name=\"relationship_status\"\n                                  value=\"Widowed\"\n                                />\n                                <span className=\"checkmark\"></span>\n                              </label>\n                              <label className=\"cbox\">\n                                {t(\"Polyamorous\")}\n                                <input\n                                  type=\"radio\"\n                                  checked={\n                                    relationship_status === \"Polyamorous\"\n                                  }\n                                  onChange={handleRelationStatusChange}\n                                  name=\"relationship_status\"\n                                  value=\"Polyamorous\"\n                                />\n                                <span className=\"checkmark\"></span>\n                              </label>\n                              <label className=\"cbox\">\n                                {t(\"Other\")}\n                                <input\n                                  type=\"radio\"\n                                  checked={relationship_status === \"Other\"}\n                                  onChange={handleRelationStatusChange}\n                                  name=\"relationship_status\"\n                                  value=\"Other\"\n                                />\n                                <span className=\"checkmark\"></span>\n                              </label>\n                            </div>\n                          </AccordionItemPanel>\n                        </AccordionItem>\n                        <AccordionItem>\n                          <AccordionItemHeading>\n                            <AccordionItemButton>\n                              <div\n                                className=\"d-flex gap-2 align-items-center\"\n                                id=\"search_looking_for\"\n                              >\n                                <div className=\"flex-shrink-0\">\n                                  <div className=\"acciconimg fulw\">\n                                    <img src={de6} alt=\"accimg\" />\n                                  </div>\n                                </div>\n                                <div className=\"flex-grow-1\">\n                                  <h4>{t(\"Looking_for\")}</h4>\n                                </div>\n                              </div>\n                            </AccordionItemButton>\n                          </AccordionItemHeading>\n                          <AccordionItemPanel>\n                            <div className=\"listbox d-flex flex-wrap gap-3\">\n                              {[\n                                \"Friends\",\n                                \"Dating\",\n                                \"Parties\",\n                                \"Flirting\",\n                                \"Relationships\",\n                                \"Fun\",\n                                \"Serious\",\n                                \"Hookups\",\n                              ].map((label) => (\n                                <label className=\"cbox\" key={label}>\n                                  {label}\n                                  <input\n                                    type=\"checkbox\"\n                                    name=\"search_looking_for\"\n                                    value={label}\n                                    checked={search_looking_for.includes(label)}\n                                    onChange={handleSearchLookingforChange}\n                                  />\n                                  <span className=\"checkmark\"></span>\n                                </label>\n                              ))}\n                            </div>\n                          </AccordionItemPanel>\n                        </AccordionItem>\n                        <AccordionItem>\n                          <AccordionItemHeading>\n                            <AccordionItemButton>\n                              <div\n                                className=\"d-flex gap-2 align-items-center\"\n                                id=\"degree\"\n                              >\n                                <div className=\"flex-shrink-0\">\n                                  <div className=\"acciconimg fulw\">\n                                    <img src={de7} alt=\"accimg\" />\n                                  </div>\n                                </div>\n                                <div className=\"flex-grow-1\">\n                                  <h4>{t(\"Degree\")}</h4>\n                                </div>\n                              </div>\n                            </AccordionItemButton>\n                          </AccordionItemHeading>\n                          <AccordionItemPanel>\n                            <select\n                              onChange={handleDegreeChange}\n                              value={degree}\n                              name=\"degree\"\n                              className=\"custom-select\"\n                              classNamePrefix=\"custom-select\"\n                            >\n                              <option value=\"\">\n                                {t(\"Select_your_degree\")}\n                              </option>\n                              <option value=\"BachelorDegree\">\n                                {t(\"Bachelor_s_Degree\")}\n                              </option>\n                              <option value=\"MasterDegree\">\n                                {t(\"Master_s_Degree\")}\n                              </option>\n                              <option value=\"DoctorateDegree\">\n                                {t(\"Doctorate_s_Degree\")}\n                              </option>\n                              <option value=\"other\">{t(\"Other\")}</option>\n                            </select>\n                          </AccordionItemPanel>\n                        </AccordionItem>\n                        <AccordionItem>\n                          <AccordionItemHeading>\n                            <AccordionItemButton>\n                              <div\n                                className=\"d-flex gap-2 align-items-center\"\n                                id=\"drinkerValue\"\n                              >\n                                <div className=\"flex-shrink-0\">\n                                  <div className=\"acciconimg fulw\">\n                                    <img src={de8} alt=\"accimg\" />\n                                  </div>\n                                </div>\n                                <div className=\"flex-grow-1\">\n                                  <h4>{t(\"Drinker\")}</h4>\n                                </div>\n                              </div>\n                            </AccordionItemButton>\n                          </AccordionItemHeading>\n                          <AccordionItemPanel>\n                            <div className=\"listbox d-flex flex-wrap gap-3\">\n                              <label className=\"cbox\">\n                                {t(\"Yes\")}\n                                <input\n                                  id=\"drinker\"\n                                  type=\"radio\"\n                                  name=\"drinker\"\n                                  checked={drinkerValue === \"Yes\"} // Set checked based on state\n                                  onChange={handledrinkerChange}\n                                  value=\"Yes\"\n                                />\n                                <span className=\"checkmark\"></span>\n                              </label>\n\n                              <label className=\"cbox\">\n                                {t(\"No\")}\n                                <input\n                                  type=\"radio\"\n                                  name=\"drinker\"\n                                  checked={drinkerValue === \"No\"} // Set checked based on state\n                                  onChange={handledrinkerChange}\n                                  value=\"No\"\n                                />\n                                <span className=\"checkmark\"></span>\n                              </label>\n                            </div>\n                          </AccordionItemPanel>\n                        </AccordionItem>\n                        <AccordionItem>\n                          <AccordionItemHeading>\n                            <AccordionItemButton>\n                              <div\n                                className=\"d-flex gap-2 align-items-center\"\n                                id=\"smokerValue\"\n                              >\n                                <div className=\"flex-shrink-0\">\n                                  <div className=\"acciconimg fulw\">\n                                    <img src={de9} alt=\"accimg\" />\n                                  </div>\n                                </div>\n                                <div className=\"flex-grow-1\">\n                                  <h4>{t(\"Smoker\")}</h4>\n                                </div>\n                              </div>\n                            </AccordionItemButton>\n                          </AccordionItemHeading>\n                          <AccordionItemPanel>\n                            <div className=\"listbox d-flex flex-wrap gap-3\">\n                              <label className=\"cbox\">\n                                {t(\"Yes\")}\n                                <input\n                                  id=\"smoker\"\n                                  type=\"radio\"\n                                  name=\"smoker\"\n                                  checked={smokerValue === \"Yes\"} // Set checked based on state\n                                  onChange={handlesmokerChange}\n                                  value=\"Yes\"\n                                />\n                                <span className=\"checkmark\"></span>\n                              </label>\n\n                              <label className=\"cbox\">\n                                {t(\"No\")}\n                                <input\n                                  type=\"radio\"\n                                  checked={smokerValue === \"No\"} // Set checked based on state\n                                  onChange={handlesmokerChange}\n                                  name=\"smoker\"\n                                  value=\"No\"\n                                />\n                                <span className=\"checkmark\"></span>\n                              </label>\n                            </div>\n                          </AccordionItemPanel>\n                        </AccordionItem>\n\n                        <AccordionItem>\n                          <AccordionItemHeading>\n                            <AccordionItemButton>\n                              <div\n                                className=\"d-flex gap-2 align-items-center\"\n                                id=\"tattosValue\"\n                              >\n                                <div className=\"flex-shrink-0\">\n                                  <div className=\"acciconimg fulw\">\n                                    <img src={de10} alt=\"accimg\" />\n                                  </div>\n                                </div>\n                                <div className=\"flex-grow-1\">\n                                  <h4>{t(\"Tattoos\")}</h4>\n                                </div>\n                              </div>\n                            </AccordionItemButton>\n                          </AccordionItemHeading>\n                          <AccordionItemPanel>\n                            <div className=\"listbox d-flex flex-wrap gap-3\">\n                              <label className=\"cbox\">\n                                {t(\"Yes\")}\n                                <input\n                                  type=\"radio\"\n                                  name=\"tattos\"\n                                  id=\"tattos\"\n                                  checked={tattosValue === \"Yes\"} // Set checked based on state\n                                  onChange={handletattosChange}\n                                  value=\"Yes\"\n                                />\n                                <span className=\"checkmark\"></span>\n                              </label>\n\n                              <label className=\"cbox\">\n                                {t(\"No\")}\n                                <input\n                                  type=\"radio\"\n                                  checked={tattosValue === \"No\"} // Set checked based on state\n                                  onChange={handletattosChange}\n                                  name=\"tattos\"\n                                  value=\"No\"\n                                />\n                                <span className=\"checkmark\"></span>\n                              </label>\n                              <label className=\"cbox\">\n                                {t(\"Few\")}\n                                <input\n                                  type=\"radio\"\n                                  checked={tattosValue === \"Few\"} // Set checked based on state\n                                  onChange={handletattosChange}\n                                  name=\"tattos\"\n                                  value=\"Few\"\n                                />\n                                <span className=\"checkmark\"></span>\n                              </label>\n                            </div>\n                          </AccordionItemPanel>\n                        </AccordionItem>\n                        <AccordionItem>\n                          <AccordionItemHeading>\n                            <AccordionItemButton>\n                              <div\n                                className=\"d-flex gap-2 align-items-center\"\n                                id=\"body_piercingsValue\"\n                              >\n                                <div className=\"flex-shrink-0\">\n                                  <div className=\"acciconimg fulw\">\n                                    <img src={de11} alt=\"accimg\" />\n                                  </div>\n                                </div>\n                                <div className=\"flex-grow-1\">\n                                  <h4>{t(\"Body_piercings\")}</h4>\n                                </div>\n                              </div>\n                            </AccordionItemButton>\n                          </AccordionItemHeading>\n                          <AccordionItemPanel>\n                            <div className=\"listbox d-flex flex-wrap gap-3\">\n                              <label className=\"cbox\">\n                                {t(\"Yes\")}\n                                <input\n                                  id=\"body_piercings\"\n                                  type=\"radio\"\n                                  name=\"body_piercings\"\n                                  checked={body_piercingsValue === \"Yes\"} // Set checked based on state\n                                  onChange={handlebody_piercingsChange}\n                                  value=\"Yes\"\n                                />\n                                <span className=\"checkmark\"></span>\n                              </label>\n\n                              <label className=\"cbox\">\n                                {t(\"No\")}\n                                <input\n                                  type=\"radio\"\n                                  name=\"body_piercings\"\n                                  checked={body_piercingsValue === \"No\"} // Set checked based on state\n                                  onChange={handlebody_piercingsChange}\n                                  value=\"No\"\n                                />\n                                <span className=\"checkmark\"></span>\n                              </label>\n                              <label className=\"cbox\">\n                                {t(\"Few\")}\n                                <input\n                                  type=\"radio\"\n                                  name=\"body_piercings\"\n                                  checked={body_piercingsValue === \"Few\"} // Set checked based on state\n                                  onChange={handlebody_piercingsChange}\n                                  value=\"Few\"\n                                />\n                                <span className=\"checkmark\"></span>\n                              </label>\n                            </div>\n                          </AccordionItemPanel>\n                        </AccordionItem>\n                        <AccordionItem>\n                          <AccordionItemHeading>\n                            <AccordionItemButton>\n                              <div\n                                className=\"d-flex gap-2 align-items-center\"\n                                id=\"fetishValue\"\n                              >\n                                <div className=\"flex-shrink-0\">\n                                  <div className=\"acciconimg fulw\">\n                                    <img src={de12} alt=\"accimg\" />\n                                  </div>\n                                </div>\n                                <div className=\"flex-grow-1\">\n                                  <h4>{t(\"Fetish\")}</h4>\n                                </div>\n                              </div>\n                            </AccordionItemButton>\n                          </AccordionItemHeading>\n                          <AccordionItemPanel>\n                            <div className=\"listbox d-flex flex-wrap gap-3\">\n                              {[\n                                \"None\",\n                                \"BDSM\",\n                                \"Bondage\",\n                                \"Dominant\",\n                                \"Latex & Leather\",\n                                \"Roleplay\",\n                                \"Spanking\",\n                                \"Switch\",\n                                \"Submissive\",\n                                \"Lingerie\",\n                                \"Wet\",\n                                \"Other\",\n                              ].map((label) => (\n                                <label className=\"cbox\" key={label}>\n                                  {label}\n                                  <input\n                                    id=\"fetish\"\n                                    type=\"checkbox\"\n                                    name=\"fetish\"\n                                    value={label}\n                                    checked={fetishValue.includes(label)}\n                                    onChange={handlefetishChange}\n                                  />\n                                  <span className=\"checkmark\"></span>\n                                </label>\n                              ))}\n                            </div>\n                          </AccordionItemPanel>\n                        </AccordionItem>\n                      </Accordion>\n                    </div>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </section>\n      {spinner && (\n        <div className=\"spinner_overlay\">\n          <div className=\"spinner-border text-success\" role=\"status\">\n            <span className=\"visually-hidden\">Loading...</span>\n          </div>\n        </div>\n      )}\n\n      <PrivateImageRequest\n        isOpen={isPopupOpen}\n        onClose={closePopup}\n        LoginData={LoginData}\n      />\n      <Uploadprivatealbum\n        isOpen={isPopupOpen1}\n        onClose={closePopup1}\n        LoginData={LoginData}\n        closepopup11={closepopup11}\n      ></Uploadprivatealbum>\n      {selectedImage && (\n        <div\n          style={{\n            position: \"fixed\",\n            top: 0,\n            left: 0,\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: \"rgba(0, 0, 0, 0.8)\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            zIndex: 989898,\n          }}\n          onClick={() => setSelectedImage(null)} // Close when clicked outside\n        >\n          <div className=\"rel d-block pt-5\">\n            <button type=\"button\" className=\"closebtnpic\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width={24}\n                height={24}\n                viewBox=\"0 0 24 24\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                strokeWidth={2}\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                className=\"icon icon-tabler icons-tabler-outline icon-tabler-x\"\n              >\n                <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                <path d=\"M18 6l-12 12\" />\n                <path d=\"M6 6l12 12\" />\n              </svg>\n            </button>\n            <MediaRenderer\n              className=\"w-100 h-100 object-fit-cover\"\n              url={selectedImage}\n              style={{\n                maxWidth: \"100%\",\n                maxHeight: \"100%\",\n                borderRadius: \"10px\",\n                height: \"85vh\",\n                objectFit: \"contain\",\n              }}\n            />\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default Editprofile;\n"],"names":["Uploadprivatealbum","_ref","isOpen","onClose","children","closepopup11","spinner","setspinner","useState","images","setImages","visibility","setVisibility","addToAlbum","setAddToAlbum","addToAlbumPass","setAddToAlbumpass","Password","setPassword","albumName","setAlbumName","rightsConfirmed","setRightsConfirmed","error","setError","successmsg","setsuccessmsg","preebtn","setpreebtn","t","useTranslation","fileInputRef","useRef","useEffect","savedLanguage","localStorage","getItem","i18n","language","changeLanguage","yesNoerror","setYesNoError","_jsx","_Fragment","className","onClick","e","target","classList","contains","_jsxs","action","method","onSubmit","async","preventDefault","alert","storedUsername","userLogin","JSON","parse","formData","FormData","forEach","file","append","id","respo","axios","post","apiUrl","headers","Accept","data","message","setTimeout","window","location","reload","err","response","request","console","type","name","required","multiple","onChange","selectedFiles","files","validFiles","fileError","length","Array","from","fileType","startsWith","size","push","ref","style","color","height","map","index","prev","updatedImages","filter","_","i","current","value","removeFile","src","URL","createObjectURL","alt","width","controls","BsCloudUpload","fontSize","xmlns","viewBox","fill","stroke","class","d","placeholder","pointerEvents","opacity","strokeWidth","strokeLinecap","strokeLinejoin","role","LoginData","apiUrl2","isRequestDetail","setRequestDetail","getRequestDetails","ws","WebSocket","onmessage","event","receivedMessage","log","close","user_id","calculateAge","birthday","birthDate","Date","today","age","getFullYear","monthDifference","getMonth","getDate","Link","to","profile_image","username","birthday_date","album_name","status","disabled","to_id","req_id","RequestConfirm","RequestDelete","_locations$selectedRe","navigate","useNavigate","editorRef","useLocation","ErrorForAll","setErrorForAll","editorContent","setEditorContent","isPopupOpen","setIsPopupOpen","isPopupOpen1","setIsPopupOpen1","isImagePrivate","setIsImagePrivate","showPopSuccess","setShowPopSuccess","showPopError","setShowPopError","successPopMessage","setPopsuccessMessage","errorPopMessage","setPoperrorMessage","setLoginData","profilevalue","setprofilevalue","genders","setgenders","Singel","setSingel","InterstedIn","setInterstedIn","nationality","setNationality","bodyType","setBodyType","selectedSubRegion","setSelectedSubRegion","React","sexual_orientation","setsexual_orientation","relationship_status","setrelationship_status","smokerValue","setsmokerValue","tattosValue","settattosValue","fetishValue","setfetishValue","search_looking_for","setsearch_looking_for","drinkerValue","setdrinkerValue","body_piercingsValue","setbody_piercingsValue","degree","setDegree","heightFeet","setHeightFeet","height_feet","heightInches","setHeightInches","height_inches","selectedFile","setSelectedFile","errorMessage","setErrorMessage","selectedFile_1","setSelectedFile_1","errorMessage_1","setErrorMessage_1","selectedFile_2","setSelectedFile_2","errorMessage_2","setErrorMessage_2","selectedFile_3","setSelectedFile_3","errorMessage_3","setErrorMessage_3","selectedFile_4","setSelectedFile_4","errorMessage_4","setErrorMessage_4","imageUrl","setImageUrl","imageUrl1","setImageUrl1","imageUrl2","setImageUrl2","imageUrl3","setImageUrl3","imageUrl4","setImageUrl4","isMaleChecked","setIsMaleChecked","maleOptions","setMaleOptions","straight","gay","bull","isCoupleChecked","setIsCoupleChecked","coupleOptions","setCoupleOptions","fullswap","softswap","cuckold","exhibitionist","voyeur","hotwife","isFemaleChecked","setIsFemaleChecked","femaleOptions","setFemaleOptions","Straight","lesbian","Hotwife","sexuality","setSexuality","getallAlbum","setgetallAlbum","apiURL","apiURLMembers","anyOptionChecked","Object","values","some","isChecked","getprofile","email","looking_for","handlefetishChange","checked","orientation","handlebody_piercingsChange","handledrinkerChange","handletattosChange","handlesmokerChange","handleSingelChange","handleInterstedInChange","handleNationalityChange","handleBodyTypeChange","handleRelationStatusChange","handleSearchLookingforChange","handleCheckChange","handleSexualOrientationChange","handlegendersChange","handleSexualityChange","selectedOptions","res","makeImagePrivate","bodytype","drinker","fetish","isArray","body_piercings","tattos","smoker","parsedSexualOrientation","connectwith","interstedin","gender","optionss","item","label","profile_image_1","profile_image_2","profile_image_3","profile_image_4","selectedRegion","setSelectedRegion","town","parsedtown","setSelectedTown","subregion","malee","male","maleArray","prevState","updatedMaleOptions","option","hasOwnProperty","femalee","female","femaleArray","updatedFeMaleOptions","couplee","couple","coupleArray","updatedCoupleOptions","MAX_FILE_SIZE","handleFileChange","showErrorAndScroll","fieldId","showError","element","document","getElementById","scrollIntoView","behavior","block","openPopup","body","overflowY","openPopup1","locations","Viken","Innlandet","Hordaland","Rogaland","Trøndelag","Nordland","Other","regionTranslationKeys","ostlandet","vestlandet","trondelag","nordnorge","other","selectedTown","handleTownChange","prevSelectedTowns","optionsheight","customStyles","includes","control","provided","backgroundColor","padding","border","boxShadow","state","borderBottom","isSelected","multiValue","multiValueLabel","multiValueRemove","getallAlbums","results","pathname","ImagesFriendsOwn","setImagesFriendsOwn","isonlyallbumPublic","setisonlyallbumPublic","get_albumStatusonlyPublic","getUserDetailsOwn","mediaList","media","usersalbum_id","selectedImage","setSelectedImage","isonlyallbumfriend","setisonlyallbumfriend","handleKeyDown","key","addEventListener","removeEventListener","Headertwo","SuccessPop","ErrorPop","vl","preferences","stringify","token","keys","accept","image","imgIndex","MediaRenderer","url","album","require","cover_image","htmlFor","Editor","apiKey","onInit","_evt","editor","onEditorChange","content","init","menubar","plugins","toolbar","content_style","defaultValue","regionKey","find","subRegion","Accordion","AccordionItem","AccordionItemHeading","AccordionItemButton","de1","AccordionItemPanel","de2","de3","de4","Select","styles","isMulti","options","classNamePrefix","de16","de5","de6","de7","de8","de9","de10","de11","de12","PrivateImageRequest","closePopup","closePopup1","position","top","left","display","justifyContent","alignItems","zIndex","maxWidth","maxHeight","borderRadius","objectFit"],"sourceRoot":""}