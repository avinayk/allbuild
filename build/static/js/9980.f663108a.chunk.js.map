{"version":3,"file":"static/js/9980.f663108a.chunk.js","mappings":"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","sources":["pages/Previewalbum.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { BsCloudUpload } from \"react-icons/bs\";\r\nimport { Link, useParams, useNavigate } from \"react-router-dom\";\r\nimport Headertwo from \"../components/Headertwo\";\r\nimport { Footer } from \"../components/Footer\";\r\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\r\nimport \"react-tabs/style/react-tabs.css\";\r\nimport SuccessPop from \"../components/SuccessPop\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport i18n from \"../i18n\";\r\nimport { AlertDelete } from \"../components/AlertDelete\";\r\nimport { HiDotsVertical } from \"react-icons/hi\";\r\nimport { UserPhotoLikeComment } from \"../components/UserPhotoLikeComment\";\r\nimport { popup } from \"leaflet\";\r\nimport MediaRenderer from \"../components/MediaRenderer\";\r\nimport { IconStarFilled } from \"@tabler/icons-react\";\r\nexport default function Previewalbum() {\r\n  const navigate = useNavigate();\r\n  const [showPopSuccess, setShowPopSuccess] = useState(false);\r\n  const [successPopMessage, setPopsuccessMessage] = useState(\"\");\r\n  const [selectedId, setSelectedId] = useState(\"\");\r\n  const [movepostdata, setmovepostdata] = useState(\"\");\r\n  const [mainAlbumname, setmainAlbumname] = useState(\"\");\r\n  const [albumnameMoveto, setalbumnameMoveto] = useState([]);\r\n  const [opemModalmove, setopemModalmove] = useState(false);\r\n  const [spinner, setspinner] = useState(false);\r\n  const [spinnerdis, setspinnerdis] = useState(true);\r\n  const [successmsg, setsuccessmsg] = useState(\"\");\r\n  const [mainId, setmainId] = useState(\"\");\r\n  const [deleteMessage, setdeleteMessage] = useState(\"\");\r\n  const [isPopupOpen_delete, setisPopupOpen_delete] = useState(false);\r\n  const [viewalbum, setviewalbum] = useState(false);\r\n  const [isallmedia, setallmedia] = useState([]);\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [currentSlideIndex, setCurrentSlideIndex] = useState(1);\r\n  const [isGrouppost, setIsGrouppost] = useState([]);\r\n  const [albumimages, setAlbumimages] = useState([]);\r\n  const [mediaImages, setmediaImages] = useState([]);\r\n  const [mediaVideos, setmediaVideos] = useState([]);\r\n  const [LoginData, setLoginData] = useState(null);\r\n  const [opemModalupload, setopemModalupload] = useState(false);\r\n  const [albumId, setalbumId] = useState(\"\");\r\n  const [Albumname, setAlbumname] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [images, setImages] = useState(null);\r\n  const [userId, setuserId] = useState(\"\");\r\n  const [UserAlbumId, setUserAlbumId] = useState(\"\");\r\n  const [openFile, setopenFile] = useState(\"\");\r\n  const { id, image_url } = useParams();\r\n  const decodedImageUrl = decodeURIComponent(image_url);\r\n\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const storedUsername = localStorage.getItem(\"userLogin\");\r\n  const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\r\n  //const [modalOpen, setModalOpen] = useState(false);\r\n  const closeModal = () => setModalOpen(false);\r\n\r\n  const showSlide = (n) => {\r\n    if (n > images.length) setCurrentSlideIndex(1);\r\n    else if (n < 1) setCurrentSlideIndex(images.length);\r\n    else setCurrentSlideIndex(n);\r\n  };\r\n  useEffect(() => {\r\n    if (modalOpen) {\r\n      // Disable scrolling when modal is open\r\n      document.body.style.overflowY = \"hidden\";\r\n    } else {\r\n      // Enable scrolling when modal is closed\r\n      document.body.style.overflowY = \"auto\";\r\n    }\r\n\r\n    // Cleanup to restore the overflow style when the component unmounts\r\n    return () => {\r\n      document.body.style.overflowY = \"auto\";\r\n    };\r\n  }, [modalOpen]);\r\n  var apiUrl = \"https://backend.amourette.no/api/members/\";\r\n  useEffect(() => {\r\n    const storedUsername = localStorage.getItem(\"userLogin\");\r\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null; // Safely parse login data\r\n    setLoginData(userLogin);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      getprivatemediaalbum(id);\r\n    }\r\n  }, [id]);\r\n  const getprivatemediaalbum = async (id) => {\r\n    const storedUsername = localStorage.getItem(\"userLogin\");\r\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null; // Safely parse login data\r\n    let formData = {\r\n      user_id: userLogin.id,\r\n      album_id: id,\r\n    };\r\n\r\n    try {\r\n      const res = await axios.post(\r\n        apiUrl + \"getpreviewtemediaalbum\",\r\n        formData,\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\r\n          },\r\n        }\r\n      );\r\n      var respo = res.data;\r\n      if (respo.results.length > 0) {\r\n        setmainId(respo.results[0].m_id);\r\n        setAlbumname(respo.results[0].name);\r\n        setuserId(respo.results[0].user_id);\r\n        setmainAlbumname(respo.results[0].name);\r\n        let images = [];\r\n        let videos = [];\r\n\r\n        let media = [];\r\n\r\n        respo.results.forEach((item) => {\r\n          try {\r\n            const mediaArray = JSON.parse(item.images); // safely parse item.images JSON string\r\n\r\n            if (Array.isArray(mediaArray)) {\r\n              mediaArray.forEach((mediaUrl) => {\r\n                // Create a media object for each file\r\n                const mediaObj = {\r\n                  url: mediaUrl,\r\n                  id: item.m_id, // main item ID\r\n                  type: null, // we'll set type below\r\n                  cover_image: item.cover_image,\r\n                };\r\n\r\n                // Only add if type is determined (ignore unknown file types)\r\n                if (mediaObj) {\r\n                  media.push(mediaObj);\r\n                }\r\n              });\r\n            }\r\n          } catch (error) {\r\n            console.error(\"Error parsing images JSON:\", error);\r\n          }\r\n        });\r\n\r\n        setmediaImages(media);\r\n        setmediaVideos(videos);\r\n        setCurrentIndex(0);\r\n      } else {\r\n        // navigate(\"/friendsearch\");\r\n      }\r\n    } catch (err) {\r\n      // Enhanced error handling\r\n      if (err.response) {\r\n      } else if (err.request) {\r\n        //console.error(\"Request data:\", err.request);\r\n      } else {\r\n        // console.error(\"Error message:\", err.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const decodedImageUrl = decodeURIComponent(image_url);\r\n\r\n    // Find matching index in mediaImages\r\n    const index = mediaImages.findIndex((item) => item.url === image_url);\r\n    console.log(index, id, \"lll\");\r\n    if (index !== -1) {\r\n      openModalLikeComment(mainId, image_url, index);\r\n      navigate(`/previewimages/${id}`, { replace: true });\r\n    } else {\r\n      console.log(\"Image not found in mediaImages\");\r\n    }\r\n  }, [id, image_url, mediaImages, userId, mainId]);\r\n\r\n  const getallmedia = async (album_id) => {\r\n    let formData = {\r\n      album_id: album_id,\r\n    };\r\n\r\n    try {\r\n      const res = await axios.post(apiUrl + \"getallmediaa\", formData, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\r\n        },\r\n      });\r\n\r\n      if (res && res.data && res.data.results) {\r\n        const redata = res.data.results;\r\n\r\n        // Parsing the images array and updating state\r\n        const updatedMedia = redata.map((item) => {\r\n          let mediaArray = [];\r\n\r\n          // Check if the 'images' field exists and is a valid string\r\n          if (\r\n            item.images &&\r\n            item.images !== \"undefined\" &&\r\n            item.images !== \"\"\r\n          ) {\r\n            try {\r\n              mediaArray = JSON.parse(item.images); // Parse the string into an array\r\n            } catch (e) {\r\n              console.error(\"Error parsing images for item:\", item.id, e);\r\n              mediaArray = []; // In case of an error, use an empty array\r\n            }\r\n          }\r\n\r\n          // Collect media items, separating images and videos\r\n          const mediaItems = mediaArray.filter(\r\n            (media) =>\r\n              media.match(/\\.(jpeg|jpg|png|gif|webp)$/i) || // Check for images\r\n              media.match(/\\.(mp4|mov|avi|mkv|webm|ogg|flv|3gp|mkv|webm)$/i) // Check for videos\r\n          );\r\n\r\n          return {\r\n            mediaItems: mediaItems, // Store the parsed media array\r\n          };\r\n        });\r\n        setviewalbum(true);\r\n        //console.log(updatedMedia);\r\n        // Set the parsed media data in state\r\n        setallmedia(updatedMedia);\r\n      }\r\n    } catch (err) {\r\n      if (err.response) {\r\n        console.error(\"Server Response Error:\", err.response.data);\r\n      } else if (err.request) {\r\n        console.error(\"No Response Received:\", err.request);\r\n      } else {\r\n        console.error(\"Request Error:\", err.message);\r\n      }\r\n    }\r\n  };\r\n  const openModal = (mediaArray, index) => {\r\n    setIsGrouppost(mediaArray); // Set the full list of images or videos\r\n    setCurrentSlideIndex(index); // Set the clicked item's index\r\n    setModalOpen(true);\r\n  };\r\n  const { t } = useTranslation();\r\n\r\n  useEffect(() => {\r\n    const savedLanguage = localStorage.getItem(\"language\") || \"en\"; // Default to 'en' if no language is saved\r\n    //console.log(\"language\");\r\n    //console.log(savedLanguage);\r\n\r\n    // Change the language if it's not already the current language\r\n    if (i18n.language !== savedLanguage) {\r\n      i18n.changeLanguage(savedLanguage);\r\n    }\r\n  }, [i18n, t]);\r\n  const handledeletebtnn = async () => {\r\n    const storedUsername = localStorage.getItem(\"userLogin\");\r\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null; // Safely parse login data\r\n    let formData = {\r\n      user_id: userLogin.id,\r\n      image: albumId,\r\n      id: mainId,\r\n    };\r\n\r\n    try {\r\n      const res = await axios.post(apiUrl + \"privatealbumdelete\", formData, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\r\n        },\r\n      });\r\n      var respo = res.data;\r\n      setisPopupOpen_delete(false);\r\n      getprivatemediaalbum(id);\r\n    } catch (err) {}\r\n  };\r\n  const handledeletebtn = async (idd) => {\r\n    setalbumId(idd);\r\n    setisPopupOpen_delete(true);\r\n    setdeleteMessage(\"Are you sure? You want delete this\");\r\n  };\r\n  const handlecoverphoto = async (urlpost) => {\r\n    const storedUsername = localStorage.getItem(\"userLogin\");\r\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\r\n    let formData = {\r\n      id: id,\r\n      user_id: userLogin.id,\r\n      coverphoto: urlpost,\r\n    };\r\n    try {\r\n      const res = await axios.post(apiUrl + \"setCoverphoto\", formData, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\r\n        },\r\n      });\r\n      setShowMenu(false);\r\n      setShowPopSuccess(true);\r\n      setPopsuccessMessage(\"Cover photo has been set successfully.\");\r\n      getprivatemediaalbum(id);\r\n      setTimeout(() => {\r\n        setShowPopSuccess(false);\r\n      }, 800);\r\n    } catch (err) {\r\n      if (err.response) {\r\n        console.error(\"Server Response Error:\", err.response.data);\r\n      } else if (err.request) {\r\n        console.error(\"No Response Received:\", err.request);\r\n      } else {\r\n        console.error(\"Request Error:\", err.message);\r\n      }\r\n    }\r\n  };\r\n  const handlemovetobtn = async (post) => {\r\n    setopemModalmove(true);\r\n    const storedUsername = localStorage.getItem(\"userLogin\");\r\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\r\n    let formData = {\r\n      id: id,\r\n      user_id: userLogin.id,\r\n    };\r\n    setmovepostdata(post);\r\n    try {\r\n      const res = await axios.post(apiUrl + \"getmediaAlbumName\", formData, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\r\n        },\r\n      });\r\n      setalbumnameMoveto(res.data.results);\r\n    } catch (err) {\r\n      if (err.response) {\r\n        console.error(\"Server Response Error:\", err.response.data);\r\n      } else if (err.request) {\r\n        console.error(\"No Response Received:\", err.request);\r\n      } else {\r\n        console.error(\"Request Error:\", err.message);\r\n      }\r\n    }\r\n  };\r\n  const closePopup_delete = () => {\r\n    setisPopupOpen_delete(false);\r\n  };\r\n  const refreshpopup = async () => {\r\n    handledeletebtnn();\r\n  };\r\n  const handleupload = () => {\r\n    setopemModalupload(true);\r\n  };\r\n  const handleModalClose = () => {\r\n    setopemModalupload(false);\r\n    setopemModalmove(false);\r\n  };\r\n  const handleSubmitupload = async (e) => {\r\n    e.preventDefault();\r\n    if (!images) {\r\n      alert(\"Please select images to upload.\");\r\n      return;\r\n    }\r\n    setspinnerdis(false);\r\n    setspinner(true);\r\n    const storedUsername = localStorage.getItem(\"userLogin\");\r\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\r\n    const formData = new FormData();\r\n    console.log(images);\r\n    images.forEach((file) => {\r\n      formData.append(\"images\", file); // Use the key 'files' for your backend to handle multiple files\r\n    });\r\n    formData.append(\"id\", mainId);\r\n    formData.append(\"user_id\", userLogin.id);\r\n    formData.append(\"fileType\", \"\");\r\n    try {\r\n      const res = await axios.post(apiUrl + \"uploadprivateAlbums\", formData, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      });\r\n      var respo = res.data;\r\n      setsuccessmsg(respo.message);\r\n      setTimeout(() => {\r\n        setspinnerdis(true);\r\n        setspinner(false);\r\n        setopemModalupload(false);\r\n        setImages(null);\r\n        getprivatemediaalbum(id);\r\n        setsuccessmsg(\"\");\r\n      }, 3500);\r\n    } catch (err) {\r\n      // Enhanced error handling\r\n      if (err.response) {\r\n      } else if (err.request) {\r\n        console.error(\"Request data:\", err.request);\r\n      } else {\r\n        console.error(\"Error message:\", err.message);\r\n      }\r\n    }\r\n  };\r\n  const fileInputRef = useRef(null);\r\n  const handleFileChange = (e) => {\r\n    const selectedFiles = e.target.files;\r\n    const maxFileSize = 50 * 1024 * 1024; // 10 MB in bytes\r\n    const maxFileCount = 10; // Maximum of 10 files\r\n    let validFiles = [];\r\n    let fileError = \"\";\r\n\r\n    // Check if the number of files exceeds the limit\r\n    if (selectedFiles.length > maxFileCount) {\r\n      fileError = `You can only upload a maximum of ${maxFileCount} files.`;\r\n    } else {\r\n      Array.from(selectedFiles).forEach((file) => {\r\n        const fileType = file.type;\r\n\r\n        // Allow only images and videos\r\n        if (!fileType.startsWith(\"image/\") && !fileType.startsWith(\"video/\")) {\r\n          fileError = `File \"${file.name}\" is not an image or video.`;\r\n        } else if (file.size > maxFileSize) {\r\n          fileError = `File \"${file.name}\" exceeds the 5 MB limit.`;\r\n        } else {\r\n          validFiles.push(file);\r\n        }\r\n      });\r\n    }\r\n\r\n    if (fileError) {\r\n      setError(fileError);\r\n    } else {\r\n      setError(\"\");\r\n      setImages(validFiles);\r\n    }\r\n  };\r\n  const removeFile = (index) => {\r\n    setImages((prev) => {\r\n      const updatedImages = prev.filter((_, i) => i !== index);\r\n      // If no files left, reset the input value\r\n      if (updatedImages.length === 0 && fileInputRef.current) {\r\n        fileInputRef.current.value = \"\";\r\n      }\r\n      return updatedImages;\r\n    });\r\n  };\r\n  const handleSubmitmove = async () => {\r\n    const storedUsername = localStorage.getItem(\"userLogin\");\r\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null; // Safely parse login data\r\n    let formData = {\r\n      file: movepostdata,\r\n      id: selectedId,\r\n      removeid: mainId,\r\n      user_id: userLogin.id,\r\n    };\r\n\r\n    try {\r\n      const res = await axios.post(apiUrl + \"movetoFile\", formData, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\r\n        },\r\n      });\r\n      setSelectedId(\"\");\r\n      setopemModalmove(false);\r\n      setTimeout(() => {\r\n        setShowPopSuccess(true);\r\n      }, 80);\r\n\r\n      setPopsuccessMessage(\"Successfully moved\");\r\n      getprivatemediaalbum(id);\r\n      setTimeout(() => {\r\n        setShowPopSuccess(false);\r\n      }, 800);\r\n    } catch (err) {}\r\n  };\r\n  const handlechooseId = (event) => {\r\n    setSelectedId(event.target.value); // Update state with selected ID\r\n  };\r\n  const [showMenu, setShowMenu] = useState(false);\r\n\r\n  const handleCloseDeletePopup = () => {\r\n    setShowMenu(false);\r\n  };\r\n  const toggleMenu = (index) => {\r\n    setShowMenu(showMenu === index ? null : index);\r\n  };\r\n  //Like Comments, Album\r\n  const [PopupData, setPopupData] = useState(null);\r\n  const [PopupDatafile, setPopupDatafile] = useState(null);\r\n  const [isPopupOpen11, setIsPopupOpen11] = useState(false);\r\n  const [UserPhotoCommetss, setUserPhotoCommetss] = useState([]);\r\n  const closePopup11 = () => {\r\n    setIsPopupOpen11(false);\r\n    document.body.style.overflowY = \"auto\";\r\n  };\r\n  const openPopup11 = () => {\r\n    setIsPopupOpen11(true);\r\n    document.body.style.overflowY = \"hidden\";\r\n  };\r\n  const openModalLikeComment = async (id, file, index) => {\r\n    setUserAlbumId(id);\r\n    setopenFile(file);\r\n    setCurrentIndex(index);\r\n    const storedUsername = localStorage.getItem(\"userLogin\");\r\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null; // Safely parse login data\r\n    let formData = {\r\n      file: file,\r\n      id: id,\r\n      user_id: userId,\r\n    };\r\n    console.log(formData);\r\n    try {\r\n      const res = await axios.post(apiUrl + \"getuseralbumFile\", formData, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\r\n        },\r\n      });\r\n      const datacheck = res.data;\r\n      console.log(datacheck);\r\n      if (datacheck.matched === true) {\r\n        setPopupData(datacheck.results);\r\n        setPopupDatafile(file);\r\n\r\n        getUseralbumsComments(file, id);\r\n        openPopup11();\r\n      }\r\n    } catch (err) {}\r\n  };\r\n  const getUseralbumsComments = async (file, id) => {\r\n    const storedUsername = localStorage.getItem(\"userLogin\");\r\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null; // Safely parse login data\r\n    let formData = {\r\n      file: file,\r\n      id: id,\r\n      user_id: userId,\r\n    };\r\n    try {\r\n      const res = await axios.post(apiUrl + \"getUseralbumsComments\", formData, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\r\n        },\r\n      });\r\n      const datacheck = res.data;\r\n      console.log(datacheck.album);\r\n      setUserPhotoCommetss(datacheck.album.comments);\r\n    } catch (err) {}\r\n  };\r\n  const getfavrefresh = async () => {\r\n    const storedUsername = localStorage.getItem(\"userLogin\");\r\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null; // Safely parse login data\r\n    let formData = {\r\n      file: openFile,\r\n      id: UserAlbumId,\r\n      user_id: userId,\r\n    };\r\n    console.log(formData);\r\n    try {\r\n      const res = await axios.post(apiUrl + \"getuseralbumFile\", formData, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\r\n        },\r\n      });\r\n      const datacheck = res.data;\r\n      console.log(datacheck);\r\n      if (datacheck.matched === true) {\r\n        openPopup11();\r\n        setPopupData(datacheck.results);\r\n        setPopupDatafile(openFile);\r\n\r\n        getUseralbumsComments(openFile, UserAlbumId);\r\n      }\r\n    } catch (err) {}\r\n  };\r\n  const getfavalbum = async () => {\r\n    const storedUsername = localStorage.getItem(\"userLogin\");\r\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null; // Safely parse login data\r\n    let formData = {\r\n      file: openFile,\r\n      id: UserAlbumId,\r\n      user_id: userId,\r\n    };\r\n    console.log(formData);\r\n    try {\r\n      const res = await axios.post(apiUrl + \"getuseralbumFile\", formData, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\r\n        },\r\n      });\r\n      const datacheck = res.data;\r\n      if (datacheck.matched === true) {\r\n        setPopupData(datacheck.results);\r\n        setPopupDatafile(openFile);\r\n\r\n        getUseralbumsComments(openFile, UserAlbumId);\r\n        openPopup11();\r\n      }\r\n    } catch (err) {}\r\n  };\r\n  const goToNext = () => {\r\n    if (currentIndex < mediaImages.length - 1) {\r\n      const nextIndex = currentIndex + 1;\r\n      const nextMedia = mediaImages[nextIndex];\r\n      setCurrentIndex(nextIndex);\r\n      openModalLikeComment(nextMedia.id, nextMedia.url, nextIndex);\r\n    }\r\n  };\r\n\r\n  const goToPrevious = () => {\r\n    if (currentIndex > 0) {\r\n      const prevIndex = currentIndex - 1;\r\n      const prevMedia = mediaImages[prevIndex];\r\n      setCurrentIndex(prevIndex);\r\n      openModalLikeComment(prevMedia.id, prevMedia.url, prevIndex);\r\n    }\r\n  };\r\n  const refreshpost = () => {\r\n    window.location.reload();\r\n  };\r\n  console.log(mediaImages);\r\n  return (\r\n    <>\r\n      <Headertwo />\r\n      {showPopSuccess && <SuccessPop message={successPopMessage} />}\r\n      <AlertDelete\r\n        isOpen1={isPopupOpen_delete}\r\n        onClose1={closePopup_delete}\r\n        message={deleteMessage}\r\n        onReturnSent={refreshpopup}\r\n      ></AlertDelete>\r\n      <section className=\"ggboxes d-block gapy\">\r\n        <div className=\"container-lg\">\r\n          <div className=\"row gy-4 mb-5\">\r\n            <div className=\"col-md-6\">\r\n              <h2 className=\"pagetitle\">{`${t(\"Photos\")}`}</h2>\r\n              <strong>({Albumname})</strong>\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <div className=\"d-flex justify-content-md-end\"></div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              <Tabs>\r\n                <TabList>\r\n                  <div className=\"d-flex align-items-center justify-content-between w-100\">\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <Tab>{`${t(\"Media\")}`}</Tab>\r\n                      <button\r\n                        type=\"button\"\r\n                        onClick={() => navigate(`/friend/${userId}`)}\r\n                        className=\"btn backbtn\"\r\n                      >\r\n                        Back\r\n                      </button>\r\n                    </div>\r\n                    {userLogin.id === userId && (\r\n                      <button\r\n                        className=\"react-tabs__tab react-tabs__tab--selected\"\r\n                        type=\"button\"\r\n                        onClick={handleupload}\r\n                      >\r\n                        {t(\"Upload\")}\r\n                      </button>\r\n                    )}\r\n                  </div>\r\n                </TabList>\r\n\r\n                <TabPanel>\r\n                  <div className=\"row gy-4\">\r\n                    {mediaImages.length > 0 ? (\r\n                      mediaImages.map((post, index) => (\r\n                        <div className=\"col-md-3\" key={index}>\r\n                          <div className=\"d-flex flex-column gap-2\">\r\n                            <div className=\"ggimagebox ofit position-relative\">\r\n                              <MediaRenderer\r\n                                className=\"hover-shadow\"\r\n                                url={post.url}\r\n                                onClick={() =>\r\n                                  openModalLikeComment(post.id, post.url, index)\r\n                                }\r\n                              />\r\n                              {/* If it is an image */}\r\n\r\n                              {/* Show edit options if user is owner */}\r\n                              {post.url === post.cover_image && (\r\n                                <>\r\n                                  {userLogin.id === userId && (\r\n                                    <div className=\"d-flex flex-column gap-3 image_center_ w-100\">\r\n                                      <div\r\n                                        style={{\r\n                                          position: \"relative\",\r\n                                          display: \"inline-block\",\r\n                                        }}\r\n                                        className=\"d-flex justify-content-between align-items-center gap-3 w-100\"\r\n                                      >\r\n                                        {post.url === post.cover_image && (\r\n                                          <button\r\n                                            className=\"py-1\"\r\n                                            type=\"button\"\r\n                                            title={t(\"Cover_photo\")}\r\n                                          >\r\n                                            <IconStarFilled />\r\n                                          </button>\r\n                                        )}\r\n                                        <button\r\n                                          className=\"remove_mess\"\r\n                                          onClick={() => toggleMenu(index)}\r\n                                        >\r\n                                          <HiDotsVertical />\r\n                                        </button>\r\n\r\n                                        {/* Popup menu */}\r\n                                        {showMenu === index && (\r\n                                          <ul className=\"popup-menu w-fit\">\r\n                                            <li\r\n                                              onClick={() =>\r\n                                                handledeletebtn(post.url)\r\n                                              }\r\n                                            >\r\n                                              {t(\"delete\")}\r\n                                            </li>\r\n                                            <li\r\n                                              onClick={() =>\r\n                                                handlemovetobtn(post.url)\r\n                                              }\r\n                                            >\r\n                                              {t(\"MOve_to\")}\r\n                                            </li>\r\n                                            <li\r\n                                              onClick={() =>\r\n                                                handlecoverphoto(post.url)\r\n                                              }\r\n                                            >\r\n                                              {t(\"Cover_photo\")}\r\n                                            </li>\r\n                                          </ul>\r\n                                        )}\r\n                                      </div>\r\n                                    </div>\r\n                                  )}\r\n                                </>\r\n                              )}\r\n                              {post.url != post.cover_image && (\r\n                                <>\r\n                                  {userLogin.id === userId && (\r\n                                    <div className=\"d-flex flex-column gap-3 image_center_ w-100\">\r\n                                      <div\r\n                                        style={{\r\n                                          position: \"relative\",\r\n                                          display: \"inline-block\",\r\n                                        }}\r\n                                        className=\"d-flex justify-content-end align-items-end gap-3 w-100\"\r\n                                      >\r\n                                        <button\r\n                                          className=\"remove_mess\"\r\n                                          onClick={() => toggleMenu(index)}\r\n                                        >\r\n                                          <HiDotsVertical />\r\n                                        </button>\r\n\r\n                                        {/* Popup menu */}\r\n                                        {showMenu === index && (\r\n                                          <ul className=\"popup-menu w-fit\">\r\n                                            <li\r\n                                              onClick={() =>\r\n                                                handledeletebtn(post.url)\r\n                                              }\r\n                                            >\r\n                                              {t(\"delete\")}\r\n                                            </li>\r\n                                            <li\r\n                                              onClick={() =>\r\n                                                handlemovetobtn(post.url)\r\n                                              }\r\n                                            >\r\n                                              {t(\"MOve_to\")}\r\n                                            </li>\r\n                                            <li\r\n                                              onClick={() =>\r\n                                                handlecoverphoto(post.url)\r\n                                              }\r\n                                            >\r\n                                              {t(\"Cover_photo\")}\r\n                                            </li>\r\n                                          </ul>\r\n                                        )}\r\n                                      </div>\r\n                                    </div>\r\n                                  )}\r\n                                </>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      ))\r\n                    ) : (\r\n                      // If no media available\r\n                      <p>{`${t(\"No_avalibale_media\")}`}.</p>\r\n                    )}\r\n                  </div>\r\n                </TabPanel>\r\n                {/* <TabPanel>\r\n                  <div className=\"row gy-4\">\r\n                    {mediaVideos.length > 0 ? (\r\n                      mediaVideos.map((post, index) => (\r\n                        <div className=\"col-md-3\" key={index}>\r\n                          <div className=\"d-flex flex-column gap-2\">\r\n                            <div className=\"ggimagebox ofit\">\r\n                              <video\r\n                                onClick={() => openModal(mediaVideos, index)} // Pass media array & index\r\n                                controls\r\n                                alt=\"video\"\r\n                              >\r\n                                <source src={post.url} type=\"video/mp4\" />\r\n                                {`${t(\"Your_browser_does\")}`}\r\n                              </video>\r\n                              {userLogin.id === userId && (\r\n                                <div className=\"d-flex flex-column gap-3 image_center_\">\r\n                                  <div\r\n                                    style={{\r\n                                      position: \"relative\",\r\n                                      display: \"inline-block\",\r\n                                    }}\r\n                                  >\r\n                                    <button\r\n                                      className=\"remove_mess\"\r\n                                      onClick={() => toggleMenu(index)}\r\n                                    >\r\n                                      <HiDotsVertical />\r\n                                    </button>\r\n\r\n                                    {showMenu === index && (\r\n                                      <ul className=\"popup-menu w-fit\">\r\n                                        <li\r\n                                          onClick={() =>\r\n                                            handledeletebtn(post.url)\r\n                                          }\r\n                                        >\r\n                                          {\" \"}\r\n                                          {t(\"delete\")}\r\n                                        </li>\r\n                                        <li\r\n                                          onClick={() =>\r\n                                            handlemovetobtn(post.url)\r\n                                          }\r\n                                        >\r\n                                          {t(\"MOve_to\")}\r\n                                        </li>\r\n                                      </ul>\r\n                                    )}\r\n                                  </div>\r\n                                </div>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      ))\r\n                    ) : (\r\n                      <p>{`${t(\"No_avalibale_media\")}`}.</p>\r\n                    )}\r\n                  </div>\r\n                </TabPanel> */}\r\n                <TabPanel>\r\n                  <div className=\"row gy-4\">\r\n                    {\r\n                      !viewalbum && albumimages.length > 0\r\n                        ? albumimages.map((album, index) => (\r\n                            <div className=\"col-md-3\" key={index}>\r\n                              <div className=\"d-flex flex-column gap-2\">\r\n                                <div className=\"ggimagebox ofit\">\r\n                                  <img\r\n                                    src={album.img} // You can choose to show the first image as a sample\r\n                                    alt=\"Media\"\r\n                                    onClick={() =>\r\n                                      getallmedia(album.album_id, index)\r\n                                    } // Pass media array & index\r\n                                    className=\"hover-shadow\"\r\n                                  />\r\n                                  <span>\r\n                                    {album.album_name} ({album.media_count})\r\n                                  </span>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          ))\r\n                        : !viewalbum && <p>{`${t(\"No_avalibale_media\")}`}.</p> // Show message when viewalbum is true and no media is available\r\n                    }\r\n\r\n                    {viewalbum &&\r\n                      (isallmedia.length > 0 ? (\r\n                        isallmedia.map((album, albumIndex) =>\r\n                          album.mediaItems.length > 0 ? (\r\n                            album.mediaItems.map((media, mediaIndex) => (\r\n                              <div\r\n                                className=\"col-md-3\"\r\n                                key={`${albumIndex}-${mediaIndex}`}\r\n                              >\r\n                                <div className=\"d-flex flex-column gap-2\">\r\n                                  <div className=\"ggimagebox ofit\">\r\n                                    {media.match(\r\n                                      /\\.(mp4|mov|avi|mkv|webm|ogg|flv|3gp|mkv|webm)$/i\r\n                                    ) ? (\r\n                                      <video\r\n                                        controls\r\n                                        onClick={\r\n                                          () =>\r\n                                            openModal(\r\n                                              album.mediaItems,\r\n                                              mediaIndex\r\n                                            ) // Pass the media array & index\r\n                                        }\r\n                                        className=\"hover-shadow\"\r\n                                      >\r\n                                        <source src={media} type=\"video/mp4\" />\r\n                                        {`${t(\"Your_browser_does\")}`}\r\n                                      </video>\r\n                                    ) : (\r\n                                      <img\r\n                                        src={media} // Display the image\r\n                                        alt=\"Media\"\r\n                                        onClick={\r\n                                          () =>\r\n                                            openModal(\r\n                                              album.mediaItems,\r\n                                              mediaIndex\r\n                                            ) // Pass the media array & index\r\n                                        }\r\n                                        className=\"hover-shadow\"\r\n                                      />\r\n                                    )}\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            ))\r\n                          ) : (\r\n                            <p>{`${t(\"No_avalibale_media\")}`}.</p>\r\n                          )\r\n                        )\r\n                      ) : (\r\n                        <p>{`${t(\"No_avalibale_media\")}`}.</p>\r\n                      ))}\r\n                  </div>\r\n                </TabPanel>\r\n              </Tabs>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      {/* pop up code */}\r\n      {modalOpen && (\r\n        <div id=\"myModal\" className=\"modalgg\">\r\n          <span className=\"close cursor\" onClick={() => setModalOpen(false)}>\r\n            &times;\r\n          </span>\r\n          <div className=\"modal-content\">\r\n            {isGrouppost.length > 0 ? (\r\n              isGrouppost.map((post, index) => (\r\n                <div\r\n                  className=\"mySlides\"\r\n                  style={{\r\n                    display: currentSlideIndex === index ? \"block\" : \"none\",\r\n                  }}\r\n                  key={index}\r\n                >\r\n                  <div className=\"numbertext\">\r\n                    {index + 1} / {isGrouppost.length}\r\n                  </div>\r\n\r\n                  {post.match(/\\.(jpeg|jpg|gif|png|webp|bmp|svg)$/i) ? (\r\n                    <img src={post} alt=\"img\" />\r\n                  ) : post.match(/\\.(mp4|mov|avi|mkv|webm|ogg|flv|3gp)$/i) ? (\r\n                    <video controls>\r\n                      <source src={post} type=\"video/mp4\" />\r\n                      {t(\"Your_browser_does\")}\r\n                    </video>\r\n                  ) : null}\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <p>{t(\"Noresult\")}</p>\r\n            )}\r\n\r\n            {/* Navigation Arrows */}\r\n            <a\r\n              className=\"prev\"\r\n              onClick={() =>\r\n                setCurrentSlideIndex((prev) =>\r\n                  prev === 0 ? isGrouppost.length - 1 : prev - 1\r\n                )\r\n              }\r\n            >\r\n              &#10094;\r\n            </a>\r\n            <a\r\n              className=\"next\"\r\n              onClick={() =>\r\n                setCurrentSlideIndex((prev) =>\r\n                  prev === isGrouppost.length - 1 ? 0 : prev + 1\r\n                )\r\n              }\r\n            >\r\n              &#10095;\r\n            </a>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <Modal\r\n        show={opemModalupload}\r\n        className=\"edit_admin\"\r\n        onHide={handleModalClose}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title className=\"textcolor\">{t(\"Upload\")}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <form onSubmit={handleSubmitupload}>\r\n            <div className=\"mb-3\">\r\n              <div className=\"uploadfile rel bgload\">\r\n                <p className=\"pb-2 text-dark\">{t(\"select_one_more\")}</p>\r\n                <input\r\n                  type=\"file\"\r\n                  name=\"file\"\r\n                  required\r\n                  accept=\"image/*,video/*\"\r\n                  multiple\r\n                  onChange={handleFileChange}\r\n                  className=\"fileload\"\r\n                  ref={fileInputRef}\r\n                />\r\n                {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n                <div className=\"inload\" style={{ height: \"50px\" }}>\r\n                  <div className=\"d-flex gap-3 align-items-center\">\r\n                    {images !== null && (\r\n                      <>\r\n                        {images.map((file, index) => (\r\n                          <div className=\"upimage rel\" key={index}>\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"preremovBtn\"\r\n                              onClick={() => removeFile(index)}\r\n                            >\r\n                              X\r\n                            </button>\r\n                            <div className=\"inimag ofit\">\r\n                              {file.type.startsWith(\"image/\") ? (\r\n                                <img\r\n                                  src={URL.createObjectURL(file)}\r\n                                  alt={file.name}\r\n                                />\r\n                              ) : (\r\n                                <video width=\"160\" height=\"120\" controls>\r\n                                  <source\r\n                                    src={URL.createObjectURL(file)}\r\n                                    type={file.type}\r\n                                  />\r\n                                </video>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                      </>\r\n                    )}\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                      <BsCloudUpload style={{ fontSize: \"24px\" }} />\r\n                      <h3\r\n                        className=\"m-0 text-dark\"\r\n                        style={{ fontSize: \"14px\" }}\r\n                      >\r\n                        {t(\"upload_image\")}/{t(\"Videos\")}\r\n                      </h3>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <span className=\"text-success\">{successmsg}</span>\r\n            {spinner && (\r\n              <div\r\n                className=\"spinner-border text-success send_load\"\r\n                role=\"status\"\r\n              >\r\n                <span className=\"visually-hidden\">{t(\"loading\")}...</span>\r\n              </div>\r\n            )}\r\n            <Modal.Footer>\r\n              <Button variant=\"secondary\" onClick={handleModalClose}>\r\n                {t(\"Close\")}\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                style={{\r\n                  background: \"#6e75a8\",\r\n                  opacity: !spinnerdis ? 0.1 : 1,\r\n                  pointerEvents: !spinnerdis ? \"none\" : \"auto\",\r\n                }}\r\n                className=\"\"\r\n              >\r\n                {t(\"Upload\")}\r\n              </Button>\r\n            </Modal.Footer>\r\n          </form>\r\n        </Modal.Body>\r\n      </Modal>\r\n      <Modal\r\n        show={opemModalmove}\r\n        className=\"edit_admin\"\r\n        onHide={handleModalClose}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title className=\"textcolor\"> {t(\"Upload\")}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <form\r\n            onSubmit={handleSubmitmove}\r\n            method=\"post\"\r\n            action=\"javascript:void(0)\"\r\n          >\r\n            <div className=\"row g-3\">\r\n              {\" \"}\r\n              {/* Added spacing between rows */}\r\n              <div className=\"col-md-12\">\r\n                <label className=\"stextlabel text-dark\">\r\n                  {t(\"AlbumNameFrom\")}{\" \"}\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  disabled\r\n                  name=\"album_name\"\r\n                  value={mainAlbumname}\r\n                  className=\"form-control\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"col-md-12\">\r\n                <label className=\"stextlabel text-dark\">{t(\"MOve_to\")} *</label>\r\n                <select\r\n                  required\r\n                  className=\"form-control\"\r\n                  onChange={handlechooseId}\r\n                  name=\"move_to\"\r\n                >\r\n                  <option value=\"\">--Select--</option>\r\n                  {albumnameMoveto.map((album, index) => (\r\n                    <option key={index} value={album.id}>\r\n                      {album.name}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            </div>\r\n\r\n            <span className=\"text-success\">{successmsg}</span>\r\n            {spinner && (\r\n              <div\r\n                className=\"spinner-border text-success send_load\"\r\n                role=\"status\"\r\n              >\r\n                <span className=\"visually-hidden\">{t(\"loading\")}...</span>\r\n              </div>\r\n            )}\r\n            <Modal.Footer>\r\n              <Button variant=\"secondary\" onClick={handleModalClose}>\r\n                {t(\"Close\")}\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                style={{\r\n                  background: \"#6e75a8\",\r\n                }}\r\n                className=\"\"\r\n              >\r\n                {t(\"Move\")}\r\n              </Button>\r\n            </Modal.Footer>\r\n          </form>\r\n        </Modal.Body>\r\n      </Modal>\r\n      {/* pop up code */}\r\n      <Footer />\r\n      <UserPhotoLikeComment\r\n        isOpen1={isPopupOpen11}\r\n        onClose1={closePopup11}\r\n        PopupData={PopupData}\r\n        PopupDatafile={PopupDatafile}\r\n        UserPhotoCommetss={UserPhotoCommetss}\r\n        UserAlbumId={UserAlbumId}\r\n        getfavalbum={getfavalbum}\r\n        goToNext={goToNext}\r\n        goToPrevious={goToPrevious}\r\n        mediaImages={mediaImages} // Pass mediaImages\r\n        currentIndex={currentIndex} // Pass currentIndex\r\n        setCurrentIndex={setCurrentIndex} // Pass setter if updating in child\r\n        openModalLikeComment={openModalLikeComment} // Pass to update popup\r\n        refreshpost={refreshpost}\r\n        getfavrefresh={getfavrefresh}\r\n      />\r\n    </>\r\n  );\r\n}\r\n"],"names":["Previewalbum","navigate","useNavigate","showPopSuccess","setShowPopSuccess","useState","successPopMessage","setPopsuccessMessage","selectedId","setSelectedId","movepostdata","setmovepostdata","mainAlbumname","setmainAlbumname","albumnameMoveto","setalbumnameMoveto","opemModalmove","setopemModalmove","spinner","setspinner","spinnerdis","setspinnerdis","successmsg","setsuccessmsg","mainId","setmainId","deleteMessage","setdeleteMessage","isPopupOpen_delete","setisPopupOpen_delete","viewalbum","setviewalbum","isallmedia","setallmedia","modalOpen","setModalOpen","currentSlideIndex","setCurrentSlideIndex","isGrouppost","setIsGrouppost","albumimages","setAlbumimages","mediaImages","setmediaImages","mediaVideos","setmediaVideos","LoginData","setLoginData","opemModalupload","setopemModalupload","albumId","setalbumId","Albumname","setAlbumname","error","setError","images","setImages","userId","setuserId","UserAlbumId","setUserAlbumId","openFile","setopenFile","id","image_url","useParams","currentIndex","setCurrentIndex","decodeURIComponent","storedUsername","localStorage","getItem","userLogin","JSON","parse","useEffect","document","body","style","overflowY","apiUrl","getprivatemediaalbum","async","formData","user_id","album_id","respo","axios","post","headers","Accept","data","results","length","m_id","name","videos","media","forEach","item","mediaArray","Array","isArray","mediaUrl","mediaObj","url","type","cover_image","push","console","err","response","request","index","findIndex","log","openModalLikeComment","replace","openModal","t","useTranslation","savedLanguage","i18n","language","changeLanguage","handledeletebtn","idd","handlecoverphoto","coverphoto","urlpost","setShowMenu","setTimeout","message","handlemovetobtn","res","handleModalClose","fileInputRef","useRef","showMenu","toggleMenu","PopupData","setPopupData","PopupDatafile","setPopupDatafile","isPopupOpen11","setIsPopupOpen11","UserPhotoCommetss","setUserPhotoCommetss","openPopup11","file","datacheck","matched","getUseralbumsComments","album","comments","_jsxs","_Fragment","children","_jsx","Headertwo","SuccessPop","AlertDelete","isOpen1","onClose1","closePopup_delete","onReturnSent","image","handledeletebtnn","className","Tabs","TabList","Tab","onClick","handleupload","TabPanel","map","MediaRenderer","position","display","title","IconStarFilled","HiDotsVertical","src","img","alt","updatedMedia","e","mediaItems","filter","match","getallmedia","album_name","media_count","albumIndex","mediaIndex","controls","prev","Modal","show","onHide","Header","closeButton","Title","Body","onSubmit","preventDefault","alert","FormData","append","required","accept","multiple","onChange","selectedFiles","target","files","validFiles","fileError","from","fileType","startsWith","size","ref","color","height","updatedImages","_","i","current","value","removeFile","URL","createObjectURL","width","BsCloudUpload","fontSize","role","Footer","Button","variant","background","opacity","pointerEvents","removeid","method","action","disabled","event","UserPhotoLikeComment","closePopup11","getfavalbum","goToNext","nextIndex","nextMedia","goToPrevious","prevIndex","prevMedia","refreshpost","window","location","reload","getfavrefresh"],"sourceRoot":""}