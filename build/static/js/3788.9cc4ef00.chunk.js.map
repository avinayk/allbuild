{"version":3,"file":"static/js/3788.9cc4ef00.chunk.js","mappings":"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A,EAAAA,YAAU,KACR,MAAMmM,EAAiBvB,IACH,eAAdA,EAAMwB,IACR3D,IACuB,cAAdmC,EAAMwB,KACf1D,GACF,EAMF,OAHA2D,OAAOC,iBAAiB,UAAWH,GAG5B,KACLE,OAAOE,oBAAoB,UAAWJ,EAAc,CACrD,GACA,CAAC1D,EAAsBC,IAG1B,MAAM8D,IAAoBT,GAASxE,QAAUuC,EAmBvC2C,GAAkB,CACtB,OACA,WACA,WACA,MACA,WACA,UACA,UACA,QACA,SACA,WACA,gBACA,SACA,WACA,eACA,mBACA,sBACA,OACA,aACA,OACA,OACA,SACA,OACA,SACA,UACA,OACA,YACA,WACA,WACA,WACA,UACA,OACA,SACA,gBACA,eACA,OACA,SACA,UACA,aACA,YACA,WACA,WACA,UACA,UACA,YACA,YACA,WACA,YACA,YACA,UACA,WACA,WACA,UACA,eACA,aACA,sBACA,kBACA,yBACA,aACA,OACA,gBACA,gBACA,eACA,QACA,QACA,YACA,OACA,QACA,QACA,OACA,WACA,QACA,iBACA,aACA,eACA,OACA,iBACA,iBACA,UACA,cACA,OACA,UAEIC,GAAmBpM,UAIvB,GAHIqM,EAAEC,gBAAgBD,EAAEC,iBACxB3M,QAAQC,IAAIyI,GACZuD,IAAW,GACM,UAAbvD,EAAsB,CACxB,IAAIjI,EAAW,CACb8K,YAAamB,EAAEnB,aAAemB,EAAEE,OAAOrB,YAAYsB,MACnD5B,SAAUyB,EAAE1B,YAAc0B,EAAEE,OAAO5B,WAAW6B,MAC9CnM,QAASsH,EAAUnH,GACnB6H,SAAUA,GAEZ,UACoB3H,EAAAA,EAAMC,KACtBoB,GAAS,6BACT3B,EACA,CACEQ,QAAS,CACPC,OAAQ,mBACR,eAAgB,sBAKtB+K,IAAW,GACXF,GAAY,IACZ5D,IACAkB,EAAWiB,QAAQC,eAAe,CAAEuC,SAAU,UAChD,CAAE,MAAOzL,GAEHA,EAAIC,WACGD,EAAIE,QACbvB,QAAQ4D,MAAM,gBAAiBvC,EAAIE,SAEnCvB,QAAQ4D,MAAM,iBAAkBvC,EAAIwF,SAExC,CACF,CACA,GAAiB,UAAb6B,EAAsB,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","sources":["components/Rightsidebar.jsx","components/Dashboardnotification.jsx","components/UsergalleryDashboard.jsx","pages/Dashboard.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport user from \"../assets/images/pic.png\";\nimport axios from \"axios\";\nimport { useTranslation } from \"react-i18next\";\nimport i18n from \"../i18n\"; // Make sure i18n is imported properly\nexport const Rightsidebar = ({ refreshRight }) => {\n  var apiUrl2 = \"https://backend.amourette.no/api/profile/\";\n  var apiUrl = \"https://backend.amourette.no/api/members/\";\n  const [isshowOnline, setshowOnline] = useState(\"0\");\n  const [isshowMember, setshowMember] = useState(\"0\");\n  const [isshowUser, setshowUser] = useState(\"0\");\n  const [isshowNewMember, setshowMemberNew] = useState(\"0\");\n\n  const [isshowImages, setshowImages] = useState(\"0\");\n  const [isshowGroup, setshowGroups] = useState(\"0\");\n  const [isshowEvent, setshowEvents] = useState(\"0\");\n  const [isshowVisit, setshowVisit] = useState([]);\n  const [notificationsdetail, setnotificationsdetail] = useState([]);\n  useEffect(() => {\n    console.log(\"right\", refreshRight);\n    gettotalGroups();\n    gettotalEvents();\n    gettotalImages();\n  }, [refreshRight]);\n  useEffect(() => {\n    gettotalGroups();\n    gettotalEvents();\n    gettotalImages();\n    //gettotalOnline();\n  }, []);\n  const gettotalGroups = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = JSON.parse(storedUsername);\n    let formData = {\n      user_id: userLogin.id,\n    };\n\n    try {\n      const res = await axios.post(apiUrl2 + \"gettotalGroups\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      var respo = res.data;\n      //console.log(respo);\n      setshowGroups(respo.groupsCount);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        //console.error(\"Request data:\", err.request);\n      } else {\n        // console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const gettotalEvents = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = JSON.parse(storedUsername);\n    let formData = {\n      user_id: userLogin.id,\n    };\n\n    try {\n      const res = await axios.post(apiUrl2 + \"gettotalEvents\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      var respo = res.data;\n      // console.log(respo);\n      setshowEvents(respo.eventsCount);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        //console.error(\"Request data:\", err.request);\n      } else {\n        // console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const gettotalImages = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = JSON.parse(storedUsername);\n    let formData = {\n      user_id: userLogin.id,\n    };\n\n    try {\n      const res = await axios.post(apiUrl2 + \"gettotalImages\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      var respo = res.data;\n      // console.log(respo);\n      setshowImages(respo.imagesCount);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        //console.error(\"Request data:\", err.request);\n      } else {\n        // console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  useEffect(() => {\n    getvisitprofile();\n  }, []);\n  const getvisitprofile = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = JSON.parse(storedUsername);\n    let formData = {\n      user_id: userLogin.id,\n    };\n\n    try {\n      const res = await axios.post(apiUrl2 + \"getvisitprofile\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      var respo = res.data.result;\n      setshowVisit(respo);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        //console.error(\"Request data:\", err.request);\n      } else {\n        // console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  useEffect(() => {\n    const intervalId = setInterval(async () => {\n      gettotalOnline();\n      gettotalGroups();\n      gettotalEvents();\n      gettotalImages();\n      gettotalNewMembers();\n      gettotalMembers();\n    }, 1500); // Run every 60 seconds\n\n    // Cleanup the interval when the component unmounts\n    return () => clearInterval(intervalId);\n  }, []);\n\n  const gettotalOnline = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = JSON.parse(storedUsername);\n    let formData = {\n      user_id: userLogin.id,\n    };\n\n    try {\n      const res = await axios.post(apiUrl2 + \"gettotalOnline\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      var respo = res.data;\n      // setshowOnline(respo.onlineCount);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        //console.error(\"Request data:\", err.request);\n      } else {\n        // console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  useEffect(() => {\n    gettotalMembers();\n    gettotaluserss();\n  }, []);\n  const gettotalMembers = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = JSON.parse(storedUsername);\n    let formData = {\n      user_id: userLogin.id,\n      looking_forr: [],\n    };\n\n    try {\n      const res = await axios.post(apiUrl + \"getAllMembersPage\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      var respo = res.data.results;\n      console.log(respo);\n      if (respo.length > 0) {\n        const onlineActiveCount = respo.filter(\n          (item) =>\n            item.online_user === \"Online\" && item.online_user_active === \"Yes\"\n        ).length;\n        setshowOnline(onlineActiveCount);\n\n        const now = new Date();\n        const oneDayAgo = new Date(now.getTime() - 24 * 60 * 60 * 1000); // 1 day ago\n        const sevenDaysAgo = new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000); // 7 days ago\n\n        let totalMembers = respo.length;\n        let last24Hours = 0;\n        let last7Days = 0;\n\n        respo.forEach((user) => {\n          const createdAt = new Date(user.created_at);\n\n          if (createdAt >= oneDayAgo) {\n            last24Hours++;\n          }\n          if (createdAt >= sevenDaysAgo) {\n            last7Days++;\n          }\n        });\n        setshowMemberNew(last24Hours);\n      }\n      setshowMember(respo.length);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        //console.error(\"Request data:\", err.request);\n      } else {\n        // console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const gettotaluserss = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = JSON.parse(storedUsername);\n    let formData = {\n      user_id: userLogin.id,\n    };\n\n    try {\n      const res = await axios.post(apiUrl2 + \"gettotalMembers\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      var respo = res.data;\n      console.log(respo);\n      setshowUser(respo.memberCount);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        //console.error(\"Request data:\", err.request);\n      } else {\n        // console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n\n  useEffect(() => {\n    gettotalNewMembers();\n  }, []);\n  const gettotalNewMembers = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = JSON.parse(storedUsername);\n    let formData = {\n      user_id: userLogin.id,\n    };\n\n    try {\n      const res = await axios.post(apiUrl2 + \"gettotalNewMembers\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      var respo = res.data;\n      var ress = respo.last7Days;\n      //setshowMemberNew(ress);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        //console.error(\"Request data:\", err.request);\n      } else {\n        // console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n\n  const formateTime = (dateString) => {\n    if (!dateString) return null;\n\n    // Parse the date as UTC\n    const postDate = new Date(dateString);\n    if (isNaN(postDate.getTime())) {\n      console.error(\"Invalid date:\", dateString);\n      return \"Invalid date\";\n    }\n\n    // Get the current time in UTC\n    const now = new Date();\n\n    // Adjust the postDate by subtracting 1 hour (3600000ms)\n    const adjustedPostDate = new Date(postDate.getTime() - 3600000);\n\n    // Convert postDate to Europe/Oslo time correctly\n    const osloPostTime = new Intl.DateTimeFormat(\"en-GB\", {\n      timeZone: \"Europe/Oslo\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      hour12: false, // Ensures 24-hour format\n    }).format(adjustedPostDate);\n\n    // Calculate time difference in seconds, minutes, hours, days\n    const timeDiff = now.getTime() - postDate.getTime();\n    const seconds = Math.floor(timeDiff / 1000);\n    const minutes = Math.floor(seconds / 60);\n    const hours = Math.floor(minutes / 60);\n    const days = Math.floor(hours / 24);\n    const weeks = Math.floor(days / 7);\n    const months = Math.floor(days / 30);\n    const years = Math.floor(days / 365);\n\n    // Generate formatted output based on the difference\n    if (minutes < 60) return `${osloPostTime}`;\n    if (hours < 24) return `${osloPostTime}`;\n    if (days === 1) return `Yesterday at ${osloPostTime}`;\n    if (days < 7) return `${days}d  ${osloPostTime}`;\n    if (weeks < 4) return `${weeks}w  ${osloPostTime}`;\n    if (months < 12) return `${months}m  ${osloPostTime}`;\n    return `${years}y  ${osloPostTime}`;\n  };\n\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem(\"language\") || \"en\"; // Default to 'en' if no language is saved\n    // console.log(\"language\");\n    // console.log(savedLanguage);\n\n    // Change the language if it's not already the current language\n    if (i18n.language !== savedLanguage) {\n      i18n.changeLanguage(savedLanguage);\n    }\n\n    //console.log(t(\"LeftMenu_yourprofile\")); // Testing translation\n  }, [i18n, t]);\n  return (\n    <>\n      <div className=\"d-flex flex-column leftbar\">\n        <div className=\"d-flex flex-column  visitedlast\">\n          <h5 className=\"grouptitle mb-3\">{t(\"RightMenu_LastVisited\")}</h5>\n          <div className=\"d-flex flex-column gap-3 scroll_bar visitscroll\">\n            {isshowVisit.length === 0 ? (\n              <p>{t(\"RightMenu_NovisitFound\")}.</p>\n            ) : (\n              isshowVisit.map((visit, index) => (\n                <Link\n                  to={`/friend/${visit.uid}`}\n                  key={index}\n                  className=\"d-flex gap-3 align-items-center listoficons\"\n                >\n                  <div className=\"flex-shrink-0\">\n                    <div className=\"userpic ofit rounded-circle overflow-hidden\">\n                      <img\n                        src={\n                          visit.profile_image\n                            ? visit.profile_image\n                            : require(\"../assets/images/thumb.jpg\")\n                        }\n                        alt=\"userpic\"\n                      />\n                    </div>\n                  </div>\n                  <div className=\"flex-grow-1\">\n                    <h4>\n                      <strong>{visit.username}</strong>{\" \"}\n                    </h4>\n                    <h6>{formateTime(visit.date)}</h6>\n                  </div>\n                </Link>\n              ))\n            )}\n          </div>\n          {/* <div className=\"viewmore d-block mt-2\">\n            <Link to=\"/\">View more</Link>\n          </div> */}\n        </div>\n        <hr className=\"linehr\" />\n        <div className=\"d-flex flex-column gap-2\">\n          <h5 className=\"grouptitle mb-3\">{t(\"RightMenu_Statistics\")}</h5>\n          <div className=\"d-flex flex-column gap-3 listnumber\">\n            <div className=\"d-flex justify-content-between\">\n              <h4>{t(\"RightMenu_Onlinenow\")}</h4>\n              <h4>{isshowOnline}</h4>\n            </div>\n            <div className=\"d-flex justify-content-between\">\n              <h4>{t(\"RightMenu_Newmembers\")}</h4>\n              <h4>{isshowNewMember}</h4>\n            </div>\n            <div className=\"d-flex justify-content-between\">\n              <h4>{t(\"RightMenu_Images\")}</h4>\n              <h4>{isshowImages}</h4>\n            </div>\n            <div className=\"d-flex justify-content-between\">\n              <h4>{t(\"RightMenu_Groups\")}</h4>\n              <h4>{isshowGroup}</h4>\n            </div>\n            <div className=\"d-flex justify-content-between\">\n              <h4>{t(\"RightMenu_Eventsandparties\")}</h4>\n              <h4>{isshowEvent}</h4>\n            </div>\n            <div className=\"d-flex justify-content-between\">\n              <h4>{t(\"RightMenu_Membersintotal\")}</h4>\n              <h4>{isshowMember}</h4>\n            </div>\n            <div className=\"d-flex justify-content-between\">\n              <h4>{t(\"Users\")}</h4>\n              <h4>{isshowUser}</h4>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport pe1 from \"../assets/images/pic.png\";\nimport axios from \"axios\";\nimport { SlOptions } from \"react-icons/sl\";\n\nimport userpic from \"../assets/images/pic.png\";\nfunction Dashboardnotification({ refresh }) {\n  var apiUrlnoti = \"https://backend.amourette.no/api/notifications/\";\n  var apiUrl = \"https://backend.amourette.no/api/members/\";\n  const [AllfriendId, setAllfriendId] = useState([]);\n  const [notificationsdetail, setnotificationsdetail] = useState([]);\n  useEffect(() => {\n    const getAllfriends = async () => {\n      const storedUsername = localStorage.getItem(\"userLogin\");\n      const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n      let formData = {\n        user_id: userLogin.id,\n      };\n      try {\n        const res = await axios.post(apiUrl + \"getAllfriends\", formData, {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        });\n        var respo = res.data.results;\n        const friendUserIds = respo.map((friend) => friend.id);\n        setAllfriendId(friendUserIds);\n        const galleries = await getnotifications(friendUserIds);\n      } catch (err) {\n        // Enhanced error handling\n        if (err.response) {\n        } else if (err.request) {\n          console.error(\"Request data:\", err.request);\n        } else {\n          console.error(\"Error message:\", err.message);\n        }\n      }\n    };\n    getAllfriends();\n  }, [refresh, notificationsdetail]);\n\n  const getnotifications = async (userIds) => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n\n    const userIdsWithSelf = [...userIds, userLogin.id]; // e.g., [3, 1, 5]\n    const userIdsString = userIdsWithSelf.join(\", \");\n    let formData = {\n      user_ids: userIdsString, // Sending as a string for the query\n      user_id: userLogin.id,\n    };\n    try {\n      const res = await axios.post(\n        apiUrlnoti + \"getnotificationsdashboard\",\n        formData,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        }\n      );\n      var respo = res.data.results;\n      setnotificationsdetail(respo);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const formateTime = (dateString) => {\n    if (!dateString) return null;\n\n    // Parse the date as UTC\n    const postDate = new Date(dateString);\n    if (isNaN(postDate.getTime())) {\n      console.error(\"Invalid date:\", dateString);\n      return \"Invalid date\";\n    }\n\n    // Get the current time in UTC\n    const now = new Date();\n\n    // Adjust the postDate by subtracting 1 hour (3600000ms)\n    const adjustedPostDate = new Date(postDate.getTime() - 3600000);\n\n    // Convert postDate to Europe/Oslo time correctly\n    const osloPostTime = new Intl.DateTimeFormat(\"en-GB\", {\n      timeZone: \"Europe/Oslo\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      hour12: false, // Ensures 24-hour format\n    }).format(adjustedPostDate);\n\n    // Calculate time difference in seconds, minutes, hours, days\n    const timeDiff = now.getTime() - postDate.getTime();\n    const seconds = Math.floor(timeDiff / 1000);\n    const minutes = Math.floor(seconds / 60);\n    const hours = Math.floor(minutes / 60);\n    const days = Math.floor(hours / 24);\n    const weeks = Math.floor(days / 7);\n    const months = Math.floor(days / 30);\n    const years = Math.floor(days / 365);\n\n    // Generate formatted output based on the difference\n    if (minutes < 60) return `${osloPostTime}`;\n    if (hours < 24) return `${osloPostTime}`;\n    if (days === 1) return `Yesterday at ${osloPostTime}`;\n    if (days < 7) return `${days}d  ${osloPostTime}`;\n    if (weeks < 4) return `${weeks}w  ${osloPostTime}`;\n    if (months < 12) return `${months}m  ${osloPostTime}`;\n    return `${years}y  ${osloPostTime}`;\n  };\n  return (\n    <>\n      <div className=\"d-flex flex-column gap-4 \">\n        <div className=\"d-flex flex-column gap-3\">\n          {notificationsdetail.length === 0 ? ( // Check if there are no notifications\n            <p></p>\n          ) : (\n            <div className=\"d-flex flex-column gap-3\">\n              {notificationsdetail.map((notification, index) => (\n                <div className=\"postblock d-flex flex-column rounded-4 overflow-hidden h-100\">\n                  <div className=\"d-flex justify-content-between align-items-center h-100 px-3 py-1\">\n                    <div className=\"flex-grow-1\">\n                      <Link\n                        to={\n                          notification.link_href &&\n                          notification.link_href.trim() !== \"\"\n                            ? `${notification.link_href}`\n                            : \"#\"\n                        }\n                        className=\"d-flex gap-2 align-items-center\"\n                      >\n                        <div className=\"flex-shrink-0\">\n                          <div className=\"urpic ofit rounded-circle overflow-hidden\">\n                            <img\n                              src={\n                                notification.status === \"Admin\"\n                                  ? require(\"../assets/images/thumb.jpg\")\n                                  : notification.recipient_profile_image || pe1\n                              }\n                              alt=\"userpic\"\n                            />\n                          </div>\n                        </div>\n                        <div className=\"flex-grow-1\">\n                          <h4>\n                            {notification.status === \"User\" && (\n                              <strong>{notification.recipient_name} </strong>\n                            )}\n                            {notification.status === \"Admin\" && (\n                              <strong>Admin </strong>\n                            )}\n                            {notification.message}\n                          </h4>\n\n                          <h5>{formateTime(notification.date)}</h5>\n                        </div>\n                      </Link>\n                    </div>\n                    {/* <div className=\"flex-shrink-0\">\n                      <button type=\"button\" className=\"btnoption\">\n                        <SlOptions />\n                      </button>\n                    </div> */}\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Dashboardnotification;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport MediaRenderer from \"../components/MediaRenderer\";\nimport { Link } from \"react-router-dom\";\nimport { FaRegHeart, FaHeart } from \"react-icons/fa\";\nimport axios from \"axios\";\nimport { useTranslation } from \"react-i18next\";\nimport i18n from \"../i18n\";\nimport { FaChevronLeft } from \"react-icons/fa\";\nimport { FaChevronRight } from \"react-icons/fa\";\nimport EmojiPicker from \"emoji-picker-react\";\nimport { AlertDelete } from \"../components/AlertDelete\";\nimport SuccessPop from \"../components/SuccessPop\";\nexport const UsergalleryDashboard = ({\n  isOpen1,\n  onClose1,\n  children,\n  seperateGallerydetail,\n  UserDetail,\n  LoginData,\n  getUserfav,\n  GalleryCommets,\n  getCommentPost,\n  GalleryIdDetailGet,\n  galleryData,\n  previousId,\n  nextId,\n  getgallerydetialnext,\n  getgallerydetialprev,\n  postType,\n  postdetail,\n  refreshdiv,\n}) => {\n  const [successPopMessage, setPopsuccessMessage] = useState(\"\");\n  const [showPopSuccess, setShowPopSuccess] = useState(false);\n  const [isPopupOpen_delete, setisPopupOpen_delete] = useState(false);\n  const [deleteMessage, setdeleteMessage] = useState(\"\");\n  const chatEndRef = useRef(null);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [isparamVl, setparamVl] = useState(seperateGallerydetail);\n  const [isgallid, setgallid] = useState(GalleryIdDetailGet);\n  const [restr_message, setrestr_message] = useState(false);\n  const [GalleryCommetss, setGalleryCommetss] = useState(GalleryCommets);\n  const { t } = useTranslation();\n  const [input, setInput] = useState(\"\");\n  const inputRef = useRef(null);\n  const [spinnerlik, setspinnerlik] = useState(false);\n  const storedUsername = localStorage.getItem(\"userLogin\");\n  const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem(\"language\") || \"en\"; // Default to 'en' if no language is saved\n    console.log(\"language\");\n    console.log(savedLanguage);\n\n    // Change the language if it's not already the current language\n    if (i18n.language !== savedLanguage) {\n      i18n.changeLanguage(savedLanguage);\n    }\n  }, [i18n, t]);\n  useEffect(() => {\n    setGalleryCommetss(GalleryCommets);\n    setparamVl(seperateGallerydetail);\n    setgallid(GalleryIdDetailGet);\n    if (chatEndRef.current) {\n      chatEndRef.current.scrollIntoView();\n    }\n  }, [GalleryCommets, seperateGallerydetail, GalleryIdDetailGet]);\n\n  useEffect(() => {\n    const ws = new WebSocket(\"wss://backend.amourette.no\"); // Adjust port if needed\n\n    ws.onmessage = (event) => {\n      try {\n        const receivedMessage = JSON.parse(event.data);\n        let gid = \"\";\n        console.log(postType);\n        if (postType === \"group\") {\n          gid = String(receivedMessage.post_id);\n        } else if (postType === \"gallery\") {\n          gid = String(receivedMessage.gallery_id);\n        } else if (postType === \"forum\") {\n          gid = String(receivedMessage.forum_id);\n        }\n\n        const galleryIdDetail = String(GalleryIdDetailGet); // Convert to string as well\n\n        const log = LoginData.id;\n        console.log(galleryIdDetail, gid);\n        console.log(receivedMessage);\n        // Check if gid matches the expected GalleryIdDetailGet\n        if (galleryIdDetail === gid) {\n          if (receivedMessage.event === \"GalleryLike\") {\n            console.log(receivedMessage);\n            // Update the local state based on the received message\n            setparamVl((prev) => {\n              if (prev.id === receivedMessage.gallery_id) {\n                return {\n                  ...prev,\n                  total_favourites: receivedMessage.total_favourites,\n                  user_favourited:\n                    log === receivedMessage.user_id\n                      ? receivedMessage.user_favourited // Update user_favourited only if IDs match\n                      : prev.user_favourited, // Toggle the favourited state\n                };\n              }\n              return prev;\n            });\n          }\n          if (receivedMessage.event === \"GalleryPost\") {\n            // Update state with the new comment\n            setGalleryCommetss((prevComments) => [\n              ...prevComments,\n              {\n                user_id: receivedMessage.user_id,\n                username: receivedMessage.username,\n                description: receivedMessage.message,\n                profile_image: receivedMessage.profile_image,\n                makeImagePrivate: receivedMessage.makeImagePrivate,\n                date: receivedMessage.date,\n                lastInsertId: receivedMessage.lastInsertId,\n              },\n            ]);\n          }\n          if (receivedMessage.event === \"groupComments\") {\n            console.log(\"uuhhh\");\n            // Update state with the new comment\n            setGalleryCommetss((prevComments) => [\n              ...prevComments,\n              {\n                user_id: receivedMessage.post.user_id,\n                username: receivedMessage.post.comment_user_username,\n                description: receivedMessage.post.description,\n                profile_image: receivedMessage.post.comment_user_profile_image,\n                makeImagePrivate: 0,\n                date: receivedMessage.post.comment_date,\n                lastInsertId: \"\",\n              },\n            ]);\n          }\n          if (receivedMessage.event === \"ForumComments\") {\n            setGalleryCommetss((prevComments) => [\n              ...prevComments,\n              {\n                user_id: receivedMessage.user_id,\n                username: receivedMessage.username,\n                description: receivedMessage.description,\n                profile_image: receivedMessage.profile_image,\n                makeImagePrivate: receivedMessage.makeImagePrivate,\n                date: receivedMessage.date,\n                lastInsertId: receivedMessage.lastInsertId,\n              },\n            ]);\n          }\n        } else {\n        }\n      } catch (error) {\n        console.error(\"Failed to parse WebSocket message:\", error);\n        console.error(\"Raw message:\", event.data);\n      }\n    };\n\n    return () => {\n      ws.close();\n    };\n  }, [LoginData, GalleryIdDetailGet]);\n  //console.log(GalleryCommets);\n  // Ref to the chat container\n  var apiUrl = \"https://backend.amourette.no/api/members/\";\n\n  const [comments, setComments] = useState(\"\");\n  const [spinner, setspinner] = useState(false);\n  const onEmojiClick = (event, emojiObject) => {\n    setInput((prevInput) => prevInput + emojiObject.emoji);\n  };\n\n  const formateTime = (dateString) => {\n    if (!dateString) return null;\n\n    // Parse the date as UTC\n    const postDate = new Date(dateString);\n    if (isNaN(postDate.getTime())) {\n      console.error(\"Invalid date:\", dateString);\n      return \"Invalid date\";\n    }\n\n    // Get the current time in UTC\n    const now = new Date();\n\n    // Adjust the postDate by subtracting 1 hour (3600000ms)\n    const adjustedPostDate = new Date(postDate.getTime() - 3600000);\n\n    // Convert postDate to Europe/Oslo time correctly\n    const osloPostTime = new Intl.DateTimeFormat(\"en-GB\", {\n      timeZone: \"Europe/Oslo\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      hour12: false, // Ensures 24-hour format\n    }).format(adjustedPostDate);\n\n    // Calculate time difference in seconds, minutes, hours, days\n    const timeDiff = now.getTime() - postDate.getTime();\n    const seconds = Math.floor(timeDiff / 1000);\n    const minutes = Math.floor(seconds / 60);\n    const hours = Math.floor(minutes / 60);\n    const days = Math.floor(hours / 24);\n    const weeks = Math.floor(days / 7);\n    const months = Math.floor(days / 30);\n    const years = Math.floor(days / 365);\n\n    // Generate formatted output based on the difference\n    if (minutes < 60) return `${osloPostTime}`;\n    if (hours < 24) return `${osloPostTime}`;\n    if (days === 1) return `Yesterday at ${osloPostTime}`;\n    if (days < 7) return `${days}d  ${osloPostTime}`;\n    if (weeks < 4) return `${weeks}w  ${osloPostTime}`;\n    if (months < 12) return `${months}m  ${osloPostTime}`;\n    return `${years}y  ${osloPostTime}`;\n  };\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      if (event.key === \"ArrowRight\") {\n        getgallerydetialnext(); // Trigger next post\n      } else if (event.key === \"ArrowLeft\") {\n        getgallerydetialprev(); // Trigger previous post\n      }\n    };\n\n    window.addEventListener(\"keydown\", handleKeyDown);\n\n    // Cleanup on unmount\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [getgallerydetialnext, getgallerydetialprev]);\n  // Example usage\n\n  const isButtonDisabled = !comments.trim() || restr_message;\n  const handleCommentChange = (e) => {\n    const inputValue = e.target.value;\n\n    // Update the state with the new text (including emojis)\n    setComments(inputValue);\n\n    // If input is completely empty, remove all text and emojis\n    if (inputValue.trim() === \"\") {\n      setComments(\"\");\n    }\n\n    // Check for restricted words\n    const hasRestrictedWord = restrictedWords.some((word) =>\n      inputValue.toLowerCase().includes(word.toLowerCase())\n    );\n\n    setrestr_message(hasRestrictedWord);\n  };\n  const restrictedWords = [\n    \"arse\",\n    \"arsehead\",\n    \"arsehole\",\n    \"ass\",\n    \"ass hole\",\n    \"asshole\",\n    \"bastard\",\n    \"bitch\",\n    \"bloody\",\n    \"bollocks\",\n    \"brotherfucker\",\n    \"bugger\",\n    \"bullshit\",\n    \"child-fucker\",\n    \"Christ on a bike\",\n    \"Christ on a cracker\",\n    \"cock\",\n    \"cocksucker\",\n    \"crap\",\n    \"cunt\",\n    \"dammit\",\n    \"damn\",\n    \"damned\",\n    \"damn it\",\n    \"dick\",\n    \"dick-head\",\n    \"dickhead\",\n    \"dumb ass\",\n    \"dumb-ass\",\n    \"dumbass\",\n    \"dyke\",\n    \"faggot\",\n    \"father-fucker\",\n    \"fatherfucker\",\n    \"fuck\",\n    \"fucker\",\n    \"fucking\",\n    \"god dammit\",\n    \"goddammit\",\n    \"God damn\",\n    \"god damn\",\n    \"goddamn\",\n    \"Goddamn\",\n    \"goddamned\",\n    \"goddamnit\",\n    \"godsdamn\",\n    \"holy shit\",\n    \"horseshit\",\n    \"in shit\",\n    \"jackarse\",\n    \"jack-ass\",\n    \"jackass\",\n    \"Jesus Christ\",\n    \"Jesus fuck\",\n    \"Jesus Harold Christ\",\n    \"Jesus H. Christ\",\n    \"Jesus, Mary and Joseph\",\n    \"Jesus wept\",\n    \"kike\",\n    \"mother fucker\",\n    \"mother-fucker\",\n    \"motherfucker\",\n    \"nigga\",\n    \"nigra\",\n    \"pigfucker\",\n    \"piss\",\n    \"prick\",\n    \"pussy\",\n    \"shit\",\n    \"shit ass\",\n    \"shite\",\n    \"sibling fucker\",\n    \"sisterfuck\",\n    \"sisterfucker\",\n    \"slut\",\n    \"son of a bitch\",\n    \"son of a whore\",\n    \"spastic\",\n    \"sweet Jesus\",\n    \"twat\",\n    \"wanker\",\n  ];\n  const handlePostSubmit = async (e) => {\n    if (e.preventDefault) e.preventDefault(); // Prevent default only if `e` is an actual event\n    console.log(postType);\n    setspinner(true);\n    if (postType === \"forum\") {\n      let formData = {\n        description: e.description || e.target.description.value,\n        forum_id: e.gallery_id || e.target.gallery_id.value,\n        user_id: LoginData.id,\n        postType: postType,\n      };\n      try {\n        const res = await axios.post(\n          apiUrl + \"forumscommentSaveDashboard\",\n          formData,\n          {\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n            },\n          }\n        );\n        //console.log(res.data);\n        setspinner(false);\n        setComments(\"\");\n        getCommentPost();\n        chatEndRef.current.scrollIntoView({ behavior: \"smooth\" });\n      } catch (err) {\n        // Enhanced error handling\n        if (err.response) {\n        } else if (err.request) {\n          console.error(\"Request data:\", err.request);\n        } else {\n          console.error(\"Error message:\", err.message);\n        }\n      }\n    }\n    if (postType === \"group\") {\n      const apiUrl = \"https://backend.amourette.no/api/groups/\";\n      let formData = {\n        comment: e.description || e.target.description.value,\n        post_id: e.gallery_id || e.target.gallery_id.value,\n        user_id: LoginData.id,\n        postType: postType,\n      };\n      try {\n        const res = await axios.post(\n          apiUrl + \"CreateGroupPostCommentDashboard\",\n          formData,\n          {\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n            },\n          }\n        );\n        //console.log(res.data);\n        setspinner(false);\n        setComments(\"\");\n        getCommentPost();\n        chatEndRef.current.scrollIntoView({ behavior: \"smooth\" });\n      } catch (err) {\n        // Enhanced error handling\n        if (err.response) {\n        } else if (err.request) {\n          console.error(\"Request data:\", err.request);\n        } else {\n          console.error(\"Error message:\", err.message);\n        }\n      }\n    }\n    if (postType === \"gallery\") {\n      let formData = {\n        description: e.description || e.target.description.value,\n        gallery_id: e.gallery_id || e.target.gallery_id.value,\n        user_id: LoginData.id,\n        postType: postType,\n      };\n      try {\n        const res = await axios.post(apiUrl + \"GalleryPostSave\", formData, {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        });\n        //console.log(res.data);\n        setspinner(false);\n        setComments(\"\");\n        getCommentPost();\n        chatEndRef.current.scrollIntoView({ behavior: \"smooth\" });\n      } catch (err) {\n        // Enhanced error handling\n        if (err.response) {\n        } else if (err.request) {\n          console.error(\"Request data:\", err.request);\n        } else {\n          console.error(\"Error message:\", err.message);\n        }\n      }\n    }\n  };\n  const galleryPostLike = async (id, pertype) => {\n    let formData = {\n      user_id: LoginData.id,\n      id: id,\n      pertype: pertype,\n    };\n    console.log(formData);\n    setspinnerlik(true);\n    if (pertype === \"gallery\") {\n      try {\n        const res = await axios.post(apiUrl + \"galleryPostLike\", formData, {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        });\n        setspinnerlik(false);\n        getUserfav(\"\");\n      } catch (err) {\n        // Enhanced error handling\n        if (err.response) {\n        } else if (err.request) {\n          console.error(\"Request data:\", err.request);\n        } else {\n          console.error(\"Error message:\", err.message);\n        }\n      }\n    }\n    if (pertype === \"forum\") {\n      const storedUsername = localStorage.getItem(\"userLogin\");\n      const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n      let formData = {\n        user_id: userLogin.id,\n        id: id,\n      };\n      try {\n        const res = await axios.post(\n          apiUrl + \"forumlikepostforumpage\",\n          formData,\n          {\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        );\n        getUserfav(\"\");\n      } catch (err) {\n        if (err.response) {\n          console.error(\"Response error:\", err.response.data);\n        } else if (err.request) {\n          console.error(\"Request data:\", err.request);\n        } else {\n          console.error(\"Error message:\", err.message);\n        }\n      }\n    }\n    if (pertype === \"group\") {\n      const storedUsername = localStorage.getItem(\"userLogin\");\n      const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n      let formData = {\n        user_id: userLogin.id,\n        id: id,\n      };\n      try {\n        const res = await axios.post(\n          apiUrl + \"grouplikepostgrouppage\",\n          formData,\n          {\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        );\n        getUserfav(\"\");\n      } catch (err) {\n        if (err.response) {\n          console.error(\"Response error:\", err.response.data);\n        } else if (err.request) {\n          console.error(\"Request data:\", err.request);\n        } else {\n          console.error(\"Error message:\", err.message);\n        }\n      }\n    }\n  };\n\n  // Function to handle next image\n  // Function to handle next image\n\n  // Function to handle previous image\n  const prevImage = (id_id) => {\n    getgallerydetialprev(id_id);\n  };\n  const [showPicker, setShowPicker] = useState(false);\n\n  const handleEmojiClick = (emojiObject) => {\n    // Append emoji to the existing text\n    setComments((prevMessage) => prevMessage + emojiObject.emoji);\n    setShowPicker(false);\n\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  };\n  // Update `isparamVl` when `currentIndex` changes\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      if (event.key === \"Escape\") {\n        onClose1(); // Close the popup when Escape is pressed\n      }\n    };\n\n    window.addEventListener(\"keydown\", handleKeyDown);\n\n    // Cleanup the event listener on component unmount\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [onClose1]);\n  const handleKeyDown = (e) => {\n    if (e.key === \"Enter\" && comments.trim() !== \"\") {\n      e.preventDefault();\n\n      handlePostSubmit({\n        description: comments,\n        gallery_id: seperateGallerydetail.id,\n      });\n    }\n  };\n  if (!isOpen1) return null;\n  const handleOverlayClick = (e) => {\n    // Check if the clicked element is the overlay\n    if (e.target.classList.contains(\"popup-overlay\")) {\n      onClose1(); // Close the popup if the overlay is clicked\n    }\n  };\n  const handledeletebtn = () => {\n    setisPopupOpen_delete(true);\n    setdeleteMessage(\"Are you sure? You want to delete this post\");\n  };\n  const closePopup_delete = () => {\n    setisPopupOpen_delete(false);\n  };\n  const refreshpopup = async () => {\n    deletePost();\n  };\n  const deletePost = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let deleteev = {\n      user_id: userLogin.id,\n      id: seperateGallerydetail.id,\n      post_type: postType,\n    };\n    try {\n      const res = await axios.post(apiUrl + \"deletePostDashboard\", deleteev, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      setShowPopSuccess(true);\n      setPopsuccessMessage(\"Post deleted successfully\");\n\n      setisPopupOpen_delete(false);\n      refreshdiv();\n      setTimeout(() => {\n        onClose1();\n        setShowPopSuccess(false);\n      }, 1000);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  //console.log(isparamVl);\n  return (\n    <>\n      <div className=\"popup-overlay\" onClick={handleOverlayClick}>\n        <AlertDelete\n          isOpen1={isPopupOpen_delete}\n          onClose1={closePopup_delete}\n          message={deleteMessage}\n          onReturnSent={refreshpopup}\n        ></AlertDelete>\n        {showPopSuccess && <SuccessPop message={successPopMessage} />}\n        <div className=\"popup-content col-md-10\">\n          <button\n            className=\"close-button\"\n            style={{ zIndex: \"999\" }}\n            onClick={onClose1}\n          >\n            &times; {/* Close button */}\n          </button>\n\n          <div className=\"usergallery_pop  d-flex flex-column gap-1 h-100\">\n            <button\n              className=\"arrow right\"\n              type=\"button\"\n              onClick={getgallerydetialnext}\n            >\n              <FaChevronRight />\n            </button>\n            <button\n              className=\"arrow left\"\n              type=\"button\"\n              onClick={getgallerydetialprev}\n            >\n              <FaChevronLeft />\n            </button>\n            <div className=\"row p-4\">\n              <div className=\"col-lg-7\">\n                <div className=\"position-relative\">\n                  <div className=\"d-block gallery_im1g \">\n                    {isparamVl.image && typeof isparamVl.image === \"string\" ? (\n                      // Check if the URL ends with a valid image extension\n\n                      <MediaRenderer\n                        className=\"w-100 h-100\"\n                        url={isparamVl.image}\n                      />\n                    ) : (\n                      // Fallback when `item.image` is undefined or invalid\n                      <p>{t(\"No_avalibale_media\")}</p>\n                    )}\n                  </div>\n                  {userLogin.id === isparamVl.user_id && (\n                    <div className=\"flex-shrink-0 posttopbtns\">\n                      <button\n                        title=\"Delete\"\n                        onClick={handledeletebtn}\n                        type=\"button\"\n                        className=\"btn redbtn\"\n                        style={{\n                          padding: \"0px 0px\",\n                          textAlign: \"center\",\n                          minWidth: \"0px\",\n                          background: \"red\",\n                          width: \"40px\",\n                          height: \"40px\",\n                          borderRadius: \"50px\",\n                          position: \"absolute\",\n                          top: \"10px\",\n                          right: \"15px\",\n                        }}\n                      >\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width={24}\n                          height={24}\n                          viewBox=\"0 0 24 24\"\n                          fill=\"none\"\n                          stroke=\"currentColor\"\n                          strokeWidth={2}\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          className=\"icon icon-tabler textcolor icons-tabler-outline icon-tabler-trash\"\n                        >\n                          <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                          <path d=\"M4 7l16 0\" />\n                          <path d=\"M10 11l0 6\" />\n                          <path d=\"M14 11l0 6\" />\n                          <path d=\"M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12\" />\n                          <path d=\"M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3\" />\n                        </svg>\n                      </button>\n                    </div>\n                  )}\n                </div>\n              </div>\n              <div className=\"col-lg-5\">\n                <div className=\"d-flex h-100 flex-column justify-content-between gap-1\">\n                  <div className=\"d-flex flex-column gap-1 p-3 bordr-bt\">\n                    <div className=\"d-flex align-items-center gap-3 justify-content-between\">\n                      <Link to={`/friend/${isparamVl.uid}`}>\n                        {isparamVl.username}\n                      </Link>\n\n                      <h6>{formateTime(isparamVl.date)}</h6>\n                    </div>\n                    <div className=\"d-flex align-items-center gap-3 justify-content-between\">\n                      <p>\n                        {isparamVl &&\n                        isparamVl.description &&\n                        isparamVl.description.length > 150\n                          ? isparamVl.description.substring(0, 150) + \"...\"\n                          : isparamVl?.description ||\n                            \"No description available\"}\n                      </p>\n\n                      <div className=\"d-flex align-items-center gap-3 flex-shrink-0\">\n                        <div className=\"d-flex align-items-center gap-1 flex-shrink-0\">\n                          <button\n                            type=\"button\"\n                            onClick={() =>\n                              galleryPostLike(isparamVl.id, isparamVl.pertype)\n                            }\n                            className=\"liked  fulw j\"\n                          >\n                            {isparamVl.total_favourites ? (\n                              <FaHeart />\n                            ) : (\n                              <FaRegHeart />\n                            )}\n                          </button>\n                          <p className=\"likecount\">\n                            {isparamVl.total_favourites}\n                          </p>\n                        </div>\n                        <div className=\"d-flex align-items-center gap-1 flex-shrink-0\">\n                          <div className=\"d-block like_icon\">\n                            <img\n                              className=\"w-100 h-100\"\n                              src={require(\"../assets/images/comment.png\")}\n                              alt=\"img\"\n                            />\n                          </div>\n                          <p className=\"likecount\">{GalleryCommetss.length}</p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"d-flex flex-column gap-1\">\n                    <ul className=\"usergallery_msg scroll_bar\">\n                      {GalleryCommetss.length === 0 ? (\n                        <li>{t(\"Nocommentsavailable\")}</li>\n                      ) : (\n                        GalleryCommetss.map((comment, index) => (\n                          <li className=\"gap-3\" key={index}>\n                            <div className=\"profile_img\">\n                              <img\n                                className=\"w-100 h-100\"\n                                src={\n                                  comment.makeImagePrivate === 1\n                                    ? require(\"../assets/images/thumb.jpg\") // Default image if the profile image is private\n                                    : comment.profile_image // Use user's profile image if available\n                                    ? comment.profile_image\n                                    : require(\"../assets/images/image3.png\") // Default image if no profile image\n                                }\n                                alt=\"img\"\n                              />\n                            </div>\n                            <div className=\"comment_text d-flex flex-column gap-1\">\n                              <h6>{comment.username}</h6>{\" \"}\n                              {/* Display the commenter's username */}\n                              <p>{comment.description}</p>{\" \"}\n                              {/* Display the comment text */}\n                            </div>\n                            <p>{formateTime(comment.date)}</p>{\" \"}\n                          </li>\n                        ))\n                      )}\n                      <li ref={chatEndRef} />\n                    </ul>\n                    <form\n                      action=\"javascript:void(0)\"\n                      method=\"post\"\n                      onSubmit={handlePostSubmit}\n                    >\n                      {restr_message && (\n                        <span\n                          className=\"text-danger\"\n                          style={{ fontSize: \"14px\" }}\n                        >\n                          {t(\"Your_message_contain\")}\n                        </span>\n                      )}\n                      <div className=\"d-flex align-items-center gap-3 w-100 usergallery_from\">\n                        <div className=\"comment_input w-100 d-flex align-items-center gap-1\">\n                          {spinner && (\n                            <div\n                              className=\"spinner-border text-success postloader\"\n                              role=\"status\"\n                            >\n                              <span className=\"visually-hidden\">\n                                Loading...\n                              </span>\n                            </div>\n                          )}\n                          <input\n                            type=\"hidden\"\n                            value={seperateGallerydetail.id}\n                            name=\"gallery_id\"\n                          />\n                          <div className=\"emoji-container\">\n                            <button\n                              type=\"button\"\n                              className=\"emoji-button\"\n                              onClick={() => setShowPicker(!showPicker)}\n                            >\n                              😀\n                            </button>\n\n                            {showPicker && (\n                              <div\n                                className=\"emoji-picker\"\n                                style={{ position: \"absolute\", top: \"64px\" }}\n                              >\n                                <EmojiPicker onEmojiClick={handleEmojiClick} />\n                              </div>\n                            )}\n                          </div>\n                          <input\n                            type=\"text\"\n                            required\n                            ref={inputRef}\n                            name=\"description\"\n                            value={comments} // Controlled input\n                            onChange={handleCommentChange} // Simplified\n                            onKeyDown={handleKeyDown} // Send on Enter Key\n                            placeholder={`${t(\"write_a_comment\")}`}\n                          />\n\n                          <button\n                            type=\"submit\"\n                            disabled={isButtonDisabled} // Disable button if comment is empty\n                            style={{ opacity: isButtonDisabled ? 0.5 : 1 }}\n                            className=\"comment_postbtn\"\n                          >\n                            {t(\"Post\")}\n                          </button>\n                        </div>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Headertwo from \"../components/Headertwo\";\nimport { Leftsidebar } from \"../components/Leftsidebar\";\nimport { Rightsidebar } from \"../components/Rightsidebar\";\nimport Dashboardnotification from \"../components/Dashboardnotification\";\nimport { SlOptions } from \"react-icons/sl\";\nimport { useTranslation } from \"react-i18next\";\nimport \"../i18n\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AlertDelete } from \"../components/AlertDelete\";\nimport { UsergalleryDashboard } from \"../components/UsergalleryDashboard\";\nimport SuccessPop from \"../components/SuccessPop\";\nimport axios from \"axios\";\nimport MediaRenderer from \"../components/MediaRenderer\";\nfunction Dashboard() {\n  const chatBoxRef = useRef(null);\n  const loadMoreRef = useRef(null);\n  const navigate = useNavigate();\n  const [deleteMessage, setdeleteMessage] = useState(\"\");\n  const [showPopSuccess, setShowPopSuccess] = useState(false);\n  const [searchheader, setsearchheader] = useState(\"\");\n  const [successPopMessage, setPopsuccessMessage] = useState(\"\");\n  const [refreshNotifications, setRefreshNotifications] = useState(true);\n  const [isPopupOpen_delete, setisPopupOpen_delete] = useState(false);\n  const [postdetail, setPostdetail] = useState([]);\n  const [refreshRight, setrefreshRight] = useState(false);\n  const [AllfriendId, setAllfriendId] = useState([]);\n  const [LoginData, setLoginData] = useState(\"\");\n  const [PostId, setPostId] = useState(\"\");\n  const [rightbarrefresh, setrightbarrefresh] = useState(false);\n  const [seperateGallerydetail, setseperateGallerydetail] = useState(\"\");\n  const [UserDetail, setUserDetail] = useState(\"\");\n  const [GalleryIdDetailGet, setGalleryIdDetailGet] = useState(\"\");\n  const [GalleryCommets, setGalleryCommets] = useState([]);\n  const [nextId, setnextId] = useState(\"\");\n  const [previousId, setpreviousId] = useState(\"\");\n  const [offset, setOffset] = useState(0);\n  const [hasMore, setHasMore] = useState(true);\n  const [loadingMore, setLoadingMore] = useState(false);\n  const [postindex, setpostindex] = useState(\"\");\n  const [PostType, setPostType] = useState(\"\");\n  const [currentPostIndex, setCurrentPostIndex] = useState(null);\n  const [galleryViewState, setGalleryViewState] = useState({\n    index: 0,\n    type: \"\", // forum or gallery\n  });\n  var apiUrl = \"https://backend.amourette.no/api/members/\";\n  const { t, i18n } = useTranslation();\n  const storedUsername = localStorage.getItem(\"userLogin\");\n  const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n  var offst = 0;\n  useEffect(() => {\n    const ws = new WebSocket(\"wss://backend.amourette.no\");\n\n    ws.onmessage = (event) => {\n      try {\n        const receivedMessage = JSON.parse(event.data);\n\n        const storedUsername = localStorage.getItem(\"userLogin\");\n        const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n        if (receivedMessage.event === \"Deletegallery\") {\n          getAllgallery(AllfriendId);\n        }\n        if (receivedMessage.event === \"sendfriendRequest\") {\n          if (receivedMessage.user_id === userLogin.id) {\n            refreshNotifications();\n          }\n        }\n\n        if (receivedMessage.event === \"friendrequestacceptnotification\") {\n          if (\n            Array.isArray(receivedMessage.user_id) &&\n            receivedMessage.user_id.some((user) => user.id === userLogin.id)\n          ) {\n            // Trigger notification on new message\n\n            // Trigger refresh notifications function\n            refreshNotifications();\n          }\n        }\n        if (receivedMessage.event === \"adminNotification\") {\n          if (\n            Array.isArray(receivedMessage.user_id) &&\n            receivedMessage.user_id.includes(userLogin.id) // Check if current user ID is in the array\n          ) {\n            console.log(\n              \"New notification received for this user:\",\n              receivedMessage.message\n            );\n\n            // Trigger notification on new message\n            // Example: Show a toast notification or update the UI\n            refreshNotifications();\n          }\n        }\n        if (receivedMessage.event === \"adminEventupdate\") {\n          if (\n            Array.isArray(receivedMessage.user_id) &&\n            receivedMessage.user_id.includes(userLogin.id) // Check if current user ID is in the array\n          ) {\n            console.log(\n              \"New notification received for this user update event:\",\n              receivedMessage.message\n            );\n\n            // Trigger notification on new message\n            // Example: Show a toast notification or update the UI\n            refreshNotifications();\n          }\n        }\n        if (receivedMessage.event === \"adminEventdelete\") {\n          if (\n            Array.isArray(receivedMessage.user_id) &&\n            receivedMessage.user_id.includes(userLogin.id) // Check if current user ID is in the array\n          ) {\n            console.log(\n              \"New notification delete event:\",\n              receivedMessage.message\n            );\n\n            // Trigger notification on new message\n            // Example: Show a toast notification or update the UI\n            refreshNotifications();\n          }\n        }\n        if (receivedMessage.event === \"adminEventPostdelete\") {\n          if (\n            Array.isArray(receivedMessage.user_id) &&\n            receivedMessage.user_id.includes(userLogin.id) // Check if current user ID is in the array\n          ) {\n            console.log(\n              \"New notification delete event:\",\n              receivedMessage.message\n            );\n\n            // Trigger notification on new message\n            // Example: Show a toast notification or update the UI\n            refreshNotifications();\n          }\n        }\n        if (receivedMessage.event === \"adminEventPostCommentEdit\") {\n          if (\n            Array.isArray(receivedMessage.user_id) &&\n            receivedMessage.user_id.includes(userLogin.id) // Check if current user ID is in the array\n          ) {\n            console.log(\n              \"New notification delete event:\",\n              receivedMessage.message\n            );\n\n            // Trigger notification on new message\n            // Example: Show a toast notification or update the UI\n            refreshNotifications();\n          }\n        }\n        if (receivedMessage.event === \"adminGalleryPostUpdate\") {\n          if (\n            Array.isArray(receivedMessage.user_id) &&\n            receivedMessage.user_id.includes(userLogin.id) // Check if current user ID is in the array\n          ) {\n            console.log(\n              \"New notification delete event:\",\n              receivedMessage.message\n            );\n\n            refreshNotifications();\n          }\n        }\n        if (receivedMessage.event === \"gallerynotification\") {\n          // Check if user_id is an array and contains a matching userLogin.id\n          if (\n            Array.isArray(receivedMessage.user_id) &&\n            receivedMessage.user_id.some((user) => user.id === userLogin.id)\n          ) {\n            getAllfriendss();\n            setRefreshNotifications(true);\n            // If a match is found, trigger the notification\n            refreshNotifications();\n          }\n        }\n      } catch (error) {}\n    };\n\n    ws.onopen = () => {\n      console.log(\"WebSocket connection established\");\n    };\n\n    ws.onerror = (error) => {\n      console.error(\"WebSocket error:\", error);\n    };\n\n    return () => {\n      ws.close();\n      console.log(\"WebSocket connection closed\");\n    };\n  }, [refreshNotifications]);\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem(\"language\") || \"en\"; // Default to 'en' if no language is saved\n    // Change the language if it's not already the current language\n    if (i18n.language !== savedLanguage) {\n      i18n.changeLanguage(savedLanguage);\n    }\n  }, [i18n, t]);\n  useEffect(() => {\n    // Check if the username key exists in session storage\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = JSON.parse(storedUsername);\n    if (userLogin === null) {\n      window.location.href = \"/login\";\n    }\n  }, []);\n  useEffect(() => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    setLoginData(userLogin);\n    getUserDetail();\n  }, []);\n  const getUserDetail = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      user_id: userLogin.id,\n    };\n    try {\n      const res = await axios.post(apiUrl + \"getUserDetail\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      if (res.data.row.length > 0) {\n        var respo = res.data.row[0];\n        setUserDetail(respo);\n      }\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const [showMenu1, setShowMenu1] = useState(false);\n\n  const toggleMenu1 = () => {\n    setShowMenu1(!showMenu1);\n  };\n  const handleclosedeletepopup1 = () => {\n    setShowMenu1(false);\n  };\n\n  const [showMenu, setShowMenu] = useState(null);\n\n  const toggleMenu = (index) => {\n    setShowMenu(showMenu === index ? null : index);\n  };\n  const handleCloseDeletePopup = () => {\n    setShowMenu(false);\n  };\n  const handledeletemainpopup = async (id, type) => {\n    setPostType(type);\n    setPostId(id);\n    setisPopupOpen_delete(true);\n    setdeleteMessage(\"Are you sure? You want to delete this post\");\n  };\n\n  useEffect(() => {\n    getAllfriendss();\n  }, []);\n  const getAllfriendss = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      user_id: userLogin.id,\n    };\n    try {\n      const res = await axios.post(apiUrl + \"getAllfriends\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      var respo = res.data.results;\n      const friendUserIds = respo.map((friend) => friend.id);\n      setAllfriendId(friendUserIds);\n\n      const galleries = await getAllgallery(friendUserIds);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const getAllgallery = async (userIds) => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    const userIdsWithSelf = [...userIds, userLogin.id]; // e.g., [3, 1, 5]\n    const userIdsString = userIdsWithSelf.join(\", \");\n    let formData = {\n      user_ids: userIdsString, // Sending as a string for the query\n      user_id: userLogin.id, // Sending as a string for the query\n      offset: 0,\n    };\n    console.log(formData);\n    try {\n      const res = await axios.post(apiUrl + \"getdashboardpost\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      var respo = res.data.results;\n      console.log(respo);\n      setPostdetail(respo);\n      //setrefreshRight((refreshRight) => !refreshRight);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const formateTime = (dateString) => {\n    if (!dateString) return null;\n\n    // Parse the date as UTC\n    const postDate = new Date(dateString);\n    if (isNaN(postDate.getTime())) {\n      console.error(\"Invalid date:\", dateString);\n      return \"Invalid date\";\n    }\n\n    // Get the current time in UTC\n    const now = new Date();\n\n    // Adjust the postDate by subtracting 1 hour (3600000ms)\n    const adjustedPostDate = new Date(postDate.getTime() - 3600000);\n\n    // Convert postDate to Europe/Oslo time correctly\n    const osloPostTime = new Intl.DateTimeFormat(\"en-GB\", {\n      timeZone: \"Europe/Oslo\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      hour12: false, // Ensures 24-hour format\n    }).format(adjustedPostDate);\n\n    // Calculate time difference in seconds, minutes, hours, days\n    const timeDiff = now.getTime() - postDate.getTime();\n    const seconds = Math.floor(timeDiff / 1000);\n    const minutes = Math.floor(seconds / 60);\n    const hours = Math.floor(minutes / 60);\n    const days = Math.floor(hours / 24);\n    const weeks = Math.floor(days / 7);\n    const months = Math.floor(days / 30);\n    const years = Math.floor(days / 365);\n\n    // Generate formatted output based on the difference\n    if (minutes < 60) return `${osloPostTime}`;\n    if (hours < 24) return `${osloPostTime}`;\n    if (days === 1) return `Yesterday at ${osloPostTime}`;\n    if (days < 7) return `${days}d  ${osloPostTime}`;\n    if (weeks < 4) return `${weeks}w  ${osloPostTime}`;\n    if (months < 12) return `${months}m  ${osloPostTime}`;\n    return `${years}y  ${osloPostTime}`;\n  };\n  const closePopup_delete = () => {\n    setisPopupOpen_delete(false);\n  };\n  const refreshpopup = async () => {\n    deletePost();\n  };\n  const deletePost = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let deleteev = {\n      user_id: userLogin.id,\n      id: PostId,\n      post_type: PostType,\n    };\n    if (PostType !== \"\") {\n      try {\n        const res = await axios.post(apiUrl + \"deletePostDashboard\", deleteev, {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        });\n        setShowPopSuccess(true);\n        setPopsuccessMessage(\"Post deleted successfully\");\n        getAllgallery(AllfriendId);\n        setisPopupOpen_delete(false);\n        setShowMenu(null);\n        setTimeout(() => {\n          setShowPopSuccess(false);\n        }, 1000);\n      } catch (err) {\n        // Enhanced error handling\n        if (err.response) {\n        } else if (err.request) {\n          console.error(\"Request data:\", err.request);\n        } else {\n          console.error(\"Error message:\", err.message);\n        }\n      }\n    }\n  };\n  const getGalleryDetail = async (galleryId, type, index = \"\") => {\n    setGalleryIdDetailGet(galleryId);\n    getGalleryComments(galleryId, type);\n    setGalleryViewState({ index, type });\n    setpostindex(index);\n    // getGalleryDetailnextprevious(galleryId);\n    setPostType(type);\n    let formData = {\n      id: galleryId,\n      user_id: LoginData.id,\n      post_type: type,\n    };\n    console.log(formData);\n    try {\n      const res = await axios.post(\n        apiUrl + \"getGalleryGroupforumDetail\",\n        formData,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        }\n      );\n      console.log(res.data.row[0]);\n      if (res.data.row.length > 0) {\n        var respo = res.data.row[0];\n        openPopup1();\n        setseperateGallerydetail(respo);\n        setCurrentPostIndex(index);\n        setseperateGallerydetail(postdetail[index]);\n      }\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const getGalleryDetailnextprevious = async (galleryId) => {\n    let formData = {\n      id: galleryId,\n      user_id: LoginData.id,\n    };\n    try {\n      const res = await axios.post(\n        apiUrl + \"getGalleryDetailnextprevious\",\n        formData,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        }\n      );\n\n      if (res.data.next_gallery_id !== null) {\n        setpreviousId(res.data.next_gallery_id);\n      }\n      if (res.data.previous_gallery_id !== null) {\n        setnextId(res.data.previous_gallery_id);\n      }\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const getGalleryComments = async (g_id, type) => {\n    let formData = {\n      id: g_id,\n      user_id: LoginData.id,\n      post_type: type,\n    };\n    try {\n      const res = await axios.post(\n        apiUrl + \"getGalleryCommentsDashboard\",\n        formData,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        }\n      );\n\n      var respo = res.data.results;\n\n      setGalleryCommets(respo);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const [isPopupOpen1, setIsPopupOpen1] = useState(false);\n  const getUserfav = async () => {\n    getGalleryDetail(\n      GalleryIdDetailGet,\n      galleryViewState.type,\n      galleryViewState.index\n    );\n    let formData = {\n      id: GalleryIdDetailGet,\n      type: galleryViewState.type,\n    };\n    console.log(formData);\n    try {\n      const res = await axios.post(apiUrl + \"getGallerlikedislike\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n\n      if (res.data.results.length > 0) {\n        // setseperateGallerydetail(res.data.results[0]);\n        const updatedPost = res.data.results?.[0];\n        setPostdetail((prev) =>\n          prev.map((p) => (p.id === updatedPost.id ? updatedPost : p))\n        );\n      }\n    } catch (err) {\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const getCommentPost = async () => {\n    // getGalleryDetail(\n    //   GalleryIdDetailGet,\n    //   galleryViewState.type,\n    //   galleryViewState.index\n    // );\n    let formData = {\n      id: GalleryIdDetailGet,\n      type: galleryViewState.type,\n    };\n    console.log(formData, \"kk\");\n    try {\n      const res = await axios.post(\n        apiUrl + \"getGallerforumgroupcomment\",\n        formData,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        }\n      );\n      // console.log(res.data.results);\n      if (res.data.results.length > 0) {\n        //  setseperateGallerydetail(res.data.results[0]);\n        const updatedPost = res.data.results?.[0];\n        setPostdetail((prev) =>\n          prev.map((p) => (p.id === updatedPost.id ? updatedPost : p))\n        );\n      }\n    } catch (err) {\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const getgallerydetialnext = () => {\n    if (currentPostIndex < postdetail.length - 1) {\n      //setIsPopupOpen1(false);\n      const nextIndex = currentPostIndex + 1;\n      const nextPost = postdetail[nextIndex];\n\n      getGalleryDetail(nextPost.id, nextPost.pertype, nextIndex); // get post_type directly\n    }\n  };\n  const getgallerydetialprev = () => {\n    if (currentPostIndex > 0) {\n      setCurrentPostIndex(currentPostIndex - 1);\n      const nextIndex = currentPostIndex - 1;\n      const nextPost = postdetail[nextIndex];\n\n      getGalleryDetail(nextPost.id, nextPost.pertype, nextIndex);\n    }\n  };\n  const openPopup1 = () => {\n    setIsPopupOpen1(true);\n    document.body.style.overflowY = \"hidden\";\n  };\n  useEffect(() => {\n    // Ensure the postdetail exists and fetch data for the current index\n    if (postdetail.length > 0 && postdetail[currentPostIndex]) {\n      const currentPost = postdetail[currentPostIndex];\n      console.log(PostType);\n      console.log(currentPostIndex);\n      console.log(currentPost.id);\n      //getGalleryDetail(currentPost.id, PostType, currentPostIndex);\n    }\n  }, [currentPostIndex]); // Ensure to watch both currentPostIndex and postdetail\n\n  const closePopup1 = () => {\n    setIsPopupOpen1(false);\n    document.body.style.overflowY = \"auto\";\n  };\n  const handleScroll = async () => {\n    const chatBox = chatBoxRef.current;\n    const isAtBottom =\n      chatBox.scrollHeight - chatBox.scrollTop <= chatBox.clientHeight + 7;\n    console.log(isAtBottom);\n  };\n  const fetchdata = async (offset) => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    const userIdsWithSelf = [...AllfriendId, userLogin.id];\n    const userIdsString = userIdsWithSelf.join(\", \");\n\n    let formData = {\n      user_ids: userIdsString,\n      user_id: userLogin.id,\n      offset: offset,\n    };\n\n    console.log(\"Fetching with offset:\", offset);\n\n    try {\n      const res = await axios.post(apiUrl + \"getdashboardpost\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      const newMessages = res.data.results;\n\n      setPostdetail((prevMessages) => {\n        const existingIds = new Set(prevMessages.map((msg) => msg.id));\n        const filteredNewMessages = newMessages.filter(\n          (msg) => !existingIds.has(msg.id)\n        );\n\n        // ✅ Update offset here\n        if (filteredNewMessages.length > 0) {\n          setOffset((prevOffset) => prevOffset + filteredNewMessages.length);\n        } else {\n          setHasMore(false); // No more records to fetch\n        }\n\n        return [...prevMessages, ...filteredNewMessages];\n      });\n    } catch (err) {\n      if (err.response) {\n        console.error(\"Server error:\", err.response.data);\n      } else if (err.request) {\n        console.error(\"No response:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      (entries) => {\n        if (entries[0].isIntersecting && hasMore && !loadingMore) {\n          console.log(offset);\n          fetchdata(offset);\n        }\n      },\n      { threshold: 1.0 }\n    );\n\n    if (loadMoreRef.current) {\n      observer.observe(loadMoreRef.current);\n    }\n\n    return () => {\n      if (loadMoreRef.current) {\n        observer.unobserve(loadMoreRef.current);\n      }\n    };\n  }, [offset, hasMore, loadingMore]);\n  const refreshdiv = () => {\n    getAllgallery(AllfriendId);\n  };\n  return (\n    <>\n      <Headertwo refreshNotifications={refreshNotifications} />\n      <AlertDelete\n        isOpen1={isPopupOpen_delete}\n        onClose1={closePopup_delete}\n        message={deleteMessage}\n        onReturnSent={refreshpopup}\n      ></AlertDelete>\n      {showPopSuccess && <SuccessPop message={successPopMessage} />}\n      <section className=\"dashbox d-block\">\n        <div className=\"container-lg\">\n          <div className=\"row justify-content-between\">\n            <div className=\"col-lg-3 col-xl-3 sidefixedbox sticky-top scroll_bar\">\n              <Leftsidebar />\n            </div>\n\n            <div className=\"col-lg-5 col-xl-6 pt-3 z-index_9989\">\n              <div className=\"d-flex flex-column gap-3\">\n                <h1 className=\"grouptitle mb-1\">{t(\"Friends_activity\")}</h1>\n\n                {postdetail.length === 0 ? (\n                  <div className=\"postblock d-flex flex-column rounded-4 overflow-hidden h-100 p-2\">\n                    <h2>{t(\"No_activity\")}</h2>\n                  </div>\n                ) : (\n                  // Access only the first item in the array\n                  <div\n                    className=\"postblock d-flex flex-column rounded-4 overflow-hidden\"\n                    key={0}\n                  >\n                    <div className=\"d-flex justify-content-between align-items-center px-3 py-1\">\n                      <div className=\"flex-grow-1\">\n                        <Link\n                          to=\"javascript:void(0)\"\n                          className=\"d-flex gap-2 align-items-center\"\n                        >\n                          <div className=\"flex-shrink-0\">\n                            <div className=\"urpic ofit rounded-circle overflow-hidden ssd\">\n                              {postdetail && postdetail[0] ? (\n                                // Check if it's an image or video based on file extension\n                                postdetail[0].uimage.match(\n                                  /\\.(jpeg|jpg|gif|png|webp|bmp|svg)$/i\n                                ) ? (\n                                  <img src={postdetail[0].uimage} alt=\"img s\" />\n                                ) : postdetail[0].uimage.match(\n                                    /\\.(mp4|mov|avi|mkv|webm|ogg|flv|3gp)$/i\n                                  ) ? (\n                                  <video controls alt=\"video\">\n                                    <source\n                                      src={postdetail[0].uimage}\n                                      type=\"video/mp4\"\n                                    />\n                                    {t(\"Your_browser_does\")}\n                                  </video>\n                                ) : null\n                              ) : (\n                                <p></p> // In case postdetail is not available\n                              )}\n                            </div>\n                          </div>\n                          <div className=\"flex-grow-1\">\n                            {/* Conditionally render the text based on formattedTime */}\n                            {formateTime(postdetail[0].date) === \"Just now\" ? (\n                              <Link to={`/friend/${postdetail[0].user_id}`}>\n                                {postdetail[0].username} {t(\"Just_post\")}\n                              </Link>\n                            ) : (\n                              <Link to={`/friend/${postdetail[0].user_id}`}>\n                                {postdetail[0].username}\n                              </Link>\n                            )}\n                            <h5>{formateTime(postdetail[0].date)} </h5>\n                          </div>\n                        </Link>\n                      </div>\n                      {userLogin.id === postdetail[0].user_id && (\n                        <div className=\"flex-shrink-0 position-relative\">\n                          <button\n                            type=\"button\"\n                            onClick={toggleMenu1}\n                            className=\"btnoption\"\n                          >\n                            <SlOptions />\n                          </button>\n                          {showMenu1 && (\n                            <ul className=\"popup-menu\">\n                              <li\n                                onClick={() =>\n                                  handledeletemainpopup(\n                                    postdetail[0].id,\n                                    postdetail[0].pertype\n                                  )\n                                }\n                              >\n                                {t(\"Delete\")}\n                              </li>\n\n                              <li onClick={handleclosedeletepopup1}>Cancel</li>\n                            </ul>\n                          )}\n                        </div>\n                      )}\n                    </div>\n                    <Link\n                      onClick={() =>\n                        getGalleryDetail(\n                          postdetail[0].id,\n                          postdetail[0].pertype,\n                          0\n                        )\n                      }\n                      to=\"javascript:void(0)\"\n                      className=\"imgblock ofit rounded-3 overflow-hidden mt-2\"\n                    >\n                      <MediaRenderer\n                        className=\"w-100 h-100\"\n                        url={postdetail[0].image}\n                      />\n                    </Link>\n                  </div>\n                )}\n                <Dashboardnotification refresh={refreshNotifications} />\n                <div className=\"d-flex flex-column gap-3\" ref={chatBoxRef}>\n                  {postdetail.length === 0 ? (\n                    <h2></h2>\n                  ) : (\n                    postdetail.slice(1).map((item, index) => {\n                      // Start from index 1\n                      const formattedTime = formateTime(item.date); // Get the formatted time\n                      return (\n                        <div\n                          className=\"postblock d-flex flex-column rounded-4 h-100 overflow-hidden \"\n                          key={index}\n                        >\n                          <div className=\"d-flex justify-content-between align-items-center h-100 px-3 py-1\">\n                            <div className=\"flex-grow-1\">\n                              <Link\n                                to=\"javascript:void(0)\"\n                                className=\"d-flex gap-2 align-items-center\"\n                              >\n                                <div className=\"flex-shrink-0\">\n                                  <div className=\"urpic ofit rounded-circle overflow-hidden\">\n                                    <img src={item.uimage} alt=\"userpic\" />\n                                  </div>\n                                </div>\n                                <div className=\"flex-grow-1\">\n                                  {/* Conditionally render the text based on formattedTime */}\n                                  {formattedTime === \"Just now\" ? (\n                                    <Link to={`/friend/${item.user_id}`}>\n                                      {item.username} {t(\"Justpostedanewphoto\")}\n                                    </Link>\n                                  ) : (\n                                    <Link to={`/friend/${item.user_id}`}>\n                                      {item.username}\n                                    </Link>\n                                  )}\n                                  <h5>{formattedTime}</h5>\n                                </div>\n                              </Link>\n                            </div>\n                            {userLogin.id === item.user_id && (\n                              <div className=\"flex-shrink-0 position-relative\">\n                                <button\n                                  type=\"button\"\n                                  onClick={() => toggleMenu(index)}\n                                  onTouchStart={() => toggleMenu(index)}\n                                  className=\"btnoption\"\n                                >\n                                  <SlOptions />\n                                </button>\n                                {showMenu === index && ( // Check if menu is open for this post\n                                  <ul className=\"popup-menu\">\n                                    <li\n                                      onClick={() =>\n                                        handledeletemainpopup(\n                                          item.id,\n                                          item.pertype\n                                        )\n                                      }\n                                      onTouchStart={() =>\n                                        handledeletemainpopup(\n                                          item.id,\n                                          item.pertype\n                                        )\n                                      }\n                                    >\n                                      {t(\"Delete\")}\n                                    </li>\n\n                                    <li\n                                      onTouchStart={handleCloseDeletePopup}\n                                      onClick={handleCloseDeletePopup}\n                                    >\n                                      {t(\"Cancel\")}\n                                    </li>\n                                  </ul>\n                                )}\n                              </div>\n                            )}\n                          </div>\n                          <Link\n                            onTouchStart={() =>\n                              getGalleryDetail(item.id, item.pertype, index + 1)\n                            }\n                            onClick={() =>\n                              getGalleryDetail(item.id, item.pertype, index + 1)\n                            }\n                            to=\"javascript:void(0)\"\n                            className=\"imgblock ofit rounded-3 overflow-hidden mt-2\"\n                          >\n                            <MediaRenderer\n                              className=\"w-100 h-100\"\n                              url={item.image}\n                            />\n                          </Link>\n                        </div>\n                      );\n                    })\n                  )}\n                  <div ref={loadMoreRef}></div>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-lg-3 col-xl-3 sidefixedbox sticky-top scroll_bar d-none d-lg-block\">\n              <Rightsidebar refreshRight={refreshRight} />\n            </div>\n          </div>\n        </div>\n      </section>\n      <UsergalleryDashboard\n        isOpen1={isPopupOpen1}\n        onClose1={closePopup1}\n        seperateGallerydetail={seperateGallerydetail}\n        UserDetail={UserDetail}\n        LoginData={LoginData}\n        getUserfav={getUserfav}\n        GalleryCommets={GalleryCommets}\n        getCommentPost={getCommentPost}\n        GalleryIdDetailGet={GalleryIdDetailGet}\n        previousId={postdetail[currentPostIndex - 1]?.id}\n        nextId={postdetail[currentPostIndex + 1]?.id}\n        getgallerydetialnext={getgallerydetialnext}\n        getgallerydetialprev={getgallerydetialprev}\n        postType={PostType}\n        postdetail={postdetail}\n        refreshdiv={refreshdiv}\n      ></UsergalleryDashboard>\n    </>\n  );\n}\n\nexport default Dashboard;\n"],"names":["Rightsidebar","_ref","refreshRight","apiUrl2","isshowOnline","setshowOnline","useState","isshowMember","setshowMember","isshowUser","setshowUser","isshowNewMember","setshowMemberNew","isshowImages","setshowImages","isshowGroup","setshowGroups","isshowEvent","setshowEvents","isshowVisit","setshowVisit","notificationsdetail","setnotificationsdetail","useEffect","console","log","gettotalGroups","gettotalEvents","gettotalImages","async","storedUsername","localStorage","getItem","formData","user_id","JSON","parse","id","respo","axios","post","headers","Accept","data","groupsCount","err","response","request","eventsCount","imagesCount","getvisitprofile","result","intervalId","setInterval","gettotalOnline","gettotalNewMembers","gettotalMembers","clearInterval","gettotaluserss","looking_forr","apiUrl","results","length","onlineActiveCount","filter","item","online_user","online_user_active","now","Date","oneDayAgo","getTime","sevenDaysAgo","last24Hours","last7Days","forEach","user","createdAt","created_at","memberCount","formateTime","dateString","postDate","isNaN","error","adjustedPostDate","osloPostTime","Intl","DateTimeFormat","timeZone","hour","minute","hour12","format","timeDiff","seconds","Math","floor","minutes","hours","days","weeks","months","years","t","useTranslation","savedLanguage","i18n","language","changeLanguage","_jsx","_Fragment","children","_jsxs","className","map","visit","index","Link","to","uid","src","profile_image","require","alt","username","date","refresh","AllfriendId","setAllfriendId","friendUserIds","friend","getnotifications","message","getAllfriends","userLogin","user_ids","userIds","join","apiUrlnoti","notification","link_href","trim","status","recipient_profile_image","pe1","recipient_name","UsergalleryDashboard","isOpen1","onClose1","seperateGallerydetail","UserDetail","LoginData","getUserfav","GalleryCommets","getCommentPost","GalleryIdDetailGet","galleryData","previousId","nextId","getgallerydetialnext","getgallerydetialprev","postType","postdetail","refreshdiv","successPopMessage","setPopsuccessMessage","showPopSuccess","setShowPopSuccess","isPopupOpen_delete","setisPopupOpen_delete","deleteMessage","setdeleteMessage","chatEndRef","useRef","currentIndex","setCurrentIndex","isparamVl","setparamVl","isgallid","setgallid","restr_message","setrestr_message","GalleryCommetss","setGalleryCommetss","input","setInput","inputRef","spinnerlik","setspinnerlik","current","scrollIntoView","ws","WebSocket","onmessage","event","receivedMessage","gid","String","post_id","gallery_id","forum_id","galleryIdDetail","prev","total_favourites","user_favourited","prevComments","description","makeImagePrivate","lastInsertId","comment_user_username","comment_user_profile_image","comment_date","close","comments","setComments","spinner","setspinner","handleKeyDown","key","window","addEventListener","removeEventListener","isButtonDisabled","restrictedWords","handlePostSubmit","e","preventDefault","target","value","behavior","comment","showPicker","setShowPicker","deletePost","deleteev","post_type","setTimeout","onClick","classList","contains","AlertDelete","closePopup_delete","onReturnSent","SuccessPop","style","zIndex","type","FaChevronRight","FaChevronLeft","image","MediaRenderer","url","title","handledeletebtn","padding","textAlign","minWidth","background","width","height","borderRadius","position","top","right","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","substring","pertype","galleryPostLike","FaHeart","FaRegHeart","ref","action","method","onSubmit","fontSize","role","name","EmojiPicker","onEmojiClick","emojiObject","prevMessage","emoji","focus","required","onChange","inputValue","hasRestrictedWord","some","word","toLowerCase","includes","onKeyDown","placeholder","disabled","opacity","_postdetail","_postdetail2","chatBoxRef","loadMoreRef","useNavigate","searchheader","setsearchheader","refreshNotifications","setRefreshNotifications","setPostdetail","setrefreshRight","setLoginData","PostId","setPostId","rightbarrefresh","setrightbarrefresh","setseperateGallerydetail","setUserDetail","setGalleryIdDetailGet","setGalleryCommets","setnextId","setpreviousId","offset","setOffset","hasMore","setHasMore","loadingMore","setLoadingMore","postindex","setpostindex","PostType","setPostType","currentPostIndex","setCurrentPostIndex","galleryViewState","setGalleryViewState","getAllgallery","Array","isArray","getAllfriendss","onopen","onerror","location","href","getUserDetail","res","row","showMenu1","setShowMenu1","showMenu","setShowMenu","toggleMenu","handleCloseDeletePopup","handledeletemainpopup","getGalleryDetail","galleryId","arguments","undefined","getGalleryComments","openPopup1","g_id","isPopupOpen1","setIsPopupOpen1","document","body","overflowY","currentPost","observer","IntersectionObserver","entries","isIntersecting","newMessages","prevMessages","existingIds","Set","msg","filteredNewMessages","has","prevOffset","fetchdata","threshold","observe","unobserve","Headertwo","Leftsidebar","uimage","match","controls","toggleMenu1","SlOptions","handleclosedeletepopup1","Dashboardnotification","slice","formattedTime","onTouchStart","closePopup1","_res$data$results","updatedPost","p","_res$data$results2","nextIndex","nextPost"],"sourceRoot":""}