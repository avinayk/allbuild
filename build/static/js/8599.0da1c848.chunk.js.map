{"version":3,"file":"static/js/8599.0da1c848.chunk.js","mappings":"4KAIO,MAAMA,EAAqBC,IAQ3B,IAR4B,QACjCC,EAAO,SACPC,EAAQ,SACRC,EAAQ,QACRC,EAAO,UACPC,EAAS,QACTC,EAAO,cACPC,GACDP,EACC,MAAOQ,EAAiBC,IAAsBC,EAAAA,EAAAA,UAAS,KAChDC,EAAYC,IAAiBF,EAAAA,EAAAA,UAAS,IAE7C,MAAM,EAAEG,IAAMC,EAAAA,EAAAA,MAYd,IAVAC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAgBC,aAAaC,QAAQ,aAAe,KAC1DC,QAAQC,IAAI,YACZD,QAAQC,IAAIJ,GAGRK,EAAAA,EAAKC,WAAaN,GACpBK,EAAAA,EAAKE,eAAeP,EACtB,GACC,CAACK,EAAAA,EAAMR,KACLZ,EAAS,OAAO,KAsDrB,OACEuB,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAtB,UACEqB,EAAAA,EAAAA,KAAA,OAAKE,UAAU,gBAAgBC,QAvDPC,IAEtBA,EAAEC,OAAOC,UAAUC,SAAS,kBAC9B7B,GACF,EAmD6DC,UACzD6B,EAAAA,EAAAA,MAAA,OAAKN,UAAU,yBAAwBvB,SAAA,EACrCqB,EAAAA,EAAAA,KAAA,UAAQE,UAAU,eAAeC,QAASzB,EAASC,SAAC,WAGpD6B,EAAAA,EAAAA,MAAA,OAAKN,UAAU,kDAAiDvB,SAAA,EAC9D6B,EAAAA,EAAAA,MAAA,OAAKN,UAAU,2BAA0BvB,SAAA,EACvCqB,EAAAA,EAAAA,KAAA,MAAArB,SAAK,GAAGU,EAAE,wBACVW,EAAAA,EAAAA,KAAA,KAAGE,UAAU,oBAEfF,EAAAA,EAAAA,KAAA,QACES,OAAO,qBACPC,SAjDgBC,UAC1BP,EAAEQ,iBAGF,IAAIC,EAAW,CACbC,UAAW9B,EACX+B,QAASlC,EAAUmC,GACnBlC,QAASA,GAEXa,QAAQC,IAAIiB,GAGZ,IACE,MAAMI,QAAiBC,EAAAA,EAAMC,KAC3BC,mDACAP,EACA,CACEQ,QAAS,CACP,eAAgB,sBAItBjC,EAAc,6BACdH,EAAmB,IACnBF,IACAuC,YAAW,KACTlC,EAAc,GAAG,GAChB,MACHO,QAAQC,IAAI,6BAA8BqB,EAASM,KACrD,CAAE,MAAOC,GACP7B,QAAQ6B,MAAM,yBAA0BA,EAE1C,GAkBUC,OAAO,OAAM9C,UAEb6B,EAAAA,EAAAA,MAAA,OAAKN,UAAU,2BAA0BvB,SAAA,EACvCqB,EAAAA,EAAAA,KAAA,OAAKE,UAAU,SAAQvB,UACrBqB,EAAAA,EAAAA,KAAA,MAAIE,UAAU,6BAA4BvB,SACvCC,EAAQ8C,OAAS,EAChB9C,EAAQ+C,KAAI,CAACC,EAAQC,KACnBrB,EAAAA,EAAAA,MAAA,MAAA7B,SAAA,EACE6B,EAAAA,EAAAA,MAAA,OAAKN,UAAU,kCAAiCvB,SAAA,EAC9CqB,EAAAA,EAAAA,KAAA,OAAKE,UAAU,iBAAgBvB,SAC5BiD,EAAOE,eACN9B,EAAAA,EAAAA,KAAA,OACEE,UAAU,+BACV6B,IAAKH,EAAOE,cACZE,IAAI,cAGNhC,EAAAA,EAAAA,KAAA,OACEE,UAAU,+BACV6B,IAAKE,EAAQ,MACbD,IAAI,eAIVhC,EAAAA,EAAAA,KAAA,MAAArB,SAAKiD,EAAOM,WAAe,QAG7BlC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,wCAAuCvB,UACpD6B,EAAAA,EAAAA,MAAA,SAAON,UAAU,OAAMvB,SAAA,EACrBqB,EAAAA,EAAAA,KAAA,SACEmC,KAAK,WACLC,SAAUA,KAAMC,OA5FhBC,EA4FqCV,EAAOZ,QA3FxE/B,GAAoBsD,GACdA,EAAaC,SAASF,GAEjBC,EAAaE,QAAQzB,GAAOA,IAAOsB,IAGnC,IAAIC,EAAcD,KAPDA,KA4FiD,EACjDI,QAAS1D,EAAgBwD,SAASZ,EAAOZ,IACzC2B,KAAK,sBAEP3C,EAAAA,EAAAA,KAAA,QAAME,UAAU,qBA5Bb2B,MAkCXrB,EAAAA,EAAAA,MAAA,MAAIN,UAAU,cAAavB,SAAA,EACzB6B,EAAAA,EAAAA,MAAA,KAAA7B,SAAA,CAAI,GAAGU,EAAE,kBAAkB,OAAM,WAMzB,KAAfF,IACCa,EAAAA,EAAAA,KAAA,KAAGE,UAAU,2BAA0BvB,SAAEQ,KAG3Ca,EAAAA,EAAAA,KAAA,OAAKE,UAAU,SAAQvB,SACpBC,EAAQ8C,OAAS,GAChB1B,EAAAA,EAAAA,KAAA,UACEmC,KAAK,SACLjC,UAAsC,IAA3BlB,EAAgB0C,OAAe,MAAQ,GAClDkB,SAAqC,IAA3B5D,EAAgB0C,OAAa/C,SAEtC,GAAGU,EAAE,oBAGRW,EAAAA,EAAAA,KAAA,KAAArB,SAAI,GAAGU,EAAE,oCAQtB,C,wTCnKA,MAAMwD,EAAcrE,IAA4B,IAA3B,QAAEC,EAAO,SAAEC,GAAUF,EAC/C,MAAOQ,EAAiBC,IAAsBC,EAAAA,EAAAA,UAAS,KAChDC,EAAYC,IAAiBF,EAAAA,EAAAA,UAAS,IAE7C,IAAKT,EAAS,OAAO,KAoBrB,OACEuB,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAtB,UACEqB,EAAAA,EAAAA,KAAA,OAAKE,UAAU,6BAA6BC,QArBpBC,IAEtBA,EAAEC,OAAOC,UAAUC,SAAS,kBAC9B7B,GACF,EAiB0EC,UACtE6B,EAAAA,EAAAA,MAAA,OAAKN,UAAU,yBAAwBvB,SAAA,EACrCqB,EAAAA,EAAAA,KAAA,UAAQE,UAAU,eAAeC,QAASzB,EAASC,SAAC,WAGpDqB,EAAAA,EAAAA,KAAA,OAAKE,UAAU,wCAAuCvB,UACpDqB,EAAAA,EAAAA,KAAA,OAAKE,UAAU,8BAA6BvB,UAC1CqB,EAAAA,EAAAA,KAAA,KAAArB,SAAG,2DAKV,ECtCMmE,EAAatE,IAA4B,IAA3B,QAAEC,EAAO,SAAEC,GAAUF,EAC9C,MAAOQ,EAAiBC,IAAsBC,EAAAA,EAAAA,UAAS,KAChDC,EAAYC,IAAiBF,EAAAA,EAAAA,UAAS,IAE7C,IAAKT,EAAS,OAAO,KAoBrB,OACEuB,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAtB,UACEqB,EAAAA,EAAAA,KAAA,OAAKE,UAAU,4BAA4BC,QArBnBC,IAEtBA,EAAEC,OAAOC,UAAUC,SAAS,kBAC9B7B,GACF,EAiByEC,UACrE6B,EAAAA,EAAAA,MAAA,OAAKN,UAAU,yBAAwBvB,SAAA,EACrCqB,EAAAA,EAAAA,KAAA,UAAQE,UAAU,eAAeC,QAASzB,EAASC,SAAC,WAGpDqB,EAAAA,EAAAA,KAAA,OAAKE,UAAU,uCAAsCvB,UACnDqB,EAAAA,EAAAA,KAAA,OAAKE,UAAU,6BAA4BvB,UACzCqB,EAAAA,EAAAA,KAAA,KAAArB,SAAG,oBAKV,E,gECrCA,MAAMoE,EAAqBvE,IAM3B,IAN4B,OACjCwE,EAAM,QACNC,EAAO,QACPnE,EAAO,UACPD,EAAS,UACTqE,GACD1E,EAEC,MAAO2E,EAAaC,IAAkBlE,EAAAA,EAAAA,UAAS,KACxCmE,EAAOC,IAAYpE,EAAAA,EAAAA,UAAS,OAC5BqE,EAAeC,IAAoBtE,EAAAA,EAAAA,WAAS,IAC5CsC,EAAOiC,IAAYvE,EAAAA,EAAAA,UAAS,KAC5BwE,EAASC,IAAczE,EAAAA,EAAAA,WAAS,IAChC0E,EAAUC,IAAe3E,EAAAA,EAAAA,UAAS,KAClC4E,EAAUC,IAAe7E,EAAAA,EAAAA,UAAS,IAEzC,MAAM,EAAEG,IAAMC,EAAAA,EAAAA,MAad,IAXAC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAgBC,aAAaC,QAAQ,aAAe,KAC1DC,QAAQC,IAAI,YACZD,QAAQC,IAAIJ,GAGRK,EAAAA,EAAKC,WAAaN,GACpBK,EAAAA,EAAKE,eAAeP,EACtB,GACC,CAACK,EAAAA,EAAMR,KAEL2D,EAAQ,OAAO,KAEpB,MAiFMgB,EAAkB,CACtB,OACA,WACA,WACA,MACA,WACA,UACA,UACA,QACA,SACA,WACA,gBACA,SACA,WACA,eACA,mBACA,sBACA,OACA,aACA,OACA,OACA,SACA,OACA,SACA,UACA,OACA,YACA,WACA,WACA,WACA,UACA,OACA,SACA,gBACA,eACA,OACA,SACA,UACA,aACA,YACA,WACA,WACA,UACA,UACA,YACA,YACA,WACA,YACA,YACA,UACA,WACA,WACA,UACA,eACA,aACA,sBACA,kBACA,yBACA,aACA,OACA,gBACA,gBACA,eACA,QACA,QACA,YACA,OACA,QACA,QACA,OACA,WACA,QACA,iBACA,aACA,eACA,OACA,iBACA,iBACA,UACA,cACA,OACA,UAEIC,GAAqBd,EAAYe,SAAWb,GAAUE,EAiB5D,OACEvD,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAtB,UACEqB,EAAAA,EAAAA,KAAA,OAAKE,UAAU,gBAAgBC,QAvLPC,IAEtBA,EAAEC,OAAOC,UAAUC,SAAS,kBAC9B0C,GACF,EAmL6DtE,UACzD6B,EAAAA,EAAAA,MAAA,OAAKN,UAAU,yBAAwBvB,SAAA,EACrCqB,EAAAA,EAAAA,KAAA,UAAQE,UAAU,eAAeC,QAAS8C,EAAQtE,SAAC,WAGnD6B,EAAAA,EAAAA,MAAA,OAAKN,UAAU,uCAAsCvB,SAAA,EACnDqB,EAAAA,EAAAA,KAAA,MAAArB,SAAK,GAAGU,EAAE,mBACTkE,IACCvD,EAAAA,EAAAA,KAAA,QAAME,UAAU,cAAciE,MAAO,CAAEC,SAAU,QAASzF,SACvD,GAAGU,EAAE,6BAGVW,EAAAA,EAAAA,KAAA,QAAMU,SA5JKC,UACnBP,EAAEQ,iBAKF+C,GAAW,GAEX,MAAM9C,EAAW,IAAIwD,SACrBxD,EAASyD,OAAO,cAAenB,GAC/BtC,EAASyD,OAAO,QAASjB,GACzBxC,EAASyD,OAAO,WAAYxF,GAC5B+B,EAASyD,OAAO,UAAWzF,EAAUmC,IACrCH,EAASyD,OAAO,WAAY,aAE5B3E,QAAQC,IAAI,mBAAoB,CAAEuD,cAAaE,UAC/C,IACE,MAAMkB,QAAYrD,EAAAA,EAAMC,KAAKC,mDAA4BP,EAAU,CACjEQ,QAAS,CACPmD,OAAQ,mBACR,eAAgB,oBAGpBb,GAAW,GACQ,MAAfY,EAAIE,SACN9E,QAAQC,IAAI,yBAA0B2E,EAAIhD,MAE1C6B,EAAe,IACfE,EAAS,MACTG,EAAS,IACTP,IAEJ,CAAE,MAAOwB,GAEHA,EAAIzD,UACGyD,EAAIC,OAKjB,GAoHqChG,UAC3B6B,EAAAA,EAAAA,MAAA,OAAKN,UAAU,2BAA0BvB,SAAA,EACvCqB,EAAAA,EAAAA,KAAA,OAAKE,UAAU,SAAQvB,UACrBqB,EAAAA,EAAAA,KAAA,YACE4E,KAAK,IACLC,YAAY,qBACZC,MAAO3B,EACPf,SArCWhC,IAC3B,MAAM2E,EAAa3E,EAAEC,OAAOyE,MAC5B1B,EAAe2B,GAGf,MAAMC,EAAoBhB,EAAgBiB,MAAMC,GAC9CH,EAAWI,cAAc3C,SAAS0C,EAAKC,iBAIvC3B,IADEwB,EAIJ,OA2BYhF,EAAAA,EAAAA,KAAA,OAAKE,UAAU,SAAQvB,UACrB6B,EAAAA,EAAAA,MAAA,OAAKN,UAAU,wBAAuBvB,SAAA,EACpCqB,EAAAA,EAAAA,KAAA,SACEmC,KAAK,OACLiD,OAAO,kBACPlF,UAAU,WACVyC,KAAK,QACLP,SA7MOiD,IACzB,MAAMC,EAAOD,EAAMhF,OAAOkF,MAAM,GAChC,GAAID,EAAM,CAER,MAAME,EAAUF,EAAKnD,KAAKsD,WAAW,UAC/BC,EAAUJ,EAAKnD,KAAKsD,WAAW,UAErC,IAAKD,IAAYE,EAGf,OAFAjC,EAAS,mDACTH,EAAS,MAKX,GAAIgC,EAAKK,KAfS,SAkBhB,OAFAlC,EAAS,0CACTH,EAAS,MAKXG,EAAS,IACTH,EAASgC,GACTzB,EAAY2B,EAAU,QAAU,QAMlC,MAkLgBhF,EAAAA,EAAAA,MAAA,OAAKN,UAAU,eAAcvB,SAAA,CAEb,UAAbiF,GAAwBP,IACvBrD,EAAAA,EAAAA,KAAA,OACEE,UAAU,cACV6B,IAAK6D,IAAIC,gBAAgBxC,GACzBrB,IAAI,mBAKM,UAAb4B,GAAwBP,IACvB7C,EAAAA,EAAAA,MAAA,SAAON,UAAU,cAAc4F,UAAQ,EAAAnH,SAAA,EACrCqB,EAAAA,EAAAA,KAAA,UACE+B,IAAK+B,GAAY8B,IAAIC,gBAAgBxC,GACrClB,KAAK,cAEN9C,EAAE,4BAITmB,EAAAA,EAAAA,MAAA,OAAKN,UAAU,SAASiE,MAAO,CAAE4B,OAAQ,SAAUpH,SAAA,EACjD6B,EAAAA,EAAAA,MAAA,OAAA7B,SAAA,EACEqB,EAAAA,EAAAA,KAACgG,EAAAA,IAAa,CAAC7B,MAAO,CAAEC,SAAU,WAClCpE,EAAAA,EAAAA,KAAA,MAAImE,MAAO,CAAEC,SAAU,QAASzF,SAAE,GAAGU,EACnC,uBAGHmC,IAASxB,EAAAA,EAAAA,KAAA,KAAGmE,MAAO,CAAE8B,MAAO,OAAQtH,SAAE6C,aAI7ChB,EAAAA,EAAAA,MAAA,OAAKN,UAAU,SAAQvB,SAAA,CACpB+E,IACC1D,EAAAA,EAAAA,KAAA,OACEE,UAAU,wCACVgG,KAAK,SAAQvH,UAEbqB,EAAAA,EAAAA,KAAA,QAAME,UAAU,kBAAiBvB,SAAC,kBAGtCqB,EAAAA,EAAAA,KAAA,UACEmC,KAAK,SACLS,SAAUqB,EACVE,MAAO,CAAEgC,QAASlC,EAAmB,GAAM,GAAItF,SAE9C,GAAGU,EAAE,6BAQnB,E,2CCrSA,MAAM+G,EAAmB5H,IAMzB,IAN0B,YAC/B6H,EAAW,UACXxH,EAAS,WACTyH,EAAU,sBACVC,EAAqB,sBACrBC,GACDhI,EACC,MAAOiI,EAAQC,IAAaxH,EAAAA,EAAAA,UAAS,KAC9ByH,EAAmBC,IAAwB1H,EAAAA,EAAAA,UAAS,IACpD2H,EAAoBC,IAAyB5H,EAAAA,EAAAA,WAAS,IACtD6H,EAAeC,IAAoB9H,EAAAA,EAAAA,UAAS,KAC5C+H,EAAUC,IAAehI,EAAAA,EAAAA,UAASiI,MAAMd,EAAY3E,QAAQ0F,KAAK,MACjEC,EAAWC,IAAgBpI,EAAAA,EAAAA,UAAS,MACrCkC,EAAS,qCACRmG,EAAiBC,IAAsBtI,EAAAA,EAAAA,UAAS,KAChDuI,EAAkBC,IAAuBxI,EAAAA,EAAAA,UAAS,IAEnDyI,GAAWC,EAAAA,EAAAA,QAAO,CAAC,IAClBC,EAAWC,IAAgB5I,EAAAA,EAAAA,WAAS,IACpC6I,EAASC,IAAY9I,EAAAA,EAAAA,UAAS,MAE/B+I,EAAaA,KACjBD,EAAS,KAAK,GAETE,EAAcC,IAAmBjJ,EAAAA,EAAAA,WAAS,IAEjDK,EAAAA,EAAAA,YAAU,KACR,MAAM6I,EAAK,IAAIC,UAAU,8BAqBzB,OAnBAD,EAAGE,UAAajD,IACd,IACE,MAAMkD,EAAkBC,KAAKC,MAAMpD,EAAM9D,MACzC5B,QAAQC,IAAI,yBAA0B2I,GAER,kBAA1BA,EAAgBlD,OAClBkB,IAE4B,aAA1BgC,EAAgBlD,QAClB1F,QAAQC,IAAI,UAEZ2G,IAEJ,CAAE,MAAO/E,GACP7B,QAAQ6B,MAAM,qCAAsCA,GACpD7B,QAAQ6B,MAAM,eAAgB6D,EAAM9D,KACtC,GAGK,KACL6G,EAAGM,OAAO,CACX,GACA,CAACrC,EAAaxH,IACjB,MAAM,EAAEQ,IAAMC,EAAAA,EAAAA,OAEdC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAgBC,aAAaC,QAAQ,aAAe,KAGtDG,EAAAA,EAAKC,WAAaN,GACpBK,EAAAA,EAAKE,eAAeP,EACtB,GACC,CAACK,EAAAA,EAAMR,IACV,MAoBM2E,EAAkB,CACtB,OACA,WACA,WACA,MACA,WACA,UACA,UACA,QACA,SACA,WACA,gBACA,SACA,WACA,eACA,mBACA,sBACA,OACA,aACA,OACA,OACA,SACA,OACA,SACA,UACA,OACA,YACA,WACA,WACA,WACA,UACA,OACA,SACA,gBACA,eACA,OACA,SACA,UACA,aACA,YACA,WACA,WACA,UACA,UACA,YACA,YACA,WACA,YACA,YACA,UACA,WACA,WACA,UACA,eACA,aACA,sBACA,kBACA,yBACA,aACA,OACA,gBACA,gBACA,eACA,QACA,QACA,YACA,OACA,QACA,QACA,OACA,WACA,QACA,iBACA,aACA,eACA,OACA,iBACA,iBACA,UACA,cACA,OACA,UAwBI2E,EAAoBhI,MAAOkB,EAAO4E,EAAQmC,KAAc,IAADC,EAE3D,MAAMC,EAA6B,QAAlBD,EAAG5B,EAASpF,UAAM,IAAAgH,OAAA,EAAfA,EAAiB3E,OAC/B6E,GANYC,EAMkBF,GALxB5E,OAAS8E,EAAKC,MAAM,OAAOvH,OAAS,EAD9BsH,MAQlB,GAAID,EAAmB,KACrB,GAAID,EAAa,CACf,MAAMjI,EAAW,CACfqI,QAASzC,EACT1F,QAASlC,EAAUmC,GACnB4H,SAAUA,EACVO,QAASL,GAGX,UACoB5H,EAAAA,EAAMC,KACtBC,EAAS,yBACTP,EACA,CACEQ,QAAS,CACPmD,OAAQ,mBACR,eAAgB,sBAKtB7E,QAAQC,IAAIiC,GAEZqF,GAAakC,IAAI,IACZA,EACH,CAACvH,GAAQ,OAGXyE,SAvDc3F,WACpB,IAAIE,EAAW,CACb+H,SAAUA,GAEZ,IACE,MAAMrE,QAAYrD,EAAAA,EAAMC,KAAKC,EAAS,uBAAwBP,EAAU,CACtEQ,QAAS,CACPmD,OAAQ,mBACR,eAAgB,sBAGpB7E,QAAQC,IAAI2E,EAAIhD,MAEKgD,EAAIhD,KAAK8H,OAEhC,CAAE,MAAO7H,GACP7B,QAAQ6B,MAAM,2BAA4BA,EAC5C,GAwCY8H,CAAcV,EACtB,CAAE,MAAOlE,GACP/E,QAAQ6B,MAAM,yBAA0BkD,EAC1C,CACF,OAEAyD,GAAgB,GAChBX,EACE,gDAAwDuB,YAE1DzH,YAAW,KACT6G,GAAgB,GAChBX,EAAmB,GAAG,GACrB,KACL,EAGI+B,EAAeC,IACnB,IAAKA,EAAY,OAAO,KAGxB,MAAMC,EAAW,IAAIC,KAAKF,GAC1B,GAAIG,MAAMF,EAASG,WAEjB,OADAjK,QAAQ6B,MAAM,gBAAiBgI,GACxB,eAIT,MAAMK,EAAM,IAAIH,KAGVI,EAAmB,IAAIJ,KAAKD,EAASG,UAAY,MAGjDG,EAAe,IAAIC,KAAKC,eAAe,QAAS,CACpDC,SAAU,cACVC,KAAM,UACNC,OAAQ,UACRC,QAAQ,IACPC,OAAOR,GAGJS,EAAWV,EAAID,UAAYH,EAASG,UACpCY,EAAUC,KAAKC,MAAMH,EAAW,KAChCI,EAAUF,KAAKC,MAAMF,EAAU,IAC/BI,EAAQH,KAAKC,MAAMC,EAAU,IAC7BE,EAAOJ,KAAKC,MAAME,EAAQ,IAC1BE,EAAQL,KAAKC,MAAMG,EAAO,GAC1BE,EAASN,KAAKC,MAAMG,EAAO,IAC3BG,EAAQP,KAAKC,MAAMG,EAAO,KAGhC,OAAIF,EAAU,IACVC,EAAQ,GADa,GAAGb,IAEf,IAATc,EAAmB,gBAAgBd,IACnCc,EAAO,EAAU,GAAGA,OAAUd,IAC9Be,EAAQ,EAAU,GAAGA,OAAWf,IAChCgB,EAAS,GAAW,GAAGA,OAAYhB,IAChC,GAAGiB,OAAWjB,GAAc,GAG9BkB,EAAYC,IAAiBhM,EAAAA,EAAAA,UAAS,CAAC,GAqH9C,OAfAK,EAAAA,EAAAA,YAAU,KACR,MAAM4L,EAAiB9F,IACH,WAAdA,EAAM+F,KACRnD,GACF,EAOF,OAHAoD,SAASC,iBAAiB,UAAWH,GAG9B,KACLE,SAASE,oBAAoB,UAAWJ,EAAc,CACvD,GACA,KAED3K,EAAAA,EAAAA,MAAAP,EAAAA,SAAA,CAAAtB,SAAA,EACEqB,EAAAA,EAAAA,KAACwL,EAAAA,EAAW,CACV/M,QAASoI,EACTnI,SAjDoB+M,KACxB3E,GAAsB,EAAM,EAiDxB4E,QAAS3E,EACT4E,aA9BehL,UAlBSA,WAC5B,IAAIE,EAAW,CACbG,GAAIyF,EACJ1F,QAASlC,EAAUmC,IAErB,UACoBE,EAAAA,EAAMC,KAAKC,EAAS,kBAAmBP,EAAU,CACjEQ,QAAS,CACPmD,OAAQ,mBACR,eAAgB,sBAGpBsC,GAAsB,GACtBN,GACF,CAAE,MAAO9B,GACP/E,QAAQ6B,MAAM,yBAA0BkD,EAC1C,GAGAkH,EAAuB,IA+BpB1D,IAAgBlI,EAAAA,EAAAA,KAAC6L,EAAAA,EAAQ,CAACH,QAASnE,IACnClB,EAAY3E,OAAS,EACpB2E,EAAY1E,KAAI,CAACR,EAAMU,KAAK,IAAAiK,EAAAC,EAAA,OAC1B/L,EAAAA,EAAAA,KAAA,OAAKE,UAAU,iBAAgBvB,UAC7B6B,EAAAA,EAAAA,MAAA,OAAKN,UAAU,2BAA0BvB,SAAA,EACvC6B,EAAAA,EAAAA,MAAA,OAAKN,UAAU,kCAAiCvB,SAAA,EAC9CqB,EAAAA,EAAAA,KAAA,OAAKE,UAAU,gBAAevB,UAC5BqB,EAAAA,EAAAA,KAAA,OAAKE,UAAU,+CAA8CvB,UAC3DqB,EAAAA,EAAAA,KAACgM,EAAAA,GAAI,CAACC,GAAI,WAAW9K,EAAK+K,MAAO7L,OAAO,SAAQ1B,SAC7CwC,EAAKW,eAA2C,IAA1BX,EAAKgL,kBAC1BnM,EAAAA,EAAAA,KAAA,OAAK+B,IAAKZ,EAAKW,cAAeE,IAAI,cAElChC,EAAAA,EAAAA,KAAA,OACE+B,IAAKE,EAAQ,MACbD,IAAI,mBAMdhC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,cAAavB,UAC1B6B,EAAAA,EAAAA,MAAA,OAAKN,UAAU,0CAAyCvB,SAAA,EACtD6B,EAAAA,EAAAA,MAACwL,EAAAA,GAAI,CAACC,GAAI,WAAW9K,EAAK+K,MAAO7L,OAAO,SAAQ1B,SAAA,CAC7CwC,EAAKe,SAAS,IAAE7C,EAAE,qBAErBW,EAAAA,EAAAA,KAAA,MAAArB,SAAK4K,EAAYpI,EAAKiL,aAGzBvN,EAAUmC,KAAOG,EAAKJ,UACrBf,EAAAA,EAAAA,KAAA,OAAKE,UAAU,4BAA2BvB,UACxCqB,EAAAA,EAAAA,KAAA,UACEqM,MAAM,SACNlK,KAAK,SACLhC,QAASA,IA3FQQ,WACnC+F,EAAU1F,GACV8F,GAAsB,GACtBE,EAAiB,0CAA0C,EAwF1BsF,CAA6BnL,EAAKH,IACjDd,UAAU,aACViE,MAAO,CACLoI,QAAS,UACTC,UAAW,SACXC,SAAU,MACVC,WAAY,OACZ/N,UAEF6B,EAAAA,EAAAA,MAAA,OACEmM,MAAM,6BACNC,MAAO,GACP7G,OAAQ,GACR8G,QAAQ,YACRzF,KAAK,OACL0F,OAAO,eACPC,YAAa,EACbC,cAAc,QACdC,eAAe,QACf/M,UAAU,0DAAyDvB,SAAA,EAEnEqB,EAAAA,EAAAA,KAAA,QAAM8M,OAAO,OAAOI,EAAE,gBAAgB9F,KAAK,UAC3CpH,EAAAA,EAAAA,KAAA,QAAMkN,EAAE,eACRlN,EAAAA,EAAAA,KAAA,QAAMkN,EAAE,gBACRlN,EAAAA,EAAAA,KAAA,QAAMkN,EAAE,gBACRlN,EAAAA,EAAAA,KAAA,QAAMkN,EAAE,oDACRlN,EAAAA,EAAAA,KAAA,QAAMkN,EAAE,wDAMlBlN,EAAAA,EAAAA,KAAA,OAAKE,UAAU,mBAAkBvB,UAC/BqB,EAAAA,EAAAA,KAAA,KAAArB,SAAIwC,EAAKgC,gBAEVhC,EAAKmE,OACJtF,EAAAA,EAAAA,KAAA,OAAKE,UAAU,6CAA4CvB,UACzDqB,EAAAA,EAAAA,KAACmN,EAAAA,EAAa,CACZC,IAAKjM,EAAKmE,KACVnF,QAASA,KACP6H,EAAS7G,EAAKmE,KAAK,OAK3BtF,EAAAA,EAAAA,KAAA,OAAKE,UAAU,6BAA4BvB,UACzC6B,EAAAA,EAAAA,MAAA,OAAKN,UAAU,6BAA4BvB,SAAA,EACzC6B,EAAAA,EAAAA,MAAA,OAAKN,UAAU,kCAAiCvB,SAAA,EAC9CqB,EAAAA,EAAAA,KAAA,UAAQmC,KAAK,SAASjC,UAAU,WAAUvB,UACxCqB,EAAAA,EAAAA,KAAA,OAAK+B,IAAKsL,EAAMrL,IAAI,eAEtBhC,EAAAA,EAAAA,KAAA,KAAArB,SAAIwC,EAAKA,KAAKO,aAEhBlB,EAAAA,EAAAA,MAAA,OAAKN,UAAU,kCAAiCvB,SAAA,EAC9CqB,EAAAA,EAAAA,KAAA,UACEmC,KAAK,SACLhC,QAASA,IA5KHQ,OAAO2M,EAAQ1E,KACvC,IAAI/H,EAAW,CACbE,QAASlC,EAAUmC,GACnBkI,QAASoE,EACT1E,SAAUA,GAGZ,UACoB1H,EAAAA,EAAMC,KAAKC,EAAS,qBAAsBP,EAAU,CACpEQ,QAAS,CACPmD,OAAQ,mBACR,eAAgB,sBAGpB8B,GACF,CAAE,MAAO5B,GAEHA,EAAIzD,WACGyD,EAAIC,QACbhF,QAAQ6B,MAAM,gBAAiBkD,EAAIC,SAEnChF,QAAQ6B,MAAM,iBAAkBkD,EAAIgH,SAExC,GAqJiC6B,CAAkBpM,EAAKH,GAAIG,EAAKyH,UAC/C1I,UAAU,iBAAgBvB,SAEzBwC,EAAKqM,KAAMxN,EAAAA,EAAAA,KAACyN,EAAAA,IAAO,KAAMzN,EAAAA,EAAAA,KAAC0N,EAAAA,IAAU,OAGvC1N,EAAAA,EAAAA,KAAA,KAAArB,SAAIwC,EAAKwM,qBAIfnN,EAAAA,EAAAA,MAAA,OAAKN,UAAU,yCAAwCvB,SAAA,EACrDqB,EAAAA,EAAAA,KAAA,MAAIE,UAAU,0DAAyDvB,SACpEwC,EAAKA,KAAKO,OAAS,EAClBP,EAAKA,KAAKQ,KAAI,CAACiM,EAAM/L,KACnBrB,EAAAA,EAAAA,MAAA,MACEN,UAAU,iCAAgCvB,SAAA,EAG1CqB,EAAAA,EAAAA,KAACgM,EAAAA,GAAI,CACHC,GAAI,WAAW2B,EAAKC,WACpBxN,OAAO,SACPH,UAAU,uBAAsBvB,SAE/BiP,EAAKE,4BAC4B,IAAlCF,EAAKG,0BACH/N,EAAAA,EAAAA,KAAA,OACEE,UAAU,cACV6B,IAAK6L,EAAKE,2BACV9L,IAAI,eAGNhC,EAAAA,EAAAA,KAAA,OACEE,UAAU,cACV6B,IAAKE,EAAQ,MACbD,IAAI,iBAIVxB,EAAAA,EAAAA,MAAA,OAAKN,UAAU,2BAA0BvB,SAAA,EACvC6B,EAAAA,EAAAA,MAAA,OAAKN,UAAU,kCAAiCvB,SAAA,EAC9C6B,EAAAA,EAAAA,MAACwL,EAAAA,GAAI,CACHC,GAAI,WAAW2B,EAAKC,WACpBxN,OAAO,SACPH,UAAU,YAAWvB,SAAA,CAEpBiP,EAAKI,sBAAuB,QAE/BhO,EAAAA,EAAAA,KAAA,QAAME,UAAU,eAAcvB,SAC3B4K,EAAYqE,EAAKK,oBAGtBjO,EAAAA,EAAAA,KAAA,KAAGE,UAAU,0BAAyBvB,SACnCiP,EAAKzK,mBApCLtB,MA0CT7B,EAAAA,EAAAA,KAAA,KAAArB,SAAIU,EAAE,2BAGToI,EAAiB5F,KAChB7B,EAAAA,EAAAA,KAAA,QAAME,UAAU,cAAciE,MAAO,CAAEC,SAAU,QAASzF,SACvDU,EAAE,2BAGPmB,EAAAA,EAAAA,MAAA,OAAKN,UAAU,kCAAiCvB,SAAA,EAC9C6B,EAAAA,EAAAA,MAAA,OAAKN,UAAU,kBAAiBvB,SAAA,EAC9BqB,EAAAA,EAAAA,KAAA,UACEmC,KAAK,SACLjC,UAAU,eACVC,QAASA,IAzPF0B,KACzBqJ,GAAe9B,IAAI,IACdA,EACH,CAACvH,IAASuH,EAAKvH,MACd,EAqP8BqM,CAAkBrM,GAAOlD,SACzC,iBAIAsM,EAAWpJ,KACV7B,EAAAA,EAAAA,KAAA,OAAKE,UAAU,eAAcvB,UAC3BqB,EAAAA,EAAAA,KAACmO,EAAAA,GAAW,CACVC,aAAeC,GAnSdC,EAACD,EAAaxM,KACrC,MAAM0M,EAAU5G,EAAS6G,QAAQ3M,GACjC,IAAK0M,EAAS,OAGd,MAAME,EAAexH,EAASpF,IAAU,GAGlC6M,EAAWH,EAAQI,gBAAkBF,EAAa/M,OAClDkN,EAASL,EAAQM,cAAgBJ,EAAa/M,OAC9CoN,EACJL,EAAaM,UAAU,EAAGL,GAC1BL,EAAYW,MACZP,EAAaM,UAAUH,GAEzB1H,GAAakC,IAAI,IACZA,EACH,CAACvH,GAAQiN,MAIXxN,YAAW,KACTiN,EAAQI,eAAiBJ,EAAQM,aAC/BH,EAAWL,EAAYW,MAAMtN,OAC/B6M,EAAQU,OAAO,GACd,GAGH/D,GAAe9B,IAAI,IACdA,EACH,CAACvH,IAAQ,KACR,EAqQqByM,CAAiBD,EAAaxM,WAMxC7B,EAAAA,EAAAA,KAAA,SACEmC,KAAK,OACLQ,KAAK,UACLkC,YAAaxF,EAAE,oBACf6P,UAAY9O,GAhNR+K,EAAC/K,EAAGyB,EAAO4E,EAAQmC,KAAc,IAADuG,EACtC,UAAV/O,EAAEgL,KAA+C,MAAb,QAAf+D,EAAAlI,EAASpF,UAAM,IAAAsN,OAAA,EAAfA,EAAiBjL,UACxC9D,EAAEQ,iBACF+H,EAAkB9G,EAAO4E,EAAQmC,GACnC,EA6MkBuC,CAAc/K,EAAGyB,EAAOV,EAAKH,GAAIG,EAAKyH,UAExCwG,IAAMC,GAAQ1H,EAAS6G,QAAQ3M,GAASwN,EACxCvK,MAAOmC,EAASpF,GAChBO,SAAWhC,GAlhBDkP,EAAClP,EAAGyB,KAC9B,MAAMkD,EAAa3E,EAAEC,OAAOyE,MAE5BoC,GAAakC,IAAI,IACZA,EACH,CAACvH,GAAQkD,MAIX,MAAMC,EAAoBhB,EAAgBiB,MAAMC,GAC9CH,EAAWI,cAAc3C,SAAS0C,EAAKC,iBAIzCuC,GAAqB0B,IAAI,IACpBA,EACH,CAACvH,GAAQmD,KACR,EAigB8BsK,CAAoBlP,EAAGyB,MAG1C7B,EAAAA,EAAAA,KAAA,UACEmC,KAAK,SACLhC,QAASA,IACPwI,EAAkB9G,EAAOV,EAAKH,GAAIG,EAAKyH,UAEzChG,WACkB,QAAhBkJ,EAAC7E,EAASpF,UAAM,IAAAiK,GAAfA,EAAiB5H,SAAUuD,EAAiB5F,GAE/CsC,MAAO,CACLgC,SACkB,QAAhB4F,EAAC9E,EAASpF,UAAM,IAAAkK,IAAfA,EAAiB7H,QAAUuD,EAAiB5F,GACzC,GAEN0N,WAAY,gBAEdrP,UAAU,kBAAiBvB,SAE1BU,EAAE,oBAzMwBwC,EA8M/B,KAGR7B,EAAAA,EAAAA,KAAA,KAAArB,SAAIU,EAAE,sBAGP0I,IACCvH,EAAAA,EAAAA,MAAA,OAAKQ,GAAG,UAAUd,UAAU,UAASvB,SAAA,EACnCqB,EAAAA,EAAAA,KAAA,QAAME,UAAU,eAAeC,QAAS8H,EAAWtJ,SAAC,UAGpD6B,EAAAA,EAAAA,MAAA,OAAKN,UAAU,gBAAevB,SAAA,EAC5BqB,EAAAA,EAAAA,KAAA,OACEE,UAAU,WACViE,MAAO,CACLqL,QAAS,QACT7Q,UAEFqB,EAAAA,EAAAA,KAACmN,EAAAA,EAAa,CAACC,IAAKrF,OAGtB/H,EAAAA,EAAAA,KAAA,OAAKE,UAAU,8BAMpB,ECvoBMuP,EAAYjR,IAMlB,IANmB,OACxBwE,EAAM,QACNC,EAAO,eACPyM,EAAc,QACd5Q,EAAO,YACP6Q,GACDnR,EACCmB,QAAQC,IAAI+P,GAEZ,MAAOC,EAAcC,IAAmB3Q,EAAAA,EAAAA,UAAS,OAC1C4Q,EAAcC,IAAmB7Q,EAAAA,EAAAA,UAAS,KAC1C8Q,EAAgBC,IAAqB/Q,EAAAA,EAAAA,WAAS,IAC9CgJ,EAAcC,IAAmBjJ,EAAAA,EAAAA,WAAS,IAC1CgR,EAAmBC,IAAwBjR,EAAAA,EAAAA,UAAS,KACpDqI,EAAiBC,IAAsBtI,EAAAA,EAAAA,UAAS,KAChDiN,EAAkBiE,IAAuBlR,EAAAA,EAAAA,WAAS,IAClDwE,EAASC,IAAczE,EAAAA,EAAAA,WAAS,IAChCmR,EAAWC,IAAgBpR,EAAAA,EAAAA,UAAS,CACzCyD,KAAM,GACN4N,WAAY,GACZC,SAAU,GACVC,KAAM,GACNC,SAAU,GACVvN,YAAa,GACbE,MAAO,OAET,IAAIjC,EAAS,gCACb,MAAOmC,EAAeC,IAAoBtE,EAAAA,EAAAA,WAAS,GAC7CyR,EAAQ,IAAIjH,KACZkH,EAAMC,OAAOF,EAAMG,WAAWC,SAAS,EAAG,KAC1CC,EAAQH,OAAOF,EAAMM,WAAa,GAAGF,SAAS,EAAG,KACjDG,EAAOP,EAAMQ,eACb,EAAE9R,IAAMC,EAAAA,EAAAA,OACP8R,EAAcC,IAAmBnS,EAAAA,EAAAA,UAAS,KAEjDK,EAAAA,EAAAA,YAAU,KACJoQ,IACFW,EAAa,CACX3N,KAAMgN,EAAYhN,KAClBQ,YAAawM,EAAYxM,YACzBoN,WAAYZ,EAAYY,WACpBZ,EAAYY,WAAWtH,MAAM,KAAK,GAClC,GACJuH,SAAUb,EAAYa,SAClBb,EAAYa,SAASvH,MAAM,KAAK,GAChC,GACJwH,KAAMd,EAAYc,KAClBC,SAAUf,EAAYe,WAEpBf,EAAYtM,QACdwM,EAAgB,MAChBwB,EAAgB1B,EAAYtM,QAE9B+M,EAAoBT,EAAY2B,eAAgB,GAE5C3B,EAAYtM,QACdwM,EAAgB,MAChBwB,EAAgB1B,EAAYtM,QAEhC,GACC,CAACsM,KAEJpQ,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAgBC,aAAaC,QAAQ,aAAe,KAC1DC,QAAQC,IAAI,YACZD,QAAQC,IAAIJ,GAGRK,EAAAA,EAAKC,WAAaN,GACpBK,EAAAA,EAAKE,eAAeP,EACtB,GACC,CAACK,EAAAA,EAAMR,IACV,MAAMkS,EAAgB,GAAGX,KAAOI,KAASE,IACzC,IAAKlO,EAAQ,OAAO,KAEpB,MAMMwO,EAAqBpR,IACzB,MAAM,KAAEuC,EAAI,MAAEmC,EAAK,KAAE3C,EAAI,MAAEoD,GAAUnF,EAAEC,OAGvC,GAAa,SAAT8B,GAA4B,aAATA,EAAqB,CAC1C,MAAM6C,EAAoBhB,EAAgBiB,MAAMC,GAC9CJ,EAAMK,cAAc3C,SAAS0C,EAAKC,iBAKlC3B,IAFEwB,EAMN,CAGAsL,GAAcmB,IAAQ,IACjBA,EACH,CAAC9O,GAAgB,SAATR,EAAkBoD,EAAM,GAAKT,KACpC,EAECd,EAAkB,CACtB,OACA,WACA,WACA,MACA,WACA,UACA,UACA,QACA,SACA,WACA,gBACA,SACA,WACA,eACA,mBACA,sBACA,OACA,aACA,OACA,OACA,SACA,OACA,SACA,UACA,OACA,YACA,WACA,WACA,WACA,UACA,OACA,SACA,gBACA,eACA,OACA,SACA,UACA,aACA,YACA,WACA,WACA,UACA,UACA,YACA,YACA,WACA,YACA,YACA,UACA,WACA,WACA,UACA,eACA,aACA,sBACA,kBACA,yBACA,aACA,OACA,gBACA,gBACA,eACA,QACA,QACA,YACA,OACA,QACA,QACA,OACA,WACA,QACA,iBACA,aACA,eACA,OACA,iBACA,iBACA,UACA,cACA,OACA,UA0JF,OACEhE,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAtB,UACEqB,EAAAA,EAAAA,KAAA,OAAKE,UAAU,gBAAgBC,QA1QPC,IACtBA,EAAEC,OAAOC,UAAUC,SAAS,kBAC9B0C,GACF,EAuQ6DtE,UACzD6B,EAAAA,EAAAA,MAAA,OAAKN,UAAU,yBAAwBvB,SAAA,EACrCqB,EAAAA,EAAAA,KAAA,UAAQE,UAAU,eAAeC,QAAS8C,EAAQtE,SAAC,UAGlDqR,IAAkBhQ,EAAAA,EAAAA,KAAC0R,EAAAA,EAAU,CAAChG,QAASwE,IACvChI,IAAgBlI,EAAAA,EAAAA,KAAC6L,EAAAA,EAAQ,CAACH,QAASnE,KACpC/G,EAAAA,EAAAA,MAAA,OAAKN,UAAU,qCAAoCvB,SAAA,EACjD6B,EAAAA,EAAAA,MAAA,MAAA7B,SAAA,CAAI,IAAEU,EAAE,kBAERW,EAAAA,EAAAA,KAAA,QAAMU,SAxIKC,UACnB0E,EAAMzE,iBACN,MAAM+Q,EAAiBlS,aAAaC,QAAQ,aACtCkS,EAAYpJ,KAAKC,MAAMkJ,GAC7BhO,GAAW,GACX,IACE,GAAqB,OAAjBiM,EAAuB,CACzB,MAAM/O,EAAW,IAAIwD,SAErBxD,EAASyD,OAAO,mBAAoB6H,GACpCtL,EAASyD,OAAO,UAAWsN,EAAU5Q,IACrCH,EAASyD,OAAO,WAAY,UAC5BzD,EAASyD,OAAO,UAAWxF,GAC3B+B,EAASyD,OAAO,QAASsL,GACzB,IAAK,MAAMxE,KAAOiF,EAChBxP,EAASyD,OAAO8G,EAAKiF,EAAUjF,IAGjC,MAAMnK,QAAiBC,EAAAA,EAAMC,KAC3BC,EAAS,qBACTP,EACA,CACEQ,QAAS,CACP,eAAgB,yBAItBsC,GAAW,GAEkB,MAAzB1C,EAASM,KAAKkD,QAChB0D,GAAgB,GAChBX,EAAmBvG,EAASM,KAAKmK,SACjCpK,YAAW,KACT6G,GAAgB,GAChBX,EAAmB,GAAG,GAErB,OAEHqK,OAAOnB,SAASoB,QAAQ,gBAAgB7Q,EAASM,KAAKwQ,QACtD9B,GAAkB,GAClBE,EAAqBlP,EAASM,KAAKmK,SACnCpK,YAAW,KACT6G,GAAgB,GAChB8H,GAAkB,GAClB4B,OAAOnB,SAASsB,QAAQ,GACvB,KACHrS,QAAQC,IAAI,iBAAkBqB,EAASM,MACvC+O,EAAa,CACX3N,KAAM,GACN4N,WAAY,GACZC,SAAU,GACVC,KAAM,GACNC,SAAU,GACVvN,YAAa,GACbE,MAAO,OAETwM,EAAgB,MAEpB,KAAO,CACL,MAAMhP,EAAW,IAAIwD,SAErBxD,EAASyD,OAAO,mBAAoB6H,GACpCtL,EAASyD,OAAO,UAAWsN,EAAU5Q,IACrCH,EAASyD,OAAO,WAAY,UAC5BzD,EAASyD,OAAO,UAAWxF,GAC3B+B,EAASyD,OAAO,QAASsL,GAEzB/O,EAASyD,OAAO,eAAgB8M,GAChC,IAAK,MAAMhG,KAAOiF,EAChBxP,EAASyD,OAAO8G,EAAKiF,EAAUjF,IAGjC,MAAMnK,QAAiBC,EAAAA,EAAMC,KAAKC,EAAS,iBAAkBP,EAAU,CACrEQ,QAAS,CACPmD,OAAQ,mBACR,eAAgB,sBAGpBb,GAAW,GAEkB,MAAzB1C,EAASM,KAAKkD,QAChB0D,GAAgB,GAChBX,EAAmBvG,EAASM,KAAKmK,SACjCpK,YAAW,KACT6G,GAAgB,GAChBX,EAAmB,GAAG,GAErB,OAEHqK,OAAOnB,SAASoB,QAAQ,gBAAgB7Q,EAASM,KAAKwQ,QACtD9B,GAAkB,GAClBE,EAAqBlP,EAASM,KAAKmK,SACnCpK,YAAW,KACT6G,GAAgB,GAChB8H,GAAkB,GAClB4B,OAAOnB,SAASsB,QAAQ,GACvB,KAEH1B,EAAa,CACX3N,KAAM,GACN4N,WAAY,GACZC,SAAU,GACVC,KAAM,GACNC,SAAU,GACVvN,YAAa,GACbE,MAAO,OAETwM,EAAgB,MAEpB,CAGF,CAAE,MAAOrO,GACPmC,GAAW,GACXwE,GAAgB,GAChBX,EAAmB,0CAA2ChG,GAC9DF,YAAW,KACT6G,GAAgB,GAChBA,EAAgB,IAChBlF,GAAS,GACR,IACL,GAeqCtE,UAC3B6B,EAAAA,EAAAA,MAAA,OAAKN,UAAU,WAAUvB,SAAA,EACvBqB,EAAAA,EAAAA,KAAA,OAAKE,UAAU,WAAUvB,UACvB6B,EAAAA,EAAAA,MAAA,OAAKN,UAAU,wBAAuBvB,SAAA,EACpCqB,EAAAA,EAAAA,KAAA,SACEmC,KAAK,OACL8P,UAAWb,EACXzO,KAAK,QACLP,SAvKMiD,IACxB,MAAMC,EAAOD,EAAMhF,OAAOkF,MAAM,GAChC,GAAID,EAAM,CAGR,IADgBA,EAAKnD,KAAKsD,WAAW,UAInC,OAFAsK,EAAgB,0CAChBF,EAAgB,MAKlB,GAAIvK,EAAKK,KAbS,QAgBhB,OAFAoK,EAAgB,0CAChBF,EAAgB,MAGlBwB,EAAgB,IAEhBtB,EAAgB,IAChBF,EAAgBvK,EAClB,GAmJkBpF,UAAU,cAEZM,EAAAA,EAAAA,MAAA,OAAKN,UAAU,eAAcvB,SAAA,CAC1ByS,IACCpR,EAAAA,EAAAA,KAAA,OACEE,UAAU,cACV6B,IAAKqP,EACLpP,IAAI,aAGP4N,IACC5P,EAAAA,EAAAA,KAAA,OACEE,UAAU,cACV6B,IAAK6D,IAAIC,gBAAgB+J,GACzB5N,IAAI,iBAIVhC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,SAASiE,MAAO,CAAE4B,OAAQ,SAAUpH,UACjD6B,EAAAA,EAAAA,MAAA,OAAA7B,SAAA,EACEqB,EAAAA,EAAAA,KAACgG,EAAAA,IAAa,CAAC7B,MAAO,CAAEC,SAAU,WAClC5D,EAAAA,EAAAA,MAAA,MAAI2D,MAAO,CAAEC,SAAU,QAASzF,SAAA,CAC7BU,EAAE,gBAAgB,aAIxByQ,IACC9P,EAAAA,EAAAA,KAAA,KAAGE,UAAU,cAAavB,SAAEmR,UAIlC9P,EAAAA,EAAAA,KAAA,OAAKE,UAAU,SAAQvB,UACrBqB,EAAAA,EAAAA,KAAA,SACEmC,KAAK,OACL0C,YAAaxF,EAAE,cACfsD,KAAK,OACLuP,aAAc7B,EAAU1N,KACxBP,SAAUoP,EACVS,UAAQ,OAGZjS,EAAAA,EAAAA,KAAA,OAAKE,UAAU,WAAUvB,UACvB6B,EAAAA,EAAAA,MAAA,OAAKN,UAAU,mBAAkBvB,SAAA,EAC/B6B,EAAAA,EAAAA,MAAA,SAAON,UAAU,aAAYvB,SAAA,CAAEU,EAAE,cAAc,SAC/CW,EAAAA,EAAAA,KAAA,SACEmC,KAAK,OACLQ,KAAK,aACLuP,aAAc7B,EAAUE,WACxBnO,SAAWhC,IACT,MAAM+R,EAAe,IAAIzI,KAAKtJ,EAAEC,OAAOyE,OACjC6L,EAAQ,IAAIjH,KAClBiH,EAAMyB,SAAS,EAAG,EAAG,EAAG,GAEpBD,EAAexB,EACjB0B,MAAM,gCAENb,EAAkBpR,EACpB,EAEF6R,UAAQ,UAIdjS,EAAAA,EAAAA,KAAA,OAAKE,UAAU,WAAUvB,UACvB6B,EAAAA,EAAAA,MAAA,OAAKN,UAAU,mBAAkBvB,SAAA,EAC/B6B,EAAAA,EAAAA,MAAA,SAAON,UAAU,aAAYvB,SAAA,CAAEU,EAAE,YAAY,SAC7CW,EAAAA,EAAAA,KAAA,SACEmC,KAAK,OACLQ,KAAK,WACLmC,MAAOuL,EAAUG,SACjB8B,UAAWf,EACXnP,SAAUoP,EACVS,UAAQ,UAIdjS,EAAAA,EAAAA,KAAA,OAAKE,UAAU,WAAUvB,UACvB6B,EAAAA,EAAAA,MAAA,OAAKN,UAAU,mBAAkBvB,SAAA,EAC/B6B,EAAAA,EAAAA,MAAA,SAAON,UAAU,aAAYvB,SAAA,CAAEU,EAAE,QAAQ,SACzCW,EAAAA,EAAAA,KAAA,SACEmC,KAAK,OACLQ,KAAK,OACLmC,MAAOuL,EAAUI,KACjBrO,SAAUoP,EACVS,UAAQ,UAIdjS,EAAAA,EAAAA,KAAA,OAAKE,UAAU,SAAQvB,UACrBqB,EAAAA,EAAAA,KAAA,SACEmC,KAAK,OACL0C,YAAaxF,EAAE,YACfsD,KAAK,WACLmC,MAAOuL,EAAUK,SACjBtO,SAAUoP,OAGdxR,EAAAA,EAAAA,KAAA,OAAKE,UAAU,SAAQvB,UACrBqB,EAAAA,EAAAA,KAAA,YACE2C,KAAK,cACLiC,KAAK,IACLC,YAAaxF,EAAE,qBACfyF,MAAOuL,EAAUlN,YACjBf,SAAUoP,OAGdxR,EAAAA,EAAAA,KAAA,OAAKE,UAAU,SAAQvB,UACrBqB,EAAAA,EAAAA,KAAA,OAAKE,UAAU,UAASvB,UACtB6B,EAAAA,EAAAA,MAAA,SAAON,UAAU,OAAMvB,SAAA,CACpBU,EAAE,iBACHW,EAAAA,EAAAA,KAAA,SACEmC,KAAK,WACLQ,KAAK,mBACLD,QAASyJ,EACT/J,SA/RQhC,IAC5B,MAAM,QAAEsC,GAAYtC,EAAEC,OACtB+P,EAAoB1N,EAAQ,KA+RV1C,EAAAA,EAAAA,KAAA,QAAME,UAAU,qBAIrBqD,IACCvD,EAAAA,EAAAA,KAAA,QAAME,UAAU,cAAciE,MAAO,CAAEC,SAAU,QAASzF,SACvDU,EAAE,2BAGPmB,EAAAA,EAAAA,MAAA,OAAKN,UAAU,SAAQvB,SAAA,CACpB+E,IACC1D,EAAAA,EAAAA,KAAA,OACEE,UAAU,wCACVgG,KAAK,SAAQvH,UAEb6B,EAAAA,EAAAA,MAAA,QAAMN,UAAU,kBAAiBvB,SAAA,CAAEU,EAAE,WAAW,YAGpDW,EAAAA,EAAAA,KAAA,UAAQmC,KAAK,SAAQxD,SAAEU,EAAE,iCAOpC,EChfMkT,EAAwB/T,IAU9B,IAV+B,QACpCC,EAAO,SACPC,EAAQ,mBACR8T,EAAkB,oBAClBC,EAAmB,kBACnBC,EAAiB,kBACjBC,EAAiB,SACjBC,EAAQ,SACRC,EAAQ,WACRC,GACDtU,EACC,MAAO0R,EAAmBC,IAAwBjR,EAAAA,EAAAA,UAAS,KACpD2H,EAAoBC,IAAyB5H,EAAAA,EAAAA,WAAS,IACtD6T,EAAOC,IAAY9T,EAAAA,EAAAA,UAAS,KAC5BqE,EAAeC,IAAoBtE,EAAAA,EAAAA,WAAS,IAC5C8Q,EAAgBC,IAAqB/Q,EAAAA,EAAAA,WAAS,GAC/C+T,GAAarL,EAAAA,EAAAA,QAAO,OACpB,EAAEvI,IAAMC,EAAAA,EAAAA,MACRqI,GAAWC,EAAAA,EAAAA,QAAO,OACjBsL,EAAWC,IAAcjU,EAAAA,EAAAA,UAAS,IACnCyS,EAAiBlS,aAAaC,QAAQ,aACtCkS,EAAYD,EAAiBnJ,KAAKC,MAAMkJ,GAAkB,MACzDyB,EAAkBC,IAAuBnU,EAAAA,EAAAA,UAAS,KAClD6H,EAAeC,IAAoB9H,EAAAA,EAAAA,UAAS,KAC5CoU,EAAeC,IAAoBrU,EAAAA,EAAAA,UAAS,KAE5CsU,EAAWC,IAAgBvU,EAAAA,EAAAA,UAAS,KAE3CK,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAgBC,aAAaC,QAAQ,aAAe,KAGtDG,EAAAA,EAAKC,WAAaN,GACpBK,EAAAA,EAAKE,eAAeP,EACtB,GACC,CAACK,EAAAA,EAAMR,IAIV,IAAI+B,EAAS,oCAEb,MAAO6F,EAAUC,IAAehI,EAAAA,EAAAA,UAAS,KAClCwE,EAASC,IAAczE,EAAAA,EAAAA,WAAS,GAKjCqK,EAAeC,IACnB,IAAKA,EAAY,OAAO,KAGxB,MAAMC,EAAW,IAAIC,KAAKF,GAC1B,GAAIG,MAAMF,EAASG,WAEjB,OADAjK,QAAQ6B,MAAM,gBAAiBgI,GACxB,eAIT,MAAMK,EAAM,IAAIH,KAGVI,EAAmB,IAAIJ,KAAKD,EAASG,UAAY,MAGjDG,EAAe,IAAIC,KAAKC,eAAe,QAAS,CACpDC,SAAU,cACVC,KAAM,UACNC,OAAQ,UACRC,QAAQ,IACPC,OAAOR,GAGJS,EAAWV,EAAID,UAAYH,EAASG,UACpCY,EAAUC,KAAKC,MAAMH,EAAW,KAChCI,EAAUF,KAAKC,MAAMF,EAAU,IAC/BI,EAAQH,KAAKC,MAAMC,EAAU,IAC7BE,EAAOJ,KAAKC,MAAME,EAAQ,IAC1BE,EAAQL,KAAKC,MAAMG,EAAO,GAC1BE,EAASN,KAAKC,MAAMG,EAAO,IAC3BG,EAAQP,KAAKC,MAAMG,EAAO,KAGhC,OAAIF,EAAU,IACVC,EAAQ,GADa,GAAGb,IAEf,IAATc,EAAmB,gBAAgBd,IACnCc,EAAO,EAAU,GAAGA,OAAUd,IAC9Be,EAAQ,EAAU,GAAGA,OAAWf,IAChCgB,EAAS,GAAW,GAAGA,OAAYhB,IAChC,GAAGiB,OAAWjB,GAAc,GAGrCxK,EAAAA,EAAAA,YAAU,KACR,MAAM4L,EAAiB9F,IAChB5G,IACa,eAAd4G,EAAM+F,IACRwH,IACuB,cAAdvN,EAAM+F,KACfyH,IACF,EAIF,OADAhB,OAAOvG,iBAAiB,UAAWH,GAC5B,IAAM0G,OAAOtG,oBAAoB,UAAWJ,EAAc,GAChE,CAAC1M,EAASmU,EAAUC,IAIvB,MAAM5O,GAAoBgD,EAAS/C,QAAUX,EAmBvCS,GAAkB,CACtB,OACA,WACA,WACA,MACA,WACA,UACA,UACA,QACA,SACA,WACA,gBACA,SACA,WACA,eACA,mBACA,sBACA,OACA,aACA,OACA,OACA,SACA,OACA,SACA,UACA,OACA,YACA,WACA,WACA,WACA,UACA,OACA,SACA,gBACA,eACA,OACA,SACA,UACA,aACA,YACA,WACA,WACA,UACA,UACA,YACA,YACA,WACA,YACA,YACA,UACA,WACA,WACA,UACA,eACA,aACA,sBACA,kBACA,yBACA,aACA,OACA,gBACA,gBACA,eACA,QACA,QACA,YACA,OACA,QACA,QACA,OACA,WACA,QACA,iBACA,aACA,eACA,OACA,iBACA,iBACA,UACA,cACA,OACA,UA2CI0P,GAAmB/S,UACnBP,EAAEQ,gBAAgBR,EAAEQ,iBAExB+C,GAAW,GAEX,MAAMgO,EAAiBlS,aAAaC,QAAQ,aACtCkS,EAAYD,EAAiBnJ,KAAKC,MAAMkJ,GAAkB,KAChE,IAAI9Q,EAAW,CACbsI,QAAS/I,EAAE+C,aAAe/C,EAAEC,OAAO8C,YAAY2B,MAC/C8D,SAAU4J,EAAmB5J,SAC7BM,QAASsJ,EAAmBxR,GAC5BD,QAAS6Q,EAAU5Q,IAErB,UACoBE,EAAAA,EAAMC,KACtBC,EAAS,yBACTP,EACA,CACEQ,QAAS,CACPmD,OAAQ,mBACR,eAAgB,sBAItBkO,EAAkB,IAClBpR,YAAW,KACL2R,EAAWzE,SACbyE,EAAWzE,QAAQmF,eAAe,CAAEC,SAAU,UAChD,GACC,KACH1M,EAAY,GACd,CAAE,MAAOxC,GACHA,EAAIzD,SACNtB,QAAQ6B,MAAM,+BAAgCkD,EAAIzD,UACzCyD,EAAIC,QACbhF,QAAQ6B,MAAM,wBAAyBkD,EAAIC,SAE3ChF,QAAQ6B,MAAM,iBAAkBkD,EAAIgH,QAExC,CAAC,QACC/H,GAAW,EACb,IAGKsH,GAAYC,KAAiBhM,EAAAA,EAAAA,WAAS,IAY7CK,EAAAA,EAAAA,YAAU,KACR,MAAM4L,EAAiB9F,IACH,WAAdA,EAAM+F,KACR1M,GACF,EAMF,OAHAmT,OAAOvG,iBAAiB,UAAWH,GAG5B,KACL0G,OAAOtG,oBAAoB,UAAWJ,EAAc,CACrD,GACA,CAACzM,IAaJ,IAAKD,EAAS,OAAO,KACrB,MAgBMoV,GAAalT,UACjB,MAAMgR,EAAiBlS,aAAaC,QAAQ,aAC1BiS,GAAiBnJ,KAAKC,MAAMkJ,EAAsB,EA0BtE,OACE3R,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAtB,UACE6B,EAAAA,EAAAA,MAAA,OAAKN,UAAU,gBAAgBC,QA9CPC,IAEtBA,EAAEC,OAAOC,UAAUC,SAAS,kBAC9B7B,GACF,EA0C6DC,SAAA,EACzDqB,EAAAA,EAAAA,KAACwL,EAAAA,EAAW,CACV/M,QAASoI,EACTnI,SAvCkB+M,KACxB3E,GAAsB,EAAM,EAuCtB4E,QAAS3E,EACT4E,aAtCahL,UACnBkT,IAAY,IAuCP7D,IAAkBhQ,EAAAA,EAAAA,KAAC0R,EAAAA,EAAU,CAAChG,QAASwE,KACxC1P,EAAAA,EAAAA,MAAA,OAAKN,UAAU,0BAAyBvB,SAAA,EACtCqB,EAAAA,EAAAA,KAAA,UACEE,UAAU,eACViE,MAAO,CAAE2P,OAAQ,OACjB3T,QAASzB,EAASC,SACnB,WAID6B,EAAAA,EAAAA,MAAA,OAAKN,UAAU,kDAAiDvB,SAAA,EAC9DqB,EAAAA,EAAAA,KAAA,UACEE,UAAU,cACViC,KAAK,SACLhC,QAASA,IAAMyS,IAAWjU,UAE1BqB,EAAAA,EAAAA,KAAC+T,EAAAA,IAAc,OAEjB/T,EAAAA,EAAAA,KAAA,UACEE,UAAU,aACViC,KAAK,SACLhC,QAASA,IAAM0S,IAAWlU,UAE1BqB,EAAAA,EAAAA,KAACgU,EAAAA,IAAa,OAEhBxT,EAAAA,EAAAA,MAAA,OAAKN,UAAU,UAASvB,SAAA,EACtBqB,EAAAA,EAAAA,KAAA,OAAKE,UAAU,WAAUvB,UACvB6B,EAAAA,EAAAA,MAAA,OAAKN,UAAU,oBAAmBvB,SAAA,EAChCqB,EAAAA,EAAAA,KAAA,OAAKE,UAAU,wBAAuBvB,SACnC6T,EAAmBlN,MAElBtF,EAAAA,EAAAA,KAACmN,EAAAA,EAAa,CAACC,IAAKoF,EAAmBlN,QAGvCtF,EAAAA,EAAAA,KAAA,KAAArB,SAAIU,EAAE,0BAGTuS,EAAU5Q,KAAOwR,EAAmBzR,UACnCf,EAAAA,EAAAA,KAAA,OAAKE,UAAU,oCA2CrBF,EAAAA,EAAAA,KAAA,OAAKE,UAAU,WAAUvB,UACvB6B,EAAAA,EAAAA,MAAA,OAAKN,UAAU,yDAAwDvB,SAAA,EACrE6B,EAAAA,EAAAA,MAAA,OAAKN,UAAU,wCAAuCvB,SAAA,EACpD6B,EAAAA,EAAAA,MAAA,OAAKN,UAAU,0DAAyDvB,SAAA,EACtEqB,EAAAA,EAAAA,KAACgM,EAAAA,GAAI,CACHC,GAAI,WAAWuG,EAAmBtG,MAClC7L,OAAO,SAAQ1B,SAEd6T,EAAmBtQ,YAGtBlC,EAAAA,EAAAA,KAAA,MAAArB,SAAK4K,EAAYiJ,EAAmBpG,YAEtC5L,EAAAA,EAAAA,MAAA,OAAKN,UAAU,0DAAyDvB,SAAA,EACtEqB,EAAAA,EAAAA,KAAA,KAAArB,SACG6T,GACDA,EAAmBrP,aACnBqP,EAAmBrP,YAAYzB,OAAS,IACpC8Q,EAAmBrP,YAAY4L,UAAU,EAAG,KAC5C,OACkB,OAAlByD,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBrP,cACpB,8BAGN3C,EAAAA,EAAAA,MAAA,OAAKN,UAAU,gDAA+CvB,SAAA,EAC5D6B,EAAAA,EAAAA,MAAA,OAAKN,UAAU,gDAA+CvB,SAAA,EAC5DqB,EAAAA,EAAAA,KAAA,UACEmC,KAAK,SACLjC,UAAU,cACVC,QAASA,IA/IJQ,OAAO2M,EAAQ1E,KAC5C,IAAI/H,EAAW,CACbE,QAAS6Q,EAAU5Q,GACnBkI,QAASoE,EACT1E,SAAUA,GAEZ,UACoB1H,EAAAA,EAAMC,KAAKC,EAAS,qBAAsBP,EAAU,CACpEQ,QAAS,CACPmD,OAAQ,mBACR,eAAgB,sBAGpBmO,GACF,CAAE,MAAOjO,GAEHA,EAAIzD,WACGyD,EAAIC,QACbhF,QAAQ6B,MAAM,gBAAiBkD,EAAIC,SAEnChF,QAAQ6B,MAAM,iBAAkBkD,EAAIgH,SAExC,GA0H0BuI,CACEzB,EAAmBxR,GACnBwR,EAAmB5J,UAEtBjK,SAEA6T,EAAmB0B,gBAClBlU,EAAAA,EAAAA,KAACyN,EAAAA,IAAO,KAERzN,EAAAA,EAAAA,KAAC0N,EAAAA,IAAU,OAGf1N,EAAAA,EAAAA,KAAA,KAAGE,UAAU,YAAWvB,SACrB6T,EAAmB0B,qBAGxB1T,EAAAA,EAAAA,MAAA,OAAKN,UAAU,gDAA+CvB,SAAA,EAC5DqB,EAAAA,EAAAA,KAAA,OAAKE,UAAU,oBAAmBvB,UAChCqB,EAAAA,EAAAA,KAAA,OACEE,UAAU,cACV6B,IAAKE,EAAQ,MACbD,IAAI,WAGRhC,EAAAA,EAAAA,KAAA,KAAGE,UAAU,YAAWvB,SACrB6T,EAAmB2B,8BAM9B3T,EAAAA,EAAAA,MAAA,OAAKN,UAAU,2BAA0BvB,SAAA,EACvC6B,EAAAA,EAAAA,MAAA,MAAIN,UAAU,6BAA4BvB,SAAA,CACR,IAA/B8T,EAAoB/Q,QACnB1B,EAAAA,EAAAA,KAAA,MAAArB,SAAKU,EAAE,yBAEPoT,EAAoB9Q,KAAI,CAACwH,EAAStH,KAChCrB,EAAAA,EAAAA,MAAA,MAAIN,UAAU,QAAOvB,SAAA,EACnBqB,EAAAA,EAAAA,KAAA,OAAKE,UAAU,cAAavB,UAC1BqB,EAAAA,EAAAA,KAAA,OACEE,UAAU,cACV6B,IAC+B,IAA7BoH,EAAQgD,iBACJlK,EAAQ,MACRkH,EAAQrH,cACRqH,EAAQrH,cACRG,EAAQ,MAEdD,IAAI,WAGRxB,EAAAA,EAAAA,MAAA,OAAKN,UAAU,wCAAuCvB,SAAA,EACpDqB,EAAAA,EAAAA,KAAA,MAAArB,SAAKwK,EAAQjH,WAAe,KAE5BlC,EAAAA,EAAAA,KAAA,KAAArB,SAAIwK,EAAQhG,cAAiB,QAG/BnD,EAAAA,EAAAA,KAAA,KAAArB,SAAI4K,EAAYJ,EAAQiD,QAAW,MApBVvK,MAwB/B7B,EAAAA,EAAAA,KAAA,MAAIoP,IAAK6D,QAEXzS,EAAAA,EAAAA,MAAA,QACEC,OAAO,qBACPgB,OAAO,OACPf,SAAUgT,GAAiB/U,SAAA,CAE1B4E,IACCvD,EAAAA,EAAAA,KAAA,QACEE,UAAU,cACViE,MAAO,CAAEC,SAAU,QAASzF,SAE3BU,EAAE,2BAGPmB,EAAAA,EAAAA,MAAA,OAAKN,UAAU,yDAAwDvB,SAAA,CACpE+E,IACC1D,EAAAA,EAAAA,KAAA,OACEE,UAAU,yCACVgG,KAAK,SAAQvH,UAEbqB,EAAAA,EAAAA,KAAA,QAAME,UAAU,uBAGpBM,EAAAA,EAAAA,MAAA,OAAKN,UAAU,sDAAqDvB,SAAA,EAClEqB,EAAAA,EAAAA,KAAA,SACEmC,KAAK,SACL2C,MAAO0O,EAAUxS,GACjB2B,KAAK,gBAEPnC,EAAAA,EAAAA,MAAA,OAAKN,UAAU,kBAAiBvB,SAAA,EAC9BqB,EAAAA,EAAAA,KAAA,UACEmC,KAAK,SACLjC,UAAU,eACVC,QAASA,IAAM+K,IAAeD,IAAYtM,SAC3C,iBAIAsM,KACCjL,EAAAA,EAAAA,KAAA,OACEE,UAAU,eACViE,MAAO,CAAEiQ,SAAU,WAAYC,IAAK,QAAS1V,UAE7CqB,EAAAA,EAAAA,KAACmO,EAAAA,GAAW,CAACC,aAlTjBC,IAExBnH,GAAaoN,GAAgBA,EAAcjG,EAAYW,QACvD9D,IAAc,GAEVvD,EAAS6G,SACX7G,EAAS6G,QAAQS,OACnB,UA+SsBjP,EAAAA,EAAAA,KAAA,SACEmC,KAAK,OACL8P,UAAQ,EACR7C,IAAKzH,EACLhF,KAAK,cACLmC,MAAOmC,EACP7E,SAxfGhC,IAC3B,MAAM2E,EAAa3E,EAAEC,OAAOyE,MAG5BoC,EAAYnC,GAGc,KAAtBA,EAAWb,QACbgD,EAAY,IAId,MAAMlC,EAAoBhB,GAAgBiB,MAAMC,GAC9CH,EAAWI,cAAc3C,SAAS0C,EAAKC,iBAGzC3B,EAAiBwB,EAAkB,EAyeXkK,UArSH9O,IACP,UAAVA,EAAEgL,KAAuC,KAApBnE,EAAS/C,SAChC9D,EAAEQ,iBAEF8S,GAAiB,CACfvQ,YAAa8D,EACb2B,SAAU4J,EAAmB5J,SAC7BM,QAASsJ,EAAmBxR,GAC5BD,QAAS6Q,EAAU5Q,KAEvB,EA4RwB6D,YAAa,GAAGxF,EAAE,wBAGpBW,EAAAA,EAAAA,KAAA,UACEmC,KAAK,SACLS,SAAUqB,EACVE,MAAO,CAAEgC,QAA4B,GACrCjG,UAAU,kBAAiBvB,SAE1BU,EAAE,wCAYxB,EClnBQ,SAASkV,IACtB,MAAMC,GAAWC,EAAAA,EAAAA,OACV9N,EAAmBC,IAAwB1H,EAAAA,EAAAA,UAAS,IACpD2I,EAAWC,IAAgB5I,EAAAA,EAAAA,WAAS,IACpCwV,EAAWC,IAAgBzV,EAAAA,EAAAA,UAAS,KACpC0V,EAAUC,IAAe3V,EAAAA,EAAAA,WAAS,IAClC4V,EAAqBC,IAA0B7V,EAAAA,EAAAA,UAAS,KACxD8V,EAAaC,IAAkB/V,EAAAA,EAAAA,UAAS,KACxCJ,EAASoW,IAAchW,EAAAA,EAAAA,UAAS,KAChCiW,EAAcC,IAAmBlW,EAAAA,EAAAA,WAAS,IAC1CmW,EAAmBC,IAAwBpW,EAAAA,EAAAA,WAAS,IACpDqW,EAAoBC,IAAyBtW,EAAAA,EAAAA,WAAS,IACtDuW,EAAaC,IAAgBxW,EAAAA,EAAAA,UAAS,KACtC2H,EAAoBC,IAAyB5H,EAAAA,EAAAA,WAAS,IACtDyW,EAAmBC,IAAwB1W,EAAAA,EAAAA,UAAS,KACpD8Q,EAAgBC,KAAqB/Q,EAAAA,EAAAA,WAAS,IAC9CL,GAAWgX,KAAgB3W,EAAAA,EAAAA,UAAS,KACpCyQ,GAAamG,KAAkB5W,EAAAA,EAAAA,UAAS,KACxCgJ,GAAcC,KAAmBjJ,EAAAA,EAAAA,WAAS,IAC1CqI,GAAiBC,KAAsBtI,EAAAA,EAAAA,UAAS,KAChDgR,GAAmBC,KAAwBjR,EAAAA,EAAAA,UAAS,KACpD6H,GAAeC,KAAoB9H,EAAAA,EAAAA,UAAS,KAE5C6W,GAAsBC,KAA2B9W,EAAAA,EAAAA,UAAS,KAC1D+W,GAAUC,KAAehX,EAAAA,EAAAA,WAAS,IAElCiX,GAAcC,KAAmBlX,EAAAA,EAAAA,WAAS,IAE1CmX,GAAqBC,KAA0BpX,EAAAA,EAAAA,WAAS,IACxDqX,GAAiBC,KAAsBtX,EAAAA,EAAAA,WAAS,IAChDuX,GAAeC,KAAoBxX,EAAAA,EAAAA,WAAS,IAC5CyX,GAAsBC,KAA2B1X,EAAAA,EAAAA,WAAS,IAC1DmH,GAAawQ,KAAgB3X,EAAAA,EAAAA,UAAS,KACtC4X,GAAwBC,KAA6B7X,EAAAA,EAAAA,UAAS,KAC9D8X,GAAWC,KAAgB/X,EAAAA,EAAAA,WAAS,GAC3C,IAAIkC,GAAS,oCACT8V,GAAU,4CACd,MAAM,KAAEnF,KAASoF,EAAAA,EAAAA,MACX,EAAE9X,KAAMC,EAAAA,EAAAA,MACRqS,GAAiBlS,aAAaC,QAAQ,aACtCkS,GAAYD,GAAiBnJ,KAAKC,MAAMkJ,IAAkB,MAChEpS,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAgBC,aAAaC,QAAQ,aAAe,KAC1DC,QAAQC,IAAI,YACZD,QAAQC,IAAIJ,GAGRK,EAAAA,EAAKC,WAAaN,GACpBK,EAAAA,EAAKE,eAAeP,EACtB,GACC,CAACK,EAAAA,EAAMR,MAOVE,EAAAA,EAAAA,YAAU,KACR,MAAMoS,EAAiBlS,aAAaC,QAAQ,aAC1BiS,GAAiBnJ,KAAKC,MAAMkJ,GAE9CyF,IAAe,GACd,IACH,MAAMA,GAAgBzW,UACpB,MAAMgR,EAAiBlS,aAAaC,QAAQ,aAE5C,IAAImB,EAAW,CACbE,SAFgB4Q,EAAiBnJ,KAAKC,MAAMkJ,GAAkB,MAE3C3Q,IAErB,IAQE,MAAMqW,SAPYnW,EAAAA,EAAMC,KAAK+V,GAAU,gBAAiBrW,EAAU,CAChEQ,QAAS,CACPmD,OAAQ,mBACR,eAAgB,uBAGJjD,KAAK8H,QACO1H,KAAKC,GAAWA,EAAOZ,KAEnDiU,EAAeoC,EACjB,CAAE,MAAO3S,GAEHA,EAAIzD,WACGyD,EAAIC,QACbhF,QAAQ6B,MAAM,gBAAiBkD,EAAIC,SAEnChF,QAAQ6B,MAAM,iBAAkBkD,EAAIgH,SAExC,IAEFnM,EAAAA,EAAAA,YAAU,KACR,MAAMoS,EAAiBlS,aAAaC,QAAQ,aACtCkS,EAAYD,EAAiBnJ,KAAKC,MAAMkJ,GAAkB,KAChEkE,GAAajE,QACA0F,IAATvF,KAGFwF,GAAWxF,IACXyF,KACF,GACC,CAAC1Y,KACJS,EAAAA,EAAAA,YAAU,KACJV,IACF2Y,UAEWF,IAATvF,IACFwF,GAAWxF,GACb,GACC,CAAClT,GAAWmY,GAAWjF,KAC1B,MAAMyF,GAAkB7W,UACtB,MAAMgR,EAAiBlS,aAAaC,QAAQ,aAE5C,IAAImB,EAAW,CACbE,SAFgB4Q,EAAiBnJ,KAAKC,MAAMkJ,GAAkB,MAE3C3Q,GACnB+Q,KAAMA,IAER,IAOE,IAAI0F,SANcvW,EAAAA,EAAMC,KAAKC,GAAS,kBAAmBP,EAAU,CACjEQ,QAAS,CACPmD,OAAQ,mBACR,eAAgB,uBAGJjD,KAAK8H,QACA,IAAjBoO,EAAM/V,QACRuV,IAAa,GACbT,IAAmB,KAGW,mBAA1BiB,EAAM,GAAGC,eACXT,IAAa,GACbT,IAAmB,GACnBI,IAAwB,IAEK,OAA3Ba,EAAM,GAAGE,gBACXV,IAAa,GACbT,IAAmB,IAEU,QAA3BiB,EAAM,GAAGE,gBACXV,IAAa,GACbP,IAAiB,GACjBE,IAAwB,IAG9B,CAAE,MAAOlS,GAEHA,EAAIzD,WACGyD,EAAIC,QACbhF,QAAQ6B,MAAM,gBAAiBkD,EAAIC,SAEnChF,QAAQ6B,MAAM,iBAAkBkD,EAAIgH,SAExC,GAEI6L,GAAa5W,UACjB,IAAIE,EAAW,CACbkR,KAAMA,GAER,IAOE,IAAI0F,SANcvW,EAAAA,EAAMC,KAAKC,GAAS,sBAAuBP,EAAU,CACrEQ,QAAS,CACPmD,OAAQ,mBACR,eAAgB,uBAGJjD,KAAK8D,MACrB6P,EAAWuC,EAAMzW,IAGjB4W,GAA2BH,EAAMzW,IACjC6W,GAAmBJ,EAAMzW,IACzB8W,GAAeL,EAAMzW,GACvB,CAAE,MAAO0D,GAEHA,EAAIzD,WACGyD,EAAIC,QACbhF,QAAQ6B,MAAM,gBAAiBkD,EAAIC,SAEnChF,QAAQ6B,MAAM,iBAAkBkD,EAAIgH,SAExC,IAEFnM,EAAAA,EAAAA,YAAU,KACQ,KAAZT,GACFiZ,IACF,GACC,CAACjZ,IACJ,MAAMiZ,GAAwBpX,UAC5B,MAAMgR,EAAiBlS,aAAaC,QAAQ,aAE5C,IAAImB,EAAW,CACbE,SAFgB4Q,EAAiBnJ,KAAKC,MAAMkJ,GAAkB,MAE3C3Q,GACnB4H,SAAU9J,GAGZ,IACE,MAAMyF,QAAYrD,EAAAA,EAAMC,KAAKC,GAAS,wBAAyBP,EAAU,CACvEQ,QAAS,CACPmD,OAAQ,mBACR,eAAgB,sBAGpB7E,QAAQC,IAAI2E,EAAIhD,KAAK8H,SACrB1J,QAAQC,IAAI,OACZmX,GAA0BxS,EAAIhD,KAAK8H,QACrC,CAAE,MAAO3E,GAEHA,EAAIzD,WACGyD,EAAIC,QACbhF,QAAQ6B,MAAM,gBAAiBkD,EAAIC,SAEnChF,QAAQ6B,MAAM,iBAAkBkD,EAAIgH,SAExC,GAEIsM,GAAuBrX,UAC3B,IAAIE,EAAW,CACbE,QAASlC,GAAUmC,GACnB4H,SAAU5H,GAGZ,IACE,MAAMuD,QAAYrD,EAAAA,EAAMC,KAAKC,GAAS,uBAAwBP,EAAU,CACtEQ,QAAS,CACPmD,OAAQ,mBACR,eAAgB,sBAIpBoR,EAAqBrR,EAAIhD,KAAK0W,OAChC,CAAE,MAAOvT,GAEHA,EAAIzD,WACGyD,EAAIC,QACbhF,QAAQ6B,MAAM,gBAAiBkD,EAAIC,SAEnChF,QAAQ6B,MAAM,iBAAkBkD,EAAIgH,SAExC,IAEFnM,EAAAA,EAAAA,YAAU,KACQ,KAAZT,GACFoZ,IACF,GACC,CAACpZ,IACJ,MAAMoZ,GAAiBvX,UACrB,IAAIE,EAAW,CACb+H,SAAU9J,GAEZa,QAAQC,IAAIiB,GACZ,IACE,MAAM0D,QAAYrD,EAAAA,EAAMC,KAAKC,GAAS,kBAAmBP,EAAU,CACjEQ,QAAS,CACPmD,OAAQ,mBACR,eAAgB,sBAIG,KAAnBD,EAAIhD,KAAK8D,YAAmCiS,IAAnB/S,EAAIhD,KAAK8D,MACpCmP,EAAS,WAEL3V,IAAaA,GAAUmC,KAAOuD,EAAIhD,KAAK8D,MAAMtE,QAC/CmV,IAAY,GAEZA,IAAY,GAGhBJ,GAAevR,EAAIhD,KAAK8D,MAC1B,CAAE,MAAOX,GAEHA,EAAIzD,SACNtB,QAAQ6B,MAAM,kBAAmBkD,EAAIzD,UAC5ByD,EAAIC,QACbhF,QAAQ6B,MAAM,gBAAiBkD,EAAIC,SAEnChF,QAAQ6B,MAAM,iBAAkBkD,EAAIgH,QAExC,GAGIkM,GAA6BjX,UACjC,MAAMgR,EAAiBlS,aAAaC,QAAQ,aACtCkS,EAAYpJ,KAAKC,MAAMkJ,GACvBwG,EAAkB,IAAInD,EAAapD,EAAU5Q,IACnD,IAAIH,EAAW,CACb+H,SAAUwP,EACVrX,QAASlC,GAAUmC,GACnBqX,SAAUF,GAGZ,IACE,MAAM5T,QAAYrD,EAAAA,EAAMC,KACtBC,GAAS,8BACTP,EACA,CACEQ,QAAS,CACPmD,OAAQ,mBACR,eAAgB,sBAKtBwR,GAAwBzR,EAAIhD,KAAK8H,QACnC,CAAE,MAAO3E,GAEHA,EAAIzD,WACGyD,EAAIC,QACbhF,QAAQ6B,MAAM,gBAAiBkD,EAAIC,SAEnChF,QAAQ6B,MAAM,iBAAkBkD,EAAIgH,SAExC,GAGImM,GAAqBlX,UACzB,IAAIE,EAAW,CACb+H,SAAUwP,EACVrX,QAASlC,GAAUmC,IAGrB,IACE,MAAMuD,QAAYrD,EAAAA,EAAMC,KAAKC,GAAS,qBAAsBP,EAAU,CACpEQ,QAAS,CACPmD,OAAQ,mBACR,eAAgB,sBAGI,MAApBD,EAAIhD,KAAKkD,OACX2R,IAAgB,GACa,MAApB7R,EAAIhD,KAAKkD,QAClB2R,IAAgB,EAEpB,CAAE,MAAO1R,GAEHA,EAAIzD,WACGyD,EAAIC,QACbhF,QAAQ6B,MAAM,gBAAiBkD,EAAIC,SAEnChF,QAAQ6B,MAAM,iBAAkBkD,EAAIgH,SAExC,GA8BI4M,GAAoBA,KACxBhC,IAAuB,GACvBjL,SAASkN,KAAKpU,MAAMqU,UAAY,QAAQ,GAgC1CjZ,EAAAA,EAAAA,YAAU,KACJoQ,IACF8I,GAAiB9I,GAAY5O,QAC/B,GACC,CAAC4O,KACJ,MAAM8I,GAAmB9X,UACvB,MAAMgR,EAAiBlS,aAAaC,QAAQ,aAC1BiS,GAAiBnJ,KAAKC,MAAMkJ,GAC9C,IAAI9Q,EAAW,CACbE,QAAS4O,GAAY5O,QACrB2X,SAAU/I,GAAY5O,SAExB,IAOE,IAAI0W,SANcvW,EAAAA,EAAMC,KAAK+V,GAAU,gBAAiBrW,EAAU,CAChEQ,QAAS,CACPmD,OAAQ,mBACR,eAAgB,uBAGJjD,KAAK8H,QACrB1J,QAAQC,IAAI6X,GACZ,MAAMJ,EAAgBI,EAAM9V,KAAKC,GAAWA,EAAOZ,KAEnD+T,EAAuBsC,EACzB,CAAE,MAAO3S,GAEHA,EAAIzD,WACGyD,EAAIC,QACbhF,QAAQ6B,MAAM,gBAAiBkD,EAAIC,SAEnChF,QAAQ6B,MAAM,iBAAkBkD,EAAIgH,SAExC,GA+CIoM,GAAiBnX,UACrB,IAAIE,EAAW,CACb+H,SAAUwP,EACVrX,QAASlC,GAAUmC,IAGrB,IACE,MAAMuD,QAAYrD,EAAAA,EAAMC,KAAKC,GAAS,kBAAmBP,EAAU,CACjEQ,QAAS,CACPmD,OAAQ,mBACR,eAAgB,sBAGpB7E,QAAQC,IAAI,YACZiX,GAAatS,EAAIhD,KAAK8H,SACtBqM,EAAanR,EAAIhD,KAAK8H,QACxB,CAAE,MAAO3E,GAEHA,EAAIzD,WACGyD,EAAIC,QACbhF,QAAQ6B,MAAM,gBAAiBkD,EAAIC,SAEnChF,QAAQ6B,MAAM,iBAAkBkD,EAAIgH,SAExC,IA2EFnM,EAAAA,EAAAA,YAAU,KAGN8L,SAASkN,KAAKpU,MAAMqU,UAFlB3Q,EAE8B,SAGA,OAI3B,KACLwD,SAASkN,KAAKpU,MAAMqU,UAAY,MAAM,IAEvC,CAAC3Q,KACJtI,EAAAA,EAAAA,YAAU,KACR,MAAM4L,EAAiB9F,IACH,WAAdA,EAAM+F,KACRtD,GAAa,EACf,EAOF,OAHA+J,OAAOvG,iBAAiB,UAAWH,GAG5B,KACL0G,OAAOtG,oBAAoB,UAAWJ,EAAc,CACrD,GACA,KACH5L,EAAAA,EAAAA,YAAU,KACR,MAAM4L,EAAiB9F,IAChBwC,IAEa,eAAdxC,EAAM+F,IACRuN,GAAUhS,EAAoB,GACP,cAAdtB,EAAM+F,KACfuN,GAAUhS,EAAoB,GAChC,EAKF,OAFA0E,SAASC,iBAAiB,UAAWH,GAE9B,KACLE,SAASE,oBAAoB,UAAWJ,EAAc,CACvD,GACA,CAACxE,EAAmBkB,IACvB,MAEMiL,GAAa2C,EAAYhT,QAAQtB,GAASA,EAAKmE,OAC/CqT,GAAa9W,IACbA,EAAQ,EACV+E,EAAqBkM,GAAWpR,QACvBG,EAAQiR,GAAWpR,OAC5BkF,EAAqB,GAErBA,EAAqB/E,EACvB,EAIFlC,QAAQC,IAAIkT,IACZ,MAAO8F,GAAeC,KAAoB3Z,EAAAA,EAAAA,WAAS,IAC5CsT,GAAoBsG,KAAyB5Z,EAAAA,EAAAA,UAAS,KACtDuT,GAAqBsG,KAA0B7Z,EAAAA,EAAAA,UAAS,KACxD8Z,GAAiBC,KAAsB/Z,EAAAA,EAAAA,UAAS,KAChDga,GAAmBC,KAAwBja,EAAAA,EAAAA,UAAS,IACpDka,GAAyBC,KAA8Bna,EAAAA,EAAAA,UAAS,IACjEoa,GAAsB3Y,MAAOK,EAAIuY,EAAU1X,KAC/CwX,GAA2BrY,GAC3BwY,GAAiBxY,EAAIuY,GACrBN,GAAmBpX,GACnB,IAAIhB,EAAW,CACbG,GAAIA,EACJ4H,SAAU2Q,EACVxY,QAAS6Q,GAAU5Q,IAErB,IACE,MAAMuD,QAAYrD,EAAAA,EAAMC,KAAKC,GAAS,mBAAoBP,EAAU,CAClEQ,QAAS,CACPmD,OAAQ,sBAGZsU,GAAsBvU,EAAIhD,KAAK8H,QAAQ,IACvCwP,IAAiB,EACnB,CAAE,MAAOnU,GAEHA,EAAIzD,WACGyD,EAAIC,QACbhF,QAAQ6B,MAAM,gBAAiBkD,EAAIC,SAEnChF,QAAQ6B,MAAM,iBAAkBkD,EAAIgH,SAExC,GAEI8N,GAAmB7Y,MAAO2M,EAAQiM,KACtC,IAAI1Y,EAAW,CACbG,GAAIsM,EACJ1E,SAAU2Q,EACVxY,QAAS6Q,GAAU5Q,IAErB,IACE,MAAMuD,QAAYrD,EAAAA,EAAMC,KAAKC,GAAS,sBAAuBP,EAAU,CACrEQ,QAAS,CACPmD,OAAQ,sBAGZuU,GAAuBxU,EAAIhD,KAAK8H,QAClC,CAAE,MAAO3E,GAEHA,EAAIzD,WACGyD,EAAIC,QACbhF,QAAQ6B,MAAM,gBAAiBkD,EAAIC,SAEnChF,QAAQ6B,MAAM,iBAAkBkD,EAAIgH,SAExC,GAoDF,OACElL,EAAAA,EAAAA,MAAAP,EAAAA,SAAA,CAAAtB,SAAA,EACEqB,EAAAA,EAAAA,KAACyZ,EAAAA,EAAS,IACTvR,KAAgBlI,EAAAA,EAAAA,KAAC6L,EAAAA,EAAQ,CAACH,QAASnE,KACnCyI,IAAkBhQ,EAAAA,EAAAA,KAAC0R,EAAAA,EAAU,CAAChG,QAASwE,MACxClQ,EAAAA,EAAAA,KAAA,WAASE,UAAU,2BAA0BvB,UAC3CqB,EAAAA,EAAAA,KAAA,OAAKE,UAAU,eAAcvB,UAC3B6B,EAAAA,EAAAA,MAAA,OAAKN,UAAU,WAAUvB,SAAA,EACvBqB,EAAAA,EAAAA,KAAA,OAAKE,UAAU,WAAUvB,UACvB6B,EAAAA,EAAAA,MAAA,OAAKN,UAAU,2BAA0BvB,SAAA,EACvCqB,EAAAA,EAAAA,KAAA,OAAKE,UAAU,0BAAyBvB,UACtCqB,EAAAA,EAAAA,KAAA,MAAArB,SAAKgR,GAAYhN,UAEnBnC,EAAAA,EAAAA,MAAA,OAAKN,UAAU,2BAA0BvB,SAAA,CACtCsX,KACCjW,EAAAA,EAAAA,KAAA,OAAKE,UAAU,iBAAgBvB,UAC7B6B,EAAAA,EAAAA,MAAA,OAAKN,UAAU,2BAA0BvB,SAAA,EACvC6B,EAAAA,EAAAA,MAAA,OACEN,UAAU,kCACVC,QAASmY,GAAkB3Z,SAAA,EAE3BqB,EAAAA,EAAAA,KAAA,OAAKE,UAAU,gBAAevB,UAC5BqB,EAAAA,EAAAA,KAAA,OAAKE,UAAU,+CAA8CvB,UAC3DqB,EAAAA,EAAAA,KAAA,OAAK+B,IAAK4N,GAAYtM,MAAOrB,IAAI,gBAGrChC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,cAAavB,UAC1BqB,EAAAA,EAAAA,KAAA,OAAKE,UAAU,oBAAmBvB,UAChCqB,EAAAA,EAAAA,KAAA,MAAArB,SAAK,GAAGU,GAAE,iCAIhBW,EAAAA,EAAAA,KAAA,OACEE,UAAU,2CACVC,QAASmY,GAAkB3Z,UAE3B6B,EAAAA,EAAAA,MAAA,OAAKN,UAAU,kCAAiCvB,SAAA,EAC9CqB,EAAAA,EAAAA,KAAA,OAAKE,UAAU,cAAavB,UAC1BqB,EAAAA,EAAAA,KAAA,MAAArB,SAAK,GAAGU,GAAE,oBAEZW,EAAAA,EAAAA,KAAA,OAAKE,UAAU,gBAAevB,UAC5BqB,EAAAA,EAAAA,KAAA,OAAKE,UAAU,iBAAgBvB,UAC7BqB,EAAAA,EAAAA,KAAA,OAAK+B,IAAK2X,EAAW1X,IAAI,0BAQtCgV,IACChX,EAAAA,EAAAA,KAACoG,EAAgB,CACfC,YAAaA,GACbxH,UAAWA,GACXyH,WAjSD3F,UACjBmX,GAAehZ,EAAQ,EAiSLyH,sBA/RU5F,UAC5BmX,GAAehZ,EAAQ,EA+RL0H,sBAlOU7F,UAC5BmX,GAAehZ,EAAQ,KAoOPkB,EAAAA,EAAAA,KAAA,KAAArB,SAAI,GAAGU,GAAE,gCAKjBW,EAAAA,EAAAA,KAAA,OAAKE,UAAU,WAAUvB,UACvB6B,EAAAA,EAAAA,MAAA,OAAKN,UAAU,2BAA0BvB,SAAA,EACvC6B,EAAAA,EAAAA,MAAA,OAAKN,UAAU,2CAA0CvB,SAAA,EACvD6B,EAAAA,EAAAA,MAAA,OAAKN,UAAU,iDAAgDvB,SAAA,CAC5D4X,KACCvW,EAAAA,EAAAA,KAAA,UACEmC,KAAK,SACLhC,QAASA,IAjRVQ,WACnB,IAAI8V,EAAgB,CAClB1V,QAASlC,GAAUmC,GACnB4H,SAAU9J,EACViT,KAAMA,GAGR,IACE,MAAMxN,QAAYrD,EAAAA,EAAMC,KAAKC,GAAS,gBAAiBqV,EAAe,CACpEpV,QAAS,CACPmD,OAAQ,mBACR,eAAgB,sBAGpB7E,QAAQC,IAAI2E,GACZ0L,IAAkB,GAClBE,GAAqB,+BACrBqH,KACAlW,YAAW,KACT2O,IAAkB,GAClB4B,OAAOnB,SAASsB,QAAQ,GACvB,IACL,CAAE,MAAOtN,GAEHA,EAAIzD,WACGyD,EAAIC,QACbhF,QAAQ6B,MAAM,gBAAiBkD,EAAIC,SAEnChF,QAAQ6B,MAAM,iBAAkBkD,EAAIgH,SAExC,GAmPmCiO,CAAa5H,IAC5B7R,UAAW,aAAsCvB,SAEhD,GAAGU,GAAE,cAGTsX,KACC3W,EAAAA,EAAAA,KAAA,UACEmC,KAAK,SACLjC,UAAW,aAAsCvB,SAEhD,GAAGU,GAAE,iBAGR4W,KACAjW,EAAAA,EAAAA,KAAA,UACEmC,KAAK,SACLhC,QAhYGQ,UACvB,IAAIE,EAAW,CACb+H,SAAU9J,EACViC,QAASlC,GAAUmC,IAGrB,IACE,MAAMuD,QAAYrD,EAAAA,EAAMC,KAAKC,GAAS,qBAAsBP,EAAU,CACpEQ,QAAS,CACPmD,OAAQ,mBACR,eAAgB,sBAGpB7E,QAAQC,IAAI,MACZgY,GAA2B9Y,GACH,MAApByF,EAAIhD,KAAKkD,OACX2R,IAAgB,GACa,MAApB7R,EAAIhD,KAAKkD,QAClB2R,IAAgB,EAEpB,CAAE,MAAO1R,GAEHA,EAAIzD,WACGyD,EAAIC,QACbhF,QAAQ6B,MAAM,gBAAiBkD,EAAIC,SAEnChF,QAAQ6B,MAAM,iBAAkBkD,EAAIgH,SAExC,GAqWoBxL,UAAW,cACTiW,GAAe,iBAAmB,IACjCxX,SAEF,GAAGU,GAAE,kBAGTkX,KACCvW,EAAAA,EAAAA,KAAA,UACEmC,KAAK,SACLhC,QAASA,IAxUJQ,WACzB,IAAIiZ,EAAW,CACb7Y,QAASlC,GAAUmC,GACnB4H,SAAU9J,EACViT,KAAMA,GAGR,UACoB7Q,EAAAA,EAAMC,KAAKC,GAAS,sBAAuBwY,EAAU,CACrEvY,QAAS,CACPmD,OAAQ,mBACR,eAAgB,sBAGpB2D,IAAgB,GAChBX,GAAmB,wBACnBgN,EAAS,UACX,CAAE,MAAO9P,GAEHA,EAAIzD,WACGyD,EAAIC,QACbhF,QAAQ6B,MAAM,gBAAiBkD,EAAIC,SAEnChF,QAAQ6B,MAAM,iBAAkBkD,EAAIgH,SAExC,GA+SmCmO,CAAmB9H,IAClC7R,UAAW,cAAuCvB,SAEjD,GAAGU,GAAE,cAGT4W,KACCjW,EAAAA,EAAAA,KAAA,UACEmC,KAAK,SACLhC,QAASA,KAAM2Z,OAlgBnC5E,EADkBlU,EAmgB4BlC,GAjgB9CkZ,GAAqBhX,GACrBoU,GAAgB,QAChB/J,SAASkN,KAAKpU,MAAMqU,UAAY,UAJdxX,KAmgBqC,EACnCd,UAAU,YAAWvB,SAEpB,GAAGU,GAAE,0BAYX4W,KACCjW,EAAAA,EAAAA,KAAA,OAAKE,UAAU,6CAA4CvB,UACzDqB,EAAAA,EAAAA,KAAA,UACEmC,KAAK,SACLhC,QAASA,KA1gB7B2G,GAAsB,QACtBE,GAAiB,6CA0gBG9G,UAAU,aAAYvB,SAErB,GAAGU,GAAE,sBAIX4W,KACCjW,EAAAA,EAAAA,KAAA,OAAKE,UAAU,6CAA4CvB,UACzDqB,EAAAA,EAAAA,KAAA,UACEmC,KAAK,SACLhC,QAASA,KAh0B7B0U,GAAY,EAg0BmC,EAC3B3U,UAAU,YAAWvB,SAEpB,GAAGU,GAAE,yBAKdmB,EAAAA,EAAAA,MAAA,OAAKN,UAAU,qCAAoCvB,SAAA,EACjDqB,EAAAA,EAAAA,KAAA,MAAArB,SAAK,GAAGU,GAAE,iBACVW,EAAAA,EAAAA,KAAA,KAAArB,SAAIgR,GAAYxM,eAChB3C,EAAAA,EAAAA,MAAA,OAAKN,UAAU,gCAA+BvB,SAAA,EAC5C6B,EAAAA,EAAAA,MAAA,OAAKN,UAAU,+CAA8CvB,SAAA,EAC3DqB,EAAAA,EAAAA,KAAA,OAAKE,UAAU,gBAAevB,UAC5BqB,EAAAA,EAAAA,KAAA,OAAKE,UAAU,cAAavB,UAC1BqB,EAAAA,EAAAA,KAAA,OAAK+B,IAAKgY,EAAO/X,IAAI,gBAGzBhC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,cAAavB,UAC1BqB,EAAAA,EAAAA,KAAA,MAAArB,SACoC,IAAjCgR,GAAYxD,iBACT,SACA,kBAIV3L,EAAAA,EAAAA,MAAA,OAAKN,UAAU,+CAA8CvB,SAAA,EAC3DqB,EAAAA,EAAAA,KAAA,OAAKE,UAAU,gBAAevB,UAC5BqB,EAAAA,EAAAA,KAAA,OAAKE,UAAU,cAAavB,UAC1BqB,EAAAA,EAAAA,KAAA,OAAK+B,IAAKiY,EAAOhY,IAAI,gBAGzBhC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,cAAavB,UAC1BqB,EAAAA,EAAAA,KAAA,MAAArB,SAAKgR,GAAYe,iBAGrBlQ,EAAAA,EAAAA,MAAA,OAAKN,UAAU,+CAA8CvB,SAAA,EAC3DqB,EAAAA,EAAAA,KAAA,OAAKE,UAAU,gBAAevB,UAC5BqB,EAAAA,EAAAA,KAAA,OAAKE,UAAU,cAAavB,UAC1BqB,EAAAA,EAAAA,KAAA,OAAK+B,IAAKkY,EAAOjY,IAAI,gBAGzBhC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,cAAavB,UAC1B6B,EAAAA,EAAAA,MAAA,MAAA7B,SAAA,CACGgR,GAAYc,KAAK,OAAK,IACtBd,GAAYY,YAAcZ,GAAYa,SA1evC0J,EAACC,EAAWC,KAClC,MAAMC,GAAQC,EAAAA,EAAAA,GAASH,GACjBI,GAAMD,EAAAA,EAAAA,GAASF,GAEfI,GAAWlQ,EAAAA,EAAAA,IAAO+P,EAAO,KACzBI,GAASnQ,EAAAA,EAAAA,IAAOiQ,EAAK,KACrBvJ,GAAQ1G,EAAAA,EAAAA,IAAO+P,EAAO,OAE5B,MAAO,GAAGG,KAAYxJ,OAAWyJ,KAAUzJ,GAAO,EAme1BkJ,CACEvK,GAAYY,WACZZ,GAAYa,WAGdhQ,EAAAA,EAAAA,MAAA,QAAA7B,SAAA,CAAM,IAAE,GAAGU,GAAE,0CAOzBW,EAAAA,EAAAA,KAAA,OAAKE,UAAU,qCAAoCvB,UA6BjDqB,EAAAA,EAAAA,KAAA,OAAKE,UAAU,iBAAgBvB,UAC7B6B,EAAAA,EAAAA,MAAA,OAAKN,UAAU,SAAQvB,SAAA,EACrB6B,EAAAA,EAAAA,MAAA,MAAA7B,SAAA,CAAK,GAAGU,GAAE,sBAAsB,QAChCW,EAAAA,EAAAA,KAAA,OAAKE,UAAU,uCAAsCvB,UACnDqB,EAAAA,EAAAA,KAAA,OAAKE,UAAU,uCAAsCvB,UAEnD6B,EAAAA,EAAAA,MAAA,OAAKN,UAAU,yDAAwDvB,SAAA,EACrE6B,EAAAA,EAAAA,MAAA,OAAKN,UAAU,wCAAuCvB,SAAA,CACnDoX,GAAqBrU,OAAS,IAC7B1B,EAAAA,EAAAA,KAAA,QAAArB,SAAOoX,GAAqBrU,UAG9B1B,EAAAA,EAAAA,KAAA,KAAGE,UAAU,YAAWvB,SACrBoX,IACDA,GAAqBrU,OAAS,EAC1BqU,GAAqBpU,KACnB,CAAC+Y,EAAQ7Y,KACPrB,EAAAA,EAAAA,MAAA,QAAA7B,SAAA,EACEqB,EAAAA,EAAAA,KAACgM,EAAAA,GAAI,CACHC,GAAI,WAAWyO,EAAOxO,MACtB7L,OAAO,SAAQ1B,SAEd+b,EAAOxY,WAETL,IACCkU,GAAqBrU,OAAS,GAC9B,OATOgZ,EAAOxO,OAatB,QAIP6J,IACDA,GAAqBrU,OAAS,GAC5B1B,EAAAA,EAAAA,KAAA,MAAIE,UAAU,SAAQvB,SACnBoX,GAAqBpU,KAAI,CAAC+Y,EAAQ7Y,KACjC7B,EAAAA,EAAAA,KAAA,MAAArB,UACEqB,EAAAA,EAAAA,KAACgM,EAAAA,GAAI,CACHC,GAAI,WAAWyO,EAAOxO,MACtB7L,OAAO,SAAQ1B,UAEfqB,EAAAA,EAAAA,KAAA,OACEE,UAAU,cACV6B,IACE2Y,EAAO5Y,eACPG,EAAQ,MAEVD,IAAI,eAXDH,QAkBb7B,EAAAA,EAAAA,KAAA,KAAArB,SAAIU,GAAE,oCAYpBmB,EAAAA,EAAAA,MAAA,OAAKN,UAAU,qCAAoCvB,SAAA,EACjDqB,EAAAA,EAAAA,KAAA,MAAArB,SAAK,GAAGU,GAAE,cACVW,EAAAA,EAAAA,KAAA,OAAKE,UAAU,MAAKvB,SACjBqY,IAAalE,GAAWpR,OAAS,GAChC1B,EAAAA,EAAAA,KAAA,OAAKE,UAAU,WAAUvB,SACtBmU,GAAWnR,KAAI,CAACR,EAAMU,IACrBV,EAAKmE,MACHtF,EAAAA,EAAAA,KAAA,OAAKE,UAAU,oBAAmBvB,UAChC6B,EAAAA,EAAAA,MAAA,OAAKN,UAAU,kBAAiBvB,SAAA,EAC9BqB,EAAAA,EAAAA,KAAA,OAAKE,UAAU,oCAAmCvB,UAChDqB,EAAAA,EAAAA,KAACmN,EAAAA,EAAa,CACZC,IAAKjM,EAAKmE,KACVnF,QAASA,KACH6W,IACFsC,GACEnY,EAAKH,GACLG,EAAKyH,SACL/G,GAEF8W,GAAU9W,EAAQ,KAjbhCiG,GAAa,GAobC6Q,GAAU9W,EAAQ,GACpB,OAIN7B,EAAAA,EAAAA,KAACgM,EAAAA,GAAI,CACHC,GAAI,WAAW9K,EAAK+K,MACpB7L,OAAO,SACPH,UAAU,gBAAevB,SAExBwC,EAAKe,eAzB4BL,GA6BtC,UAIR7B,EAAAA,EAAAA,KAAA,KAAArB,SAAI,GAAGU,GAAE,4BAIZ2X,IACClE,GAAW7N,MACR9D,GACCA,EAAKmE,MACgB,kBAAdnE,EAAKmE,MACS,KAArBnE,EAAKmE,KAAKpB,WAEZlE,EAAAA,EAAAA,KAAA,OAAKE,UAAU,gBAAevB,UAC5BqB,EAAAA,EAAAA,KAACgM,EAAAA,GAAI,CAACC,GAAI,eAAe8F,KAAOpT,SAAE,GAAGU,GACnC,kCAUnBwI,IACCrH,EAAAA,EAAAA,MAAA,OAAKQ,GAAG,UAAUd,UAAU,UAASvB,SAAA,EACnCqB,EAAAA,EAAAA,KAAA,QAAME,UAAU,eAAeC,QA9dpB8H,IAAMH,GAAa,GA8dqBnJ,SAAC,UAGpD6B,EAAAA,EAAAA,MAAA,OAAKN,UAAU,gBAAevB,SAAA,CAC3BmU,GAAWpR,OAAS,EACnBoR,GAAWnR,KAAI,CAACR,EAAMU,KACpBrB,EAAAA,EAAAA,MAAA,OACEN,UAAU,WACViE,MAAO,CACLqL,QAAS7I,IAAsB9E,EAAQ,EAAI,QAAU,QACrDlD,SAAA,EAGF6B,EAAAA,EAAAA,MAAA,OAAKN,UAAU,aAAYvB,SAAA,CACxBkD,EAAQ,EAAE,MAAIiR,GAAWpR,UAG3BP,EAAKmE,MACe,kBAAdnE,EAAKmE,MACZnE,EAAKmE,KAAKqV,MAAM,wCACd3a,EAAAA,EAAAA,KAAA,OAAK+B,IAAKZ,EAAKmE,KAAMtD,IAAI,QACvBb,EAAKmE,MACc,kBAAdnE,EAAKmE,MACZnE,EAAKmE,KAAKqV,MACR,2CAEFna,EAAAA,EAAAA,MAAA,SAAOsF,UAAQ,EAAC9D,IAAI,QAAOrD,SAAA,EACzBqB,EAAAA,EAAAA,KAAA,UAAQ+B,IAAKZ,EAAKmE,KAAMnD,KAAK,cAC5B,GAAG9C,GAAE,0BAEN,OAnBCwC,MAuBT7B,EAAAA,EAAAA,KAAA,KAAArB,SAAI,GAAGU,GAAE,2BAGXW,EAAAA,EAAAA,KAAA,KACEE,UAAU,OACVC,QAASA,IAAMwY,GAAUhS,EAAoB,GAAGhI,SACjD,YAGDqB,EAAAA,EAAAA,KAAA,KACEE,UAAU,OACVC,QAASA,IAAMwY,GAAUhS,EAAoB,GAAGhI,SACjD,kBAMPqB,EAAAA,EAAAA,KAACzB,EAAAA,EAAkB,CACjBE,QAAS0W,EACTzW,SA7yBckc,KAClBxF,GAAgB,GAChB/J,SAASkN,KAAKpU,MAAMqU,UAAY,MAAM,EA4yBlC5Z,QAAS+W,EACT9W,UAAWA,GACXC,QAASA,EACTC,cA/xBqB8b,KACzB7C,GAAqBlZ,EAAQ,KAgyB3BkB,EAAAA,EAAAA,KAACwL,EAAAA,EAAW,CACV/M,QAASoI,EACTnI,SA5yBoB+M,KACxB3E,GAAsB,EAAM,EA4yBxB4E,QAAS3E,GACT4E,aA7tBehL,UA3DDA,WAClB,IAAIiZ,EAAW,CACb7Y,QAASlC,GAAUmC,GACnB4H,SAAU9J,GAEZa,QAAQC,IAAIga,GACZ,UACoB1Y,EAAAA,EAAMC,KAAKC,GAAS,kBAAmBwY,EAAU,CACjEvY,QAAS,CACPmD,OAAQ,mBACR,eAAgB,sBAIpBgQ,EAAS,UACX,CAAE,MAAO9P,GAEHA,EAAIzD,WACGyD,EAAIC,QACbhF,QAAQ6B,MAAM,gBAAiBkD,EAAIC,SAEnChF,QAAQ6B,MAAM,iBAAkBkD,EAAIgH,SAExC,GAqCAoP,EAAa,KA8tBX9a,EAAAA,EAAAA,KAAC8C,EAAU,CACTrE,QAAS4W,EACT3W,SA/yBmBqc,KACvBzF,GAAqB,EAAM,KAgzBzBtV,EAAAA,EAAAA,KAAC6C,EAAW,CACVpE,QAAS8W,EACT7W,SAhzBoBsc,KACxBxF,GAAsB,EAAM,KAizB1BxV,EAAAA,EAAAA,KAAC+C,EAAkB,CACjBC,OAAQqT,GACRpT,QAzyBqBgY,KACzB3E,IAAuB,GACvBjL,SAASkN,KAAKpU,MAAMqU,UAAY,MAAM,EAwyBlC1Z,QAASA,EACTD,UAAWA,GACXqE,UArqBqBgY,KACzBpD,GAAehZ,GACfwX,IAAuB,EAAM,KAqqB3BtW,EAAAA,EAAAA,KAACyP,EAAS,CACRzM,OAAQ4R,EACR3R,QAnnCgBkY,KACpBtG,GAAY,EAAM,EAmnCdhW,UAAWA,GACXC,QAASA,EACT6Q,YAAaA,MAGf3P,EAAAA,EAAAA,KAACuS,EAAqB,CACpB9T,QAASma,GACTla,SAnfe0c,KACnBvC,IAAiB,GACjBxN,SAASkN,KAAKpU,MAAMqU,UAAY,MAAM,EAkflChG,mBAAoBA,GACpBC,oBAAqBA,GACrBC,kBAlfoB/R,UACxB6Y,GAAiBJ,GAAyBta,EAAQ,EAkf9C6T,kBAhfoBhS,UACxB2Y,GAAoBF,GAAyBta,EAASka,GAAgB,EAgflEpG,SA9eWA,KACfjT,QAAQC,IAAI,2BACZuZ,IAAsBkC,IACpB,GAAIA,EAAYvI,GAAWpR,OAAS,EAAG,CACrC,MAAM4Z,EAAWD,EAAY,EAQ7B,OAPA1b,QAAQC,IAAI,aAAc0b,GAC1B3b,QAAQC,IAAI,kBAAmBkT,GAAWwI,IAC1ChC,GACExG,GAAWwI,GAAUta,GACrB8R,GAAWwI,GAAU1S,SACrB0S,GAEKA,CACT,CAGA,OAFA3b,QAAQC,IAAI,mCAAoCyb,GAChD1b,QAAQC,IAAI,qBAAsBkT,GAAWuI,IACtCA,CAAS,GAChB,EA8dExI,SA3dWA,KACflT,QAAQC,IAAI,+BACZuZ,IAAsBkC,IACpB,GAAIA,EAAY,EAAG,CACjB,MAAMC,EAAWD,EAAY,EAQ7B,OAPA1b,QAAQC,IAAI,aAAc0b,GAC1B3b,QAAQC,IAAI,sBAAuBkT,GAAWwI,IAC9ChC,GACExG,GAAWwI,GAAUta,GACrB8R,GAAWwI,GAAU1S,SACrB0S,GAEKA,CACT,CAGA,OAFA3b,QAAQC,IAAI,oCAAqCyb,GACjD1b,QAAQC,IAAI,qBAAsBkT,GAAWuI,IACtCA,CAAS,GAChB,EA2cEvI,WAAYA,OAIpB,C","sources":["components/InviteEventsFriend.jsx","components/AlertSucess.jsx","components/AlertError.jsx","components/Createneweventpost.jsx","components/EventPostComment.jsx","components/Editevent.jsx","components/EventMediaLikeComment.jsx","pages/Singleevent.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useTranslation } from \"react-i18next\";\nimport i18n from \"../i18n\";\nexport const InviteEventsFriend = ({\n  isOpen1,\n  onClose1,\n  children,\n  friends,\n  LoginData,\n  eventId,\n  onInvitesSent,\n}) => {\n  const [selectedFriends, setSelectedFriends] = useState([]);\n  const [invMessage, setinvMessage] = useState(\"\");\n  var apiUrl = \"https://backend.amourette.no/\";\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem(\"language\") || \"en\"; // Default to 'en' if no language is saved\n    console.log(\"language\");\n    console.log(savedLanguage);\n\n    // Change the language if it's not already the current language\n    if (i18n.language !== savedLanguage) {\n      i18n.changeLanguage(savedLanguage);\n    }\n  }, [i18n, t]);\n  if (!isOpen1) return null;\n  const handleOverlayClick = (e) => {\n    // Check if the clicked element is the overlay\n    if (e.target.classList.contains(\"popup-overlay\")) {\n      onClose1(); // Close the popup if the overlay is clicked\n    }\n  };\n\n  const handleCheckboxChange = (userId) => {\n    setSelectedFriends((prevSelected) => {\n      if (prevSelected.includes(userId)) {\n        // If already selected, remove from selectedFriends\n        return prevSelected.filter((id) => id !== userId);\n      } else {\n        // If not selected, add to selectedFriends\n        return [...prevSelected, userId];\n      }\n    });\n  };\n  const handleInviterequest = async (e) => {\n    e.preventDefault(); // Prevent default form submission\n\n    // Create a FormData object to hold the selected friend IDs\n    let formData = {\n      friendIds: selectedFriends,\n      user_id: LoginData.id,\n      eventId: eventId,\n    };\n    console.log(formData);\n    // Append selected friend IDs to formData\n\n    try {\n      const response = await axios.post(\n        apiUrl + \"api/sendEventinvite\",\n        formData,\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n      setinvMessage(\"Invites sent successfully\");\n      setSelectedFriends([]);\n      onInvitesSent();\n      setTimeout(() => {\n        setinvMessage(\"\");\n      }, 1500);\n      console.log(\"Invites sent successfully:\", response.data);\n    } catch (error) {\n      console.error(\"Error sending invites:\", error);\n      // Optionally handle error (e.g., show an error message)\n    }\n  };\n\n  return (\n    <>\n      <div className=\"popup-overlay\" onClick={handleOverlayClick}>\n        <div className=\"popup-content col-md-5\">\n          <button className=\"close-button\" onClick={onClose1}>\n            &times; {/* Close button */}\n          </button>\n          <div className=\"invite_pop gallery_pop d-flex flex-column gap-4\">\n            <div className=\"d-flex flex-column gap-2\">\n              <h3>{`${t(\"invite_a_friend\")}`}</h3>\n              <p className=\"invite_text\"></p>\n            </div>\n            <form\n              action=\"javascript:void(0)\"\n              onSubmit={handleInviterequest}\n              method=\"post\"\n            >\n              <div className=\"row gy-3 align-items-end\">\n                <div className=\"col-12\">\n                  <ul className=\"invite_list scroll_bar p-0\">\n                    {friends.length > 0 ? (\n                      friends.map((friend, index) => (\n                        <li key={index}>\n                          <div className=\"d-flex align-items-center gap-3\">\n                            <div className=\"invite_profile\">\n                              {friend.profile_image ? ( // Display the image URL if available\n                                <img\n                                  className=\"w-100 h-100 object-fit-cover\"\n                                  src={friend.profile_image} // Use the URL created from the file\n                                  alt=\"Selected\"\n                                />\n                              ) : (\n                                <img\n                                  className=\"w-100 h-100 object-fit-cover\"\n                                  src={require(\"../assets/images/thumb.jpg\")} // If it's an image URL from the profile\n                                  alt=\"Profile\"\n                                />\n                              )}\n                            </div>\n                            <h4>{friend.username}</h4>{\" \"}\n                            {/* Display the friend's username */}\n                          </div>\n                          <div className=\"listbox d-flex justify-content-center\">\n                            <label className=\"cbox\">\n                              <input\n                                type=\"checkbox\"\n                                onChange={() => handleCheckboxChange(friend.id)} // Handle checkbox change\n                                checked={selectedFriends.includes(friend.id)} // Check if this friend is selected\n                                name=\"makeImagePrivate\"\n                              />\n                              <span className=\"checkmark\"></span>\n                            </label>\n                          </div>\n                        </li>\n                      ))\n                    ) : (\n                      <li className=\"invite_text\">\n                        <p>{`${t(\"No_friend_ab\")}`}.</p>{\" \"}\n                        {/* Message when there are no friends */}\n                      </li>\n                    )}\n                  </ul>\n                </div>\n                {invMessage !== \"\" && (\n                  <p className=\"invite_text text-success\">{invMessage}</p>\n                )}\n\n                <div className=\"col-12\">\n                  {friends.length > 0 ? (\n                    <button\n                      type=\"submit\"\n                      className={selectedFriends.length === 0 ? \"opa\" : \"\"}\n                      disabled={selectedFriends.length === 0}\n                    >\n                      {`${t(\"SEND_INVITE\")}`}\n                    </button>\n                  ) : (\n                    <p>{`${t(\"No_friend_ab\")}`}</p> // Optional message when there are no friends\n                  )}\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { useState } from \"react\";\nimport { BsCloudUpload } from \"react-icons/bs\";\nimport axios from \"axios\";\n\nexport const AlertSucess = ({ isOpen1, onClose1 }) => {\n  const [selectedFriends, setSelectedFriends] = useState([]);\n  const [invMessage, setinvMessage] = useState(\"\");\n  var apiUrl = \"https://backend.amourette.no/\";\n  if (!isOpen1) return null;\n  const handleOverlayClick = (e) => {\n    // Check if the clicked element is the overlay\n    if (e.target.classList.contains(\"popup-overlay\")) {\n      onClose1(); // Close the popup if the overlay is clicked\n    }\n  };\n\n  const handleCheckboxChange = (userId) => {\n    setSelectedFriends((prevSelected) => {\n      if (prevSelected.includes(userId)) {\n        // If already selected, remove from selectedFriends\n        return prevSelected.filter((id) => id !== userId);\n      } else {\n        // If not selected, add to selectedFriends\n        return [...prevSelected, userId];\n      }\n    });\n  };\n\n  return (\n    <>\n      <div className=\"popup-overlay sucess_alert\" onClick={handleOverlayClick}>\n        <div className=\"popup-content col-md-4\">\n          <button className=\"close-button\" onClick={onClose1}>\n            &times; {/* Close button */}\n          </button>\n          <div className=\"sucess_meess d-flex flex-column gap-4\">\n            <div className=\"d-block sucess_notification\">\n              <p>Sucesses Sucesses Sucesses Sucesses Sucesses</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { useState } from \"react\";\nimport { BsCloudUpload } from \"react-icons/bs\";\nimport axios from \"axios\";\n\nexport const AlertError = ({ isOpen1, onClose1 }) => {\n  const [selectedFriends, setSelectedFriends] = useState([]);\n  const [invMessage, setinvMessage] = useState(\"\");\n  var apiUrl = \"https://backend.amourette.no/\";\n  if (!isOpen1) return null;\n  const handleOverlayClick = (e) => {\n    // Check if the clicked element is the overlay\n    if (e.target.classList.contains(\"popup-overlay\")) {\n      onClose1(); // Close the popup if the overlay is clicked\n    }\n  };\n\n  const handleCheckboxChange = (userId) => {\n    setSelectedFriends((prevSelected) => {\n      if (prevSelected.includes(userId)) {\n        // If already selected, remove from selectedFriends\n        return prevSelected.filter((id) => id !== userId);\n      } else {\n        // If not selected, add to selectedFriends\n        return [...prevSelected, userId];\n      }\n    });\n  };\n\n  return (\n    <>\n      <div className=\"popup-overlay error_alert\" onClick={handleOverlayClick}>\n        <div className=\"popup-content col-md-4\">\n          <button className=\"close-button\" onClick={onClose1}>\n            &times; {/* Close button */}\n          </button>\n          <div className=\"error_meess d-flex flex-column gap-4\">\n            <div className=\"d-block error_notification\">\n              <p>Error</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { BsCloudUpload } from \"react-icons/bs\";\nimport axios from \"axios\";\nimport { useTranslation } from \"react-i18next\";\nimport i18n from \"../i18n\";\nexport const Createneweventpost = ({\n  isOpen,\n  onClose,\n  eventId,\n  LoginData,\n  reSetPost,\n}) => {\n  // Move the hook calls outside the conditional return\n  const [description, setDescription] = useState(\"\");\n  const [image, setImage] = useState(null);\n  const [restr_message, setrestr_message] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [spinner, setspinner] = useState(false);\n  const [fileType, setFileType] = useState(\"\");\n  const [videoUrl, setVideoUrl] = useState(\"\");\n  var apiUrl = \"https://backend.amourette.no/api/\";\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem(\"language\") || \"en\"; // Default to 'en' if no language is saved\n    console.log(\"language\");\n    console.log(savedLanguage);\n\n    // Change the language if it's not already the current language\n    if (i18n.language !== savedLanguage) {\n      i18n.changeLanguage(savedLanguage);\n    }\n  }, [i18n, t]);\n  // If not open, return null\n  if (!isOpen) return null;\n\n  const handleOverlayClick = (e) => {\n    // Check if the clicked element is the overlay\n    if (e.target.classList.contains(\"popup-overlay\")) {\n      onClose(); // Close the popup if the overlay is clicked\n    }\n  };\n  const MAX_FILE_SIZE = 25 * 1024 * 1024; // 2 MB\n  const handleImageChange = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      // Check if the file is an image or video\n      const isImage = file.type.startsWith(\"image/\");\n      const isVideo = file.type.startsWith(\"video/\");\n\n      if (!isImage && !isVideo) {\n        setError(\"Please upload a valid image or video file.\");\n        setImage(null);\n        return;\n      }\n\n      // Check file size\n      if (file.size > MAX_FILE_SIZE) {\n        setError(\"File size must be less than 5 MB.\");\n        setImage(null);\n        return;\n      }\n\n      // Clear previous error messages\n      setError(\"\");\n      setImage(file);\n      setFileType(isImage ? \"image\" : \"video\");\n\n      if (isVideo) {\n        //const resizedVideoUrl = await resizeVideo(file);\n        // setVideoUrl(resizedVideoUrl);\n      }\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!image) {\n      //setError(\"Please upload an image\");\n      //return;\n    }\n    setspinner(true);\n    // Form data can be submitted here\n    const formData = new FormData();\n    formData.append(\"description\", description);\n    formData.append(\"image\", image);\n    formData.append(\"event_id\", eventId);\n    formData.append(\"user_id\", LoginData.id);\n    formData.append(\"fileType\", \"eventpost\");\n    // You can use fetch or axios to send the form data to your server\n    console.log(\"Submitting form:\", { description, image });\n    try {\n      const res = await axios.post(apiUrl + \"createEventPost\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"multipart/form\", // Ensure the content type is JSON\n        },\n      });\n      setspinner(false);\n      if (res.status === 200) {\n        console.log(\"Submission successful:\", res.data);\n        // Reset the form fields\n        setDescription(\"\");\n        setImage(null);\n        setError(\"\");\n        reSetPost();\n      }\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        // console.error(\"Request data:\", err.request);\n      } else {\n        //console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const restrictedWords = [\n    \"arse\",\n    \"arsehead\",\n    \"arsehole\",\n    \"ass\",\n    \"ass hole\",\n    \"asshole\",\n    \"bastard\",\n    \"bitch\",\n    \"bloody\",\n    \"bollocks\",\n    \"brotherfucker\",\n    \"bugger\",\n    \"bullshit\",\n    \"child-fucker\",\n    \"Christ on a bike\",\n    \"Christ on a cracker\",\n    \"cock\",\n    \"cocksucker\",\n    \"crap\",\n    \"cunt\",\n    \"dammit\",\n    \"damn\",\n    \"damned\",\n    \"damn it\",\n    \"dick\",\n    \"dick-head\",\n    \"dickhead\",\n    \"dumb ass\",\n    \"dumb-ass\",\n    \"dumbass\",\n    \"dyke\",\n    \"faggot\",\n    \"father-fucker\",\n    \"fatherfucker\",\n    \"fuck\",\n    \"fucker\",\n    \"fucking\",\n    \"god dammit\",\n    \"goddammit\",\n    \"God damn\",\n    \"god damn\",\n    \"goddamn\",\n    \"Goddamn\",\n    \"goddamned\",\n    \"goddamnit\",\n    \"godsdamn\",\n    \"holy shit\",\n    \"horseshit\",\n    \"in shit\",\n    \"jackarse\",\n    \"jack-ass\",\n    \"jackass\",\n    \"Jesus Christ\",\n    \"Jesus fuck\",\n    \"Jesus Harold Christ\",\n    \"Jesus H. Christ\",\n    \"Jesus, Mary and Joseph\",\n    \"Jesus wept\",\n    \"kike\",\n    \"mother fucker\",\n    \"mother-fucker\",\n    \"motherfucker\",\n    \"nigga\",\n    \"nigra\",\n    \"pigfucker\",\n    \"piss\",\n    \"prick\",\n    \"pussy\",\n    \"shit\",\n    \"shit ass\",\n    \"shite\",\n    \"sibling fucker\",\n    \"sisterfuck\",\n    \"sisterfucker\",\n    \"slut\",\n    \"son of a bitch\",\n    \"son of a whore\",\n    \"spastic\",\n    \"sweet Jesus\",\n    \"twat\",\n    \"wanker\",\n  ];\n  const isButtonDisabled = (!description.trim() && !image) || restr_message;\n  const handleCommentChange = (e) => {\n    const inputValue = e.target.value;\n    setDescription(inputValue);\n\n    // Check for restricted words\n    const hasRestrictedWord = restrictedWords.some((word) =>\n      inputValue.toLowerCase().includes(word.toLowerCase())\n    );\n\n    if (hasRestrictedWord) {\n      setrestr_message(true);\n    } else {\n      setrestr_message(false);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"popup-overlay\" onClick={handleOverlayClick}>\n        <div className=\"popup-content col-md-5\">\n          <button className=\"close-button\" onClick={onClose}>\n            &times; {/* Close button */}\n          </button>\n          <div className=\"gallery_pop d-flex flex-column gap-4\">\n            <h3>{`${t(\"create_post\")}`}</h3>\n            {restr_message && (\n              <span className=\"text-danger\" style={{ fontSize: \"14px\" }}>\n                {`${t(\"Your_message_contain\")}`}\n              </span>\n            )}\n            <form onSubmit={handleSubmit}>\n              <div className=\"row gy-3 align-items-end\">\n                <div className=\"col-12\">\n                  <textarea\n                    rows=\"8\"\n                    placeholder=\"What do you think?\"\n                    value={description}\n                    onChange={handleCommentChange}\n                  ></textarea>\n                </div>\n                <div className=\"col-12\">\n                  <div className=\"uploadfile rel bgload\">\n                    <input\n                      type=\"file\"\n                      accept=\"image/*,video/*\"\n                      className=\"fileload\"\n                      name=\"image\"\n                      onChange={handleImageChange}\n                    />\n                    <div className=\"upload_image\">\n                      {/* Show image preview */}\n                      {fileType === \"image\" && image && (\n                        <img\n                          className=\"w-100 h-100\"\n                          src={URL.createObjectURL(image)}\n                          alt=\"Selected Image\"\n                        />\n                      )}\n\n                      {/* Show video preview */}\n                      {fileType === \"video\" && image && (\n                        <video className=\"w-100 h-100\" controls>\n                          <source\n                            src={videoUrl || URL.createObjectURL(image)}\n                            type=\"video/mp4\"\n                          />\n                          {t(\"Your_browser_does\")}\n                        </video>\n                      )}\n                    </div>\n                    <div className=\"inload\" style={{ height: \"100px\" }}>\n                      <div>\n                        <BsCloudUpload style={{ fontSize: \"24px\" }} />\n                        <h3 style={{ fontSize: \"14px\" }}>{`${t(\n                          \"upload_image\"\n                        )}`}</h3>\n                      </div>\n                      {error && <p style={{ color: \"red\" }}>{error}</p>}\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-12\">\n                  {spinner && (\n                    <div\n                      className=\"spinner-border text-success date-load\"\n                      role=\"status\"\n                    >\n                      <span className=\"visually-hidden\">Loading...</span>\n                    </div>\n                  )}\n                  <button\n                    type=\"submit\"\n                    disabled={isButtonDisabled} // Disable button if comment is empty\n                    style={{ opacity: isButtonDisabled ? 0.1 : 1 }}\n                  >\n                    {`${t(\"post\")}`}\n                  </button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { FaRegHeart, FaHeart } from \"react-icons/fa\";\nimport { Link } from \"react-router-dom\";\nimport chat from \"../assets/images/chatpost.png\";\nimport axios from \"axios\";\nimport ErrorPop from \"../components/ErrorPop\";\nimport { AlertDelete } from \"../components/AlertDelete\";\nimport EmojiPicker from \"emoji-picker-react\";\nimport { useTranslation } from \"react-i18next\";\nimport i18n from \"../i18n\";\nimport MediaRenderer from \"../components/MediaRenderer\";\nexport const EventPostComment = ({\n  isEventpost,\n  LoginData,\n  Iseventfav,\n  commentSectionRefresh,\n  getpostCommentrefresh,\n}) => {\n  const [postId, setpostId] = useState(\"\");\n  const [currentSlideIndex, setCurrentSlideIndex] = useState(1);\n  const [isPopupOpen_delete, setisPopupOpen_delete] = useState(false);\n  const [deleteMessage, setdeleteMessage] = useState(\"\");\n  const [comments, setComments] = useState(Array(isEventpost.length).fill(\"\"));\n  const [webSocket, setWebSocket] = useState(null);\n  const apiUrl = \"https://backend.amourette.no/api/\";\n  const [errorPopMessage, setPoperrorMessage] = useState(\"\");\n  const [restrictedStates, setRestrictedStates] = useState([]); // To track restricted word status for each input\n  const MAX_WORDS = 2000;\n  const inputRef = useRef({});\n  const [modalOpen, setModalOpen] = useState(false);\n  const [imagess, setimage] = useState(null);\n  const openModal = () => setModalOpen(true);\n  const closeModal = () => {\n    setimage(null); // Close the modal by setting imagess to null\n  };\n  const [showPopError, setShowPopError] = useState(false);\n  // Create WebSocket connection when component mounts\n  useEffect(() => {\n    const ws = new WebSocket(\"wss://backend.amourette.no\"); // Adjust port if needed\n\n    ws.onmessage = (event) => {\n      try {\n        const receivedMessage = JSON.parse(event.data);\n        console.log(\"New WebSocket message:\", receivedMessage);\n\n        if (receivedMessage.event === \"eventComments\") {\n          commentSectionRefresh();\n        }\n        if (receivedMessage.event === \"eventfav\") {\n          console.log(\"aaaaaa\");\n\n          commentSectionRefresh();\n        }\n      } catch (error) {\n        console.error(\"Failed to parse WebSocket message:\", error);\n        console.error(\"Raw message:\", event.data);\n      }\n    };\n\n    return () => {\n      ws.close();\n    };\n  }, [isEventpost, LoginData]);\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem(\"language\") || \"en\"; // Default to 'en' if no language is saved\n\n    // Change the language if it's not already the current language\n    if (i18n.language !== savedLanguage) {\n      i18n.changeLanguage(savedLanguage);\n    }\n  }, [i18n, t]);\n  const handleCommentChange = (e, index) => {\n    const inputValue = e.target.value;\n\n    setComments((prev) => ({\n      ...prev,\n      [index]: inputValue, // Ensure updating only specific input\n    }));\n\n    // Check for restricted words for the specific input\n    const hasRestrictedWord = restrictedWords.some((word) =>\n      inputValue.toLowerCase().includes(word.toLowerCase())\n    );\n\n    // Update the restriction state for this input\n    setRestrictedStates((prev) => ({\n      ...prev,\n      [index]: hasRestrictedWord,\n    }));\n  };\n\n  const restrictedWords = [\n    \"arse\",\n    \"arsehead\",\n    \"arsehole\",\n    \"ass\",\n    \"ass hole\",\n    \"asshole\",\n    \"bastard\",\n    \"bitch\",\n    \"bloody\",\n    \"bollocks\",\n    \"brotherfucker\",\n    \"bugger\",\n    \"bullshit\",\n    \"child-fucker\",\n    \"Christ on a bike\",\n    \"Christ on a cracker\",\n    \"cock\",\n    \"cocksucker\",\n    \"crap\",\n    \"cunt\",\n    \"dammit\",\n    \"damn\",\n    \"damned\",\n    \"damn it\",\n    \"dick\",\n    \"dick-head\",\n    \"dickhead\",\n    \"dumb ass\",\n    \"dumb-ass\",\n    \"dumbass\",\n    \"dyke\",\n    \"faggot\",\n    \"father-fucker\",\n    \"fatherfucker\",\n    \"fuck\",\n    \"fucker\",\n    \"fucking\",\n    \"god dammit\",\n    \"goddammit\",\n    \"God damn\",\n    \"god damn\",\n    \"goddamn\",\n    \"Goddamn\",\n    \"goddamned\",\n    \"goddamnit\",\n    \"godsdamn\",\n    \"holy shit\",\n    \"horseshit\",\n    \"in shit\",\n    \"jackarse\",\n    \"jack-ass\",\n    \"jackass\",\n    \"Jesus Christ\",\n    \"Jesus fuck\",\n    \"Jesus Harold Christ\",\n    \"Jesus H. Christ\",\n    \"Jesus, Mary and Joseph\",\n    \"Jesus wept\",\n    \"kike\",\n    \"mother fucker\",\n    \"mother-fucker\",\n    \"motherfucker\",\n    \"nigga\",\n    \"nigra\",\n    \"pigfucker\",\n    \"piss\",\n    \"prick\",\n    \"pussy\",\n    \"shit\",\n    \"shit ass\",\n    \"shite\",\n    \"sibling fucker\",\n    \"sisterfuck\",\n    \"sisterfucker\",\n    \"slut\",\n    \"son of a bitch\",\n    \"son of a whore\",\n    \"spastic\",\n    \"sweet Jesus\",\n    \"twat\",\n    \"wanker\",\n  ];\n  const fetchComments = async (event_id) => {\n    let formData = {\n      event_id: event_id,\n    };\n    try {\n      const res = await axios.post(apiUrl + \"GetEventPostComments\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      console.log(res.data);\n      // Ensure commentsData is an array of strings\n      const commentsData = res.data.results;\n      //setComments(commentsData);\n    } catch (error) {\n      console.error(\"Error fetching comments:\", error);\n    }\n  };\n  const countWords = (text) => {\n    return text.trim() ? text.split(/\\s+/).length : 0; // Count words by splitting on whitespace\n  };\n  const handlePostComment = async (index, postId, event_id) => {\n    // Ensure the input is trimmed and not empty\n    const commentText = comments[index]?.trim();\n    const currentWordCount = countWords(commentText); // Assuming a single comment input for simplicity\n\n    if (currentWordCount < 2000) {\n      if (commentText) {\n        const formData = {\n          post_id: postId,\n          user_id: LoginData.id,\n          event_id: event_id,\n          comment: commentText, // Use trimmed comment\n        };\n\n        try {\n          const res = await axios.post(\n            apiUrl + \"CreateEventPostComment\",\n            formData,\n            {\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n              },\n            }\n          );\n\n          console.log(index);\n          // Clear the comment input after posting\n          setComments((prev) => ({\n            ...prev,\n            [index]: \"\", // Reset only this comment field\n          }));\n\n          Iseventfav();\n          // Refresh the comment section\n          await fetchComments(event_id);\n        } catch (err) {\n          console.error(\"Error posting comment:\", err);\n        }\n      }\n    } else {\n      setShowPopError(true);\n      setPoperrorMessage(\n        `Comment cannot exceed ${MAX_WORDS} words. Currently: ${currentWordCount} words.`\n      );\n      setTimeout(() => {\n        setShowPopError(false);\n        setPoperrorMessage(\"\");\n      }, 1500);\n    }\n  };\n\n  const formateTime = (dateString) => {\n    if (!dateString) return null;\n\n    // Parse the date as UTC\n    const postDate = new Date(dateString);\n    if (isNaN(postDate.getTime())) {\n      console.error(\"Invalid date:\", dateString);\n      return \"Invalid date\";\n    }\n\n    // Get the current time in UTC\n    const now = new Date();\n\n    // Adjust the postDate by subtracting 1 hour (3600000ms)\n    const adjustedPostDate = new Date(postDate.getTime() - 3600000);\n\n    // Convert postDate to Europe/Oslo time correctly\n    const osloPostTime = new Intl.DateTimeFormat(\"en-GB\", {\n      timeZone: \"Europe/Oslo\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      hour12: false, // Ensures 24-hour format\n    }).format(adjustedPostDate);\n\n    // Calculate time difference in seconds, minutes, hours, days\n    const timeDiff = now.getTime() - postDate.getTime();\n    const seconds = Math.floor(timeDiff / 1000);\n    const minutes = Math.floor(seconds / 60);\n    const hours = Math.floor(minutes / 60);\n    const days = Math.floor(hours / 24);\n    const weeks = Math.floor(days / 7);\n    const months = Math.floor(days / 30);\n    const years = Math.floor(days / 365);\n\n    // Generate formatted output based on the difference\n    if (minutes < 60) return `${osloPostTime}`;\n    if (hours < 24) return `${osloPostTime}`;\n    if (days === 1) return `Yesterday at ${osloPostTime}`;\n    if (days < 7) return `${days}d  ${osloPostTime}`;\n    if (weeks < 4) return `${weeks}w  ${osloPostTime}`;\n    if (months < 12) return `${months}m  ${osloPostTime}`;\n    return `${years}y  ${osloPostTime}`;\n  };\n\n  const [showPicker, setShowPicker] = useState({}); // Ensure it's an object\n\n  const handleEmojiClick = (emojiObject, index) => {\n    const inputEl = inputRef.current[index];\n    if (!inputEl) return;\n\n    // Get current value, ensuring it's a string\n    const currentValue = comments[index] || \"\";\n\n    // Insert emoji at the current cursor position\n    const startPos = inputEl.selectionStart || currentValue.length;\n    const endPos = inputEl.selectionEnd || currentValue.length;\n    const newValue =\n      currentValue.substring(0, startPos) +\n      emojiObject.emoji +\n      currentValue.substring(endPos);\n\n    setComments((prev) => ({\n      ...prev,\n      [index]: newValue, // Ensure the index key is properly set\n    }));\n\n    // Move cursor after the inserted emoji\n    setTimeout(() => {\n      inputEl.selectionStart = inputEl.selectionEnd =\n        startPos + emojiObject.emoji.length;\n      inputEl.focus();\n    }, 0);\n\n    // Close emoji picker\n    setShowPicker((prev) => ({\n      ...prev,\n      [index]: false,\n    }));\n  };\n\n  const toggleEmojiPicker = (index) => {\n    setShowPicker((prev) => ({\n      ...prev,\n      [index]: !prev[index], // Toggle the specific index\n    }));\n  };\n  const handleChangeHeart = async (postid, event_id) => {\n    let formData = {\n      user_id: LoginData.id,\n      post_id: postid,\n      event_id: event_id,\n    };\n\n    try {\n      const res = await axios.post(apiUrl + \"EventpostFavourite\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      Iseventfav();\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const handleeventPostDeleteconfirm = async (id) => {\n    setpostId(id);\n    setisPopupOpen_delete(true);\n    setdeleteMessage(\"Are you sure? You want delete this post\");\n  };\n  const closePopup_delete = () => {\n    setisPopupOpen_delete(false);\n  };\n  const handleeventPostDelete = async () => {\n    let formData = {\n      id: postId,\n      user_id: LoginData.id,\n    };\n    try {\n      const res = await axios.post(apiUrl + \"eventpostDelete\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      setisPopupOpen_delete(false);\n      getpostCommentrefresh();\n    } catch (err) {\n      console.error(\"Error posting comment:\", err);\n    }\n  };\n  const refreshpopup = async () => {\n    handleeventPostDelete();\n  };\n  const handleKeyDown = (e, index, postId, event_id) => {\n    if (e.key === \"Enter\" && comments[index]?.trim() !== \"\") {\n      e.preventDefault();\n      handlePostComment(index, postId, event_id);\n    }\n  };\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      if (event.key === \"Escape\") {\n        closeModal();\n      }\n    };\n\n    // Attach event listener\n    document.addEventListener(\"keydown\", handleKeyDown);\n\n    // Cleanup event listener on unmount\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, []);\n  return (\n    <>\n      <AlertDelete\n        isOpen1={isPopupOpen_delete}\n        onClose1={closePopup_delete}\n        message={deleteMessage}\n        onReturnSent={refreshpopup}\n      ></AlertDelete>\n      {showPopError && <ErrorPop message={errorPopMessage} />}\n      {isEventpost.length > 0 ? (\n        isEventpost.map((post, index) => (\n          <div className=\"evname d-block\" key={index}>\n            <div className=\"d-flex flex-column gap-2\">\n              <div className=\"d-flex gap-2 align-items-center\">\n                <div className=\"flex-shrink-0\">\n                  <div className=\"evephoto ofit rounded-circle overflow-hidden\">\n                    <Link to={`/friend/${post.uid}`} target=\"_blank\">\n                      {post.profile_image && post.makeImagePrivate === 0 ? (\n                        <img src={post.profile_image} alt=\"Selected\" />\n                      ) : (\n                        <img\n                          src={require(\"../assets/images/thumb.jpg\")}\n                          alt=\"Profile\"\n                        />\n                      )}\n                    </Link>\n                  </div>\n                </div>\n                <div className=\"flex-grow-1\">\n                  <div className=\"d-flex flex-column gap-1 evettimeheaing\">\n                    <Link to={`/friend/${post.uid}`} target=\"_blank\">\n                      {post.username} {t(\"createdaevent\")}\n                    </Link>\n                    <h5>{formateTime(post.date)}</h5>\n                  </div>\n                </div>\n                {LoginData.id === post.user_id && (\n                  <div className=\"flex-shrink-0 posttopbtns\">\n                    <button\n                      title=\"Delete\"\n                      type=\"button\"\n                      onClick={() => handleeventPostDeleteconfirm(post.id)}\n                      className=\"btn redbtn\"\n                      style={{\n                        padding: \"0px 0px\",\n                        textAlign: \"center\",\n                        minWidth: \"0px\",\n                        background: \"red\",\n                      }}\n                    >\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width={24}\n                        height={24}\n                        viewBox=\"0 0 24 24\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        strokeWidth={2}\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        className=\"icon icon-tabler icons-tabler-outline icon-tabler-trash\"\n                      >\n                        <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                        <path d=\"M4 7l16 0\" />\n                        <path d=\"M10 11l0 6\" />\n                        <path d=\"M14 11l0 6\" />\n                        <path d=\"M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12\" />\n                        <path d=\"M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3\" />\n                      </svg>\n                    </button>\n                  </div>\n                )}\n              </div>\n              <div className=\"d-block contpost\">\n                <p>{post.description}</p>\n              </div>\n              {post.file && (\n                <div className=\"postimgfull ofit rounded-2 overflow-hidden\">\n                  <MediaRenderer\n                    url={post.file}\n                    onClick={() => {\n                      setimage(post.file);\n                    }}\n                  />\n                </div>\n              )}\n              <div className=\"d-flex justify-content-end\">\n                <div className=\"d-flex gap-3 postchatheart\">\n                  <div className=\"d-flex align-items-center gap-3\">\n                    <button type=\"button\" className=\"btn fulw\">\n                      <img src={chat} alt=\"chatpic\" />\n                    </button>\n                    <p>{post.post.length}</p>\n                  </div>\n                  <div className=\"d-flex align-items-center gap-3\">\n                    <button\n                      type=\"button\"\n                      onClick={() => handleChangeHeart(post.id, post.event_id)}\n                      className=\"liked btn fulw\"\n                    >\n                      {post.fav ? <FaHeart /> : <FaRegHeart />}\n                    </button>\n\n                    <p>{post.fav_count}</p>\n                  </div>\n                </div>\n              </div>\n              <div className=\"comment_input d-flex flex-column gap-3\">\n                <ul className=\"p-0 comment_section scroll_bar d-flex flex-column gap-2\">\n                  {post.post.length > 0 ? (\n                    post.post.map((comm, index) => (\n                      <li\n                        className=\"d-flex align-items-start gap-2\"\n                        key={index}\n                      >\n                        <Link\n                          to={`/friend/${comm.comt_uid}`}\n                          target=\"_blank\"\n                          className=\"d-block user_profile\"\n                        >\n                          {comm.comment_user_profile_image &&\n                          comm.comment_makeImagePrivate === 0 ? (\n                            <img\n                              className=\"w-100 h-100\"\n                              src={comm.comment_user_profile_image}\n                              alt=\"eventspic\"\n                            />\n                          ) : (\n                            <img\n                              className=\"w-100 h-100\"\n                              src={require(\"../assets/images/thumb.jpg\")}\n                              alt=\"eventspic\"\n                            />\n                          )}\n                        </Link>\n                        <div className=\"d-flex flex-column gap-1\">\n                          <div className=\"d-flex align-items-center gap-3\">\n                            <Link\n                              to={`/friend/${comm.comt_uid}`}\n                              target=\"_blank\"\n                              className=\"textcolor\"\n                            >\n                              {comm.comment_user_username}{\" \"}\n                            </Link>\n                            <span className=\"comment_time\">\n                              {formateTime(comm.comment_date)}\n                            </span>\n                          </div>\n                          <p className=\"comment_user scroll_bar\">\n                            {comm.description}\n                          </p>\n                        </div>\n                      </li>\n                    ))\n                  ) : (\n                    <p>{t(\"Nocommentsavailable\")}</p>\n                  )}\n                </ul>\n                {restrictedStates[index] && (\n                  <span className=\"text-danger\" style={{ fontSize: \"14px\" }}>\n                    {t(\"Your_message_contain\")}\n                  </span>\n                )}\n                <div className=\"d-flex align-items-center gap-2\">\n                  <div className=\"emoji-container\">\n                    <button\n                      type=\"button\"\n                      className=\"emoji-button\"\n                      onClick={() => toggleEmojiPicker(index)}\n                    >\n                      😀\n                    </button>\n\n                    {showPicker[index] && (\n                      <div className=\"emoji-picker\">\n                        <EmojiPicker\n                          onEmojiClick={(emojiObject) =>\n                            handleEmojiClick(emojiObject, index)\n                          }\n                        />\n                      </div>\n                    )}\n                  </div>\n                  <input\n                    type=\"text\"\n                    name=\"comment\"\n                    placeholder={t(\"EnterYourComment\")}\n                    onKeyDown={(e) =>\n                      handleKeyDown(e, index, post.id, post.event_id)\n                    }\n                    ref={(el) => (inputRef.current[index] = el)}\n                    value={comments[index]} // Controlled input\n                    onChange={(e) => handleCommentChange(e, index)} // Handle input changes\n                  />\n\n                  <button\n                    type=\"submit\"\n                    onClick={() =>\n                      handlePostComment(index, post.id, post.event_id)\n                    }\n                    disabled={\n                      !comments[index]?.trim() || restrictedStates[index]\n                    } // Disable button if input is empty or has restricted words\n                    style={{\n                      opacity:\n                        !comments[index]?.trim() || restrictedStates[index]\n                          ? 1\n                          : 1,\n                      transition: \"opacity 0.3s\",\n                    }}\n                    className=\"comment_postbtn\"\n                  >\n                    {t(\"Post\")}\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        ))\n      ) : (\n        <p>{t(\"Nopostsavailable\")}</p>\n      )}\n\n      {imagess && (\n        <div id=\"myModal\" className=\"modalgg\">\n          <span className=\"close cursor\" onClick={closeModal}>\n            &times;\n          </span>\n          <div className=\"modal-content\">\n            <div\n              className=\"mySlides\"\n              style={{\n                display: \"flex\",\n              }}\n            >\n              <MediaRenderer url={imagess} />\n            </div>\n\n            <div className=\"caption-container\">\n              {/* <p id=\"caption\">{images[currentSlideIndex - 1]?.alt}</p> */}\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { BsCloudUpload } from \"react-icons/bs\";\nimport SuccessPop from \"../components/SuccessPop\";\nimport ErrorPop from \"../components/ErrorPop\";\nimport { useTranslation } from \"react-i18next\";\nimport i18n from \"../i18n\";\n\nexport const Editevent = ({\n  isOpen,\n  onClose,\n  onEventCreated,\n  eventId,\n  EventDetail,\n}) => {\n  console.log(EventDetail);\n  // Initialize state for the checkbox only\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [showPopSuccess, setShowPopSuccess] = useState(false);\n  const [showPopError, setShowPopError] = useState(false);\n  const [successPopMessage, setPopsuccessMessage] = useState(\"\");\n  const [errorPopMessage, setPoperrorMessage] = useState(\"\");\n  const [makeImagePrivate, setMakeImagePrivate] = useState(false);\n  const [spinner, setspinner] = useState(false);\n  const [eventData, setEventData] = useState({\n    name: \"\",\n    start_date: \"\",\n    end_date: \"\",\n    time: \"\",\n    location: \"\",\n    description: \"\",\n    image: null,\n  });\n  var apiUrl = \"https://backend.amourette.no/\";\n  const [restr_message, setrestr_message] = useState(false);\n  const today = new Date(); // Get today's date\n  const day = String(today.getDate()).padStart(2, \"0\"); // Get day and ensure 2 digits\n  const month = String(today.getMonth() + 1).padStart(2, \"0\"); // Get month and ensure 2 digits (months are zero-indexed)\n  const year = today.getFullYear(); // Get the full year\n  const { t } = useTranslation();\n  const [previewImage, setPreviewImage] = useState(\"\");\n\n  useEffect(() => {\n    if (EventDetail) {\n      setEventData({\n        name: EventDetail.name,\n        description: EventDetail.description,\n        start_date: EventDetail.start_date\n          ? EventDetail.start_date.split(\"T\")[0]\n          : \"\",\n        end_date: EventDetail.end_date\n          ? EventDetail.end_date.split(\"T\")[0]\n          : \"\",\n        time: EventDetail.time,\n        location: EventDetail.location,\n      });\n      if (EventDetail.image) {\n        setSelectedFile(null); // Reset selectedFile if editing\n        setPreviewImage(EventDetail.image);\n      }\n      setMakeImagePrivate(EventDetail.makeImageUse || false);\n\n      if (EventDetail.image) {\n        setSelectedFile(null); // Reset selectedFile if editing\n        setPreviewImage(EventDetail.image);\n      }\n    }\n  }, [EventDetail]);\n\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem(\"language\") || \"en\"; // Default to 'en' if no language is saved\n    console.log(\"language\");\n    console.log(savedLanguage);\n\n    // Change the language if it's not already the current language\n    if (i18n.language !== savedLanguage) {\n      i18n.changeLanguage(savedLanguage);\n    }\n  }, [i18n, t]);\n  const today_enddate = `${day}-${month}-${year}`;\n  if (!isOpen) return null;\n\n  const handleOverlayClick = (e) => {\n    if (e.target.classList.contains(\"popup-overlay\")) {\n      onClose();\n    }\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value, type, files } = e.target;\n\n    // Check for restricted words only for text inputs\n    if (type === \"text\" || type === \"textarea\") {\n      const hasRestrictedWord = restrictedWords.some((word) =>\n        value.toLowerCase().includes(word.toLowerCase())\n      );\n\n      if (hasRestrictedWord) {\n        // Display a message or set an error state\n        setrestr_message(true);\n      } else {\n        setrestr_message(false);\n      }\n    }\n\n    // Update event data\n    setEventData((prevData) => ({\n      ...prevData,\n      [name]: type === \"file\" ? files[0] : value,\n    }));\n  };\n  const restrictedWords = [\n    \"arse\",\n    \"arsehead\",\n    \"arsehole\",\n    \"ass\",\n    \"ass hole\",\n    \"asshole\",\n    \"bastard\",\n    \"bitch\",\n    \"bloody\",\n    \"bollocks\",\n    \"brotherfucker\",\n    \"bugger\",\n    \"bullshit\",\n    \"child-fucker\",\n    \"Christ on a bike\",\n    \"Christ on a cracker\",\n    \"cock\",\n    \"cocksucker\",\n    \"crap\",\n    \"cunt\",\n    \"dammit\",\n    \"damn\",\n    \"damned\",\n    \"damn it\",\n    \"dick\",\n    \"dick-head\",\n    \"dickhead\",\n    \"dumb ass\",\n    \"dumb-ass\",\n    \"dumbass\",\n    \"dyke\",\n    \"faggot\",\n    \"father-fucker\",\n    \"fatherfucker\",\n    \"fuck\",\n    \"fucker\",\n    \"fucking\",\n    \"god dammit\",\n    \"goddammit\",\n    \"God damn\",\n    \"god damn\",\n    \"goddamn\",\n    \"Goddamn\",\n    \"goddamned\",\n    \"goddamnit\",\n    \"godsdamn\",\n    \"holy shit\",\n    \"horseshit\",\n    \"in shit\",\n    \"jackarse\",\n    \"jack-ass\",\n    \"jackass\",\n    \"Jesus Christ\",\n    \"Jesus fuck\",\n    \"Jesus Harold Christ\",\n    \"Jesus H. Christ\",\n    \"Jesus, Mary and Joseph\",\n    \"Jesus wept\",\n    \"kike\",\n    \"mother fucker\",\n    \"mother-fucker\",\n    \"motherfucker\",\n    \"nigga\",\n    \"nigra\",\n    \"pigfucker\",\n    \"piss\",\n    \"prick\",\n    \"pussy\",\n    \"shit\",\n    \"shit ass\",\n    \"shite\",\n    \"sibling fucker\",\n    \"sisterfuck\",\n    \"sisterfucker\",\n    \"slut\",\n    \"son of a bitch\",\n    \"son of a whore\",\n    \"spastic\",\n    \"sweet Jesus\",\n    \"twat\",\n    \"wanker\",\n  ];\n  const handleCheckboxChange = (e) => {\n    const { checked } = e.target;\n    setMakeImagePrivate(checked);\n  };\n  const MAX_FILE_SIZE = 2 * 1024 * 1024; // 2 MB\n  const handleFileChange = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      // Check if the file is an image\n      const isImage = file.type.startsWith(\"image/\");\n      if (!isImage) {\n        setErrorMessage(\"Please upload a valid image file.\");\n        setSelectedFile(null);\n        return;\n      }\n\n      // Check the file size\n      if (file.size > MAX_FILE_SIZE) {\n        setErrorMessage(\"File size must be less than 2 MB.\");\n        setSelectedFile(null);\n        return;\n      }\n      setPreviewImage(\"\");\n      // Clear any previous error messages and set the selected file\n      setErrorMessage(\"\");\n      setSelectedFile(file);\n    }\n  };\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = JSON.parse(storedUsername);\n    setspinner(true);\n    try {\n      if (selectedFile !== null) {\n        const formData = new FormData();\n        // Append checkbox value to formData\n        formData.append(\"makeImagePrivate\", makeImagePrivate);\n        formData.append(\"user_id\", userLogin.id);\n        formData.append(\"fileType\", \"events\");\n        formData.append(\"eventId\", eventId);\n        formData.append(\"image\", selectedFile);\n        for (const key in eventData) {\n          formData.append(key, eventData[key]);\n        }\n\n        const response = await axios.post(\n          apiUrl + \"api/eventseditfile\",\n          formData,\n          {\n            headers: {\n              \"Content-Type\": \"multipart/form-data\",\n            },\n          }\n        );\n        setspinner(false);\n        //console.log(response.data);\n        if (response.data.status === \"2\") {\n          setShowPopError(true);\n          setPoperrorMessage(response.data.message);\n          setTimeout(() => {\n            setShowPopError(false);\n            setPoperrorMessage(\"\");\n            //onClose();\n          }, 1000);\n        } else {\n          window.location.replace(`/singleevent/${response.data.slug}`);\n          setShowPopSuccess(true);\n          setPopsuccessMessage(response.data.message);\n          setTimeout(() => {\n            setShowPopError(false);\n            setShowPopSuccess(false);\n            window.location.reload();\n          }, 900);\n          console.log(\"Event created:\", response.data);\n          setEventData({\n            name: \"\",\n            start_date: \"\",\n            end_date: \"\",\n            time: \"\",\n            location: \"\",\n            description: \"\",\n            image: null,\n          });\n          setSelectedFile(null);\n        }\n      } else {\n        const formData = new FormData();\n        // Append checkbox value to formData\n        formData.append(\"makeImagePrivate\", makeImagePrivate);\n        formData.append(\"user_id\", userLogin.id);\n        formData.append(\"fileType\", \"events\");\n        formData.append(\"eventId\", eventId);\n        formData.append(\"image\", selectedFile);\n\n        formData.append(\"previewImage\", previewImage);\n        for (const key in eventData) {\n          formData.append(key, eventData[key]);\n        }\n\n        const response = await axios.post(apiUrl + \"api/eventsedit\", formData, {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n        });\n        setspinner(false);\n\n        if (response.data.status === \"2\") {\n          setShowPopError(true);\n          setPoperrorMessage(response.data.message);\n          setTimeout(() => {\n            setShowPopError(false);\n            setPoperrorMessage(\"\");\n            //onClose();\n          }, 1000);\n        } else {\n          window.location.replace(`/singleevent/${response.data.slug}`);\n          setShowPopSuccess(true);\n          setPopsuccessMessage(response.data.message);\n          setTimeout(() => {\n            setShowPopError(false);\n            setShowPopSuccess(false);\n            window.location.reload();\n          }, 900);\n\n          setEventData({\n            name: \"\",\n            start_date: \"\",\n            end_date: \"\",\n            time: \"\",\n            location: \"\",\n            description: \"\",\n            image: null,\n          });\n          setSelectedFile(null);\n        }\n      }\n\n      // Close the popup after submission\n    } catch (error) {\n      setspinner(false);\n      setShowPopError(true);\n      setPoperrorMessage(\"Some thing went wrong,Please try again:\", error);\n      setTimeout(() => {\n        setShowPopError(false);\n        setShowPopError(\"\");\n        onClose();\n      }, 1000);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"popup-overlay\" onClick={handleOverlayClick}>\n        <div className=\"popup-content col-md-5\">\n          <button className=\"close-button\" onClick={onClose}>\n            &times; {/* Close button */}\n          </button>\n          {showPopSuccess && <SuccessPop message={successPopMessage} />}\n          {showPopError && <ErrorPop message={errorPopMessage} />}\n          <div className=\"cneventup d-flex flex-column gap-4\">\n            <h3> {t(\"edit_event\")}</h3>\n\n            <form onSubmit={handleSubmit}>\n              <div className=\"row gy-4\">\n                <div className=\"col-md-4\">\n                  <div className=\"uploadfile rel bgload\">\n                    <input\n                      type=\"file\"\n                      required={!previewImage}\n                      name=\"image\"\n                      onChange={handleFileChange}\n                      className=\"fileload\"\n                    />\n                    <div className=\"upload_image\">\n                      {previewImage && (\n                        <img\n                          className=\"w-100 h-100\"\n                          src={previewImage} // Create a URL for the selected image\n                          alt=\"Selected\"\n                        />\n                      )}\n                      {selectedFile && (\n                        <img\n                          className=\"w-100 h-100\"\n                          src={URL.createObjectURL(selectedFile)} // Create a URL for the selected image\n                          alt=\"Selected\"\n                        />\n                      )}\n                    </div>\n                    <div className=\"inload\" style={{ height: \"100px\" }}>\n                      <div>\n                        <BsCloudUpload style={{ fontSize: \"24px\" }} />\n                        <h3 style={{ fontSize: \"14px\" }}>\n                          {t(\"upload_image\")} *\n                        </h3>\n                      </div>\n                    </div>\n                    {errorMessage && (\n                      <p className=\"text-danger\">{errorMessage}</p>\n                    )}\n                  </div>\n                </div>\n                <div className=\"col-12\">\n                  <input\n                    type=\"text\"\n                    placeholder={t(\"event_name\")}\n                    name=\"name\"\n                    defaultValue={eventData.name}\n                    onChange={handleInputChange}\n                    required\n                  />\n                </div>\n                <div className=\"col-md-4\">\n                  <div className=\"datetimeline rel\">\n                    <label className=\"stextlabel\">{t(\"start_date\")} *</label>\n                    <input\n                      type=\"date\"\n                      name=\"start_date\"\n                      defaultValue={eventData.start_date}\n                      onChange={(e) => {\n                        const selectedDate = new Date(e.target.value);\n                        const today = new Date();\n                        today.setHours(0, 0, 0, 0); // Normalize today's date\n\n                        if (selectedDate < today) {\n                          alert(\"Please select a future date.\");\n                        } else {\n                          handleInputChange(e);\n                        }\n                      }}\n                      required\n                    />\n                  </div>\n                </div>\n                <div className=\"col-md-4\">\n                  <div className=\"datetimeline rel\">\n                    <label className=\"stextlabel\">{t(\"end_date\")} *</label>\n                    <input\n                      type=\"date\"\n                      name=\"end_date\"\n                      value={eventData.end_date}\n                      minLength={today_enddate}\n                      onChange={handleInputChange}\n                      required\n                    />\n                  </div>\n                </div>\n                <div className=\"col-md-4\">\n                  <div className=\"datetimeline rel\">\n                    <label className=\"stextlabel\">{t(\"time\")} *</label>\n                    <input\n                      type=\"time\"\n                      name=\"time\"\n                      value={eventData.time}\n                      onChange={handleInputChange}\n                      required\n                    />\n                  </div>\n                </div>\n                <div className=\"col-12\">\n                  <input\n                    type=\"text\"\n                    placeholder={t(\"Location\")}\n                    name=\"location\"\n                    value={eventData.location}\n                    onChange={handleInputChange}\n                  />\n                </div>\n                <div className=\"col-12\">\n                  <textarea\n                    name=\"description\"\n                    rows=\"5\"\n                    placeholder={t(\"event_description\")}\n                    value={eventData.description}\n                    onChange={handleInputChange}\n                  ></textarea>\n                </div>\n                <div className=\"col-12\">\n                  <div className=\"listbox\">\n                    <label className=\"cbox\">\n                      {t(\"Make_private\")}\n                      <input\n                        type=\"checkbox\"\n                        name=\"makeImagePrivate\"\n                        checked={makeImagePrivate} // Use the state directly\n                        onChange={handleCheckboxChange} // Use dedicated handler\n                      />\n                      <span className=\"checkmark\"></span>\n                    </label>\n                  </div>\n                </div>\n                {restr_message && (\n                  <span className=\"text-danger\" style={{ fontSize: \"14px\" }}>\n                    {t(\"Your_message_contain\")}\n                  </span>\n                )}\n                <div className=\"col-12\">\n                  {spinner && (\n                    <div\n                      className=\"spinner-border text-success date-load\"\n                      role=\"status\"\n                    >\n                      <span className=\"visually-hidden\">{t(\"loading\")}...</span>\n                    </div>\n                  )}\n                  <button type=\"submit\">{t(\"edit_event\")}</button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { useState, useRef, useEffect } from \"react\";\n\nimport { Link } from \"react-router-dom\";\nimport { FaRegHeart, FaHeart } from \"react-icons/fa\";\nimport axios from \"axios\";\nimport { useTranslation } from \"react-i18next\";\nimport i18n from \"../i18n\";\nimport { FaChevronLeft } from \"react-icons/fa\";\nimport { FaChevronRight } from \"react-icons/fa\";\nimport EmojiPicker from \"emoji-picker-react\";\nimport { AlertDelete } from \"../components/AlertDelete\";\nimport SuccessPop from \"../components/SuccessPop\";\nimport MediaRenderer from \"../components/MediaRenderer\";\nexport const EventMediaLikeComment = ({\n  isOpen1,\n  onClose1,\n  GroupPostDataPopup,\n  GrouppostCommentGet,\n  getrefreshComment,\n  favSectionRefresh,\n  gotoNext,\n  gotoprev,\n  validPosts,\n}) => {\n  const [successPopMessage, setPopsuccessMessage] = useState(\"\");\n  const [isPopupOpen_delete, setisPopupOpen_delete] = useState(false);\n  const [input, setInput] = useState(\"\");\n  const [restr_message, setrestr_message] = useState(false);\n  const [showPopSuccess, setShowPopSuccess] = useState(false);\n  const chatEndRef = useRef(null);\n  const { t } = useTranslation();\n  const inputRef = useRef(null);\n  const [isparamVl, setparamVl] = useState(\"\");\n  const storedUsername = localStorage.getItem(\"userLogin\");\n  const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n  const [UserPhotoCommets, setUserPhotoCommets] = useState(\"\");\n  const [deleteMessage, setdeleteMessage] = useState(\"\");\n  const [UserPopupData, setUserPopupData] = useState(\"\");\n\n  const [PopupData, setPopupData] = useState(\"\");\n\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem(\"language\") || \"en\"; // Default to 'en' if no language is saved\n\n    // Change the language if it's not already the current language\n    if (i18n.language !== savedLanguage) {\n      i18n.changeLanguage(savedLanguage);\n    }\n  }, [i18n, t]);\n\n  //console.log(GalleryCommets);\n  // Ref to the chat container\n  var apiUrl = \"https://backend.amourette.no/api/\";\n\n  const [comments, setComments] = useState(\"\");\n  const [spinner, setspinner] = useState(false);\n  const onEmojiClick = (event, emojiObject) => {\n    setInput((prevInput) => prevInput + emojiObject.emoji);\n  };\n\n  const formateTime = (dateString) => {\n    if (!dateString) return null;\n\n    // Parse the date as UTC\n    const postDate = new Date(dateString);\n    if (isNaN(postDate.getTime())) {\n      console.error(\"Invalid date:\", dateString);\n      return \"Invalid date\";\n    }\n\n    // Get the current time in UTC\n    const now = new Date();\n\n    // Adjust the postDate by subtracting 1 hour (3600000ms)\n    const adjustedPostDate = new Date(postDate.getTime() - 3600000);\n\n    // Convert postDate to Europe/Oslo time correctly\n    const osloPostTime = new Intl.DateTimeFormat(\"en-GB\", {\n      timeZone: \"Europe/Oslo\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      hour12: false, // Ensures 24-hour format\n    }).format(adjustedPostDate);\n\n    // Calculate time difference in seconds, minutes, hours, days\n    const timeDiff = now.getTime() - postDate.getTime();\n    const seconds = Math.floor(timeDiff / 1000);\n    const minutes = Math.floor(seconds / 60);\n    const hours = Math.floor(minutes / 60);\n    const days = Math.floor(hours / 24);\n    const weeks = Math.floor(days / 7);\n    const months = Math.floor(days / 30);\n    const years = Math.floor(days / 365);\n\n    // Generate formatted output based on the difference\n    if (minutes < 60) return `${osloPostTime}`;\n    if (hours < 24) return `${osloPostTime}`;\n    if (days === 1) return `Yesterday at ${osloPostTime}`;\n    if (days < 7) return `${days}d  ${osloPostTime}`;\n    if (weeks < 4) return `${weeks}w  ${osloPostTime}`;\n    if (months < 12) return `${months}m  ${osloPostTime}`;\n    return `${years}y  ${osloPostTime}`;\n  };\n\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      if (!isOpen1) return;\n      if (event.key === \"ArrowRight\") {\n        gotoNext();\n      } else if (event.key === \"ArrowLeft\") {\n        gotoprev();\n      }\n    };\n\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\n  }, [isOpen1, gotoNext, gotoprev]);\n\n  // Example usage\n\n  const isButtonDisabled = !comments.trim() || restr_message;\n  const handleCommentChange = (e) => {\n    const inputValue = e.target.value;\n\n    // Update the state with the new text (including emojis)\n    setComments(inputValue);\n\n    // If input is completely empty, remove all text and emojis\n    if (inputValue.trim() === \"\") {\n      setComments(\"\");\n    }\n\n    // Check for restricted words\n    const hasRestrictedWord = restrictedWords.some((word) =>\n      inputValue.toLowerCase().includes(word.toLowerCase())\n    );\n\n    setrestr_message(hasRestrictedWord);\n  };\n  const restrictedWords = [\n    \"arse\",\n    \"arsehead\",\n    \"arsehole\",\n    \"ass\",\n    \"ass hole\",\n    \"asshole\",\n    \"bastard\",\n    \"bitch\",\n    \"bloody\",\n    \"bollocks\",\n    \"brotherfucker\",\n    \"bugger\",\n    \"bullshit\",\n    \"child-fucker\",\n    \"Christ on a bike\",\n    \"Christ on a cracker\",\n    \"cock\",\n    \"cocksucker\",\n    \"crap\",\n    \"cunt\",\n    \"dammit\",\n    \"damn\",\n    \"damned\",\n    \"damn it\",\n    \"dick\",\n    \"dick-head\",\n    \"dickhead\",\n    \"dumb ass\",\n    \"dumb-ass\",\n    \"dumbass\",\n    \"dyke\",\n    \"faggot\",\n    \"father-fucker\",\n    \"fatherfucker\",\n    \"fuck\",\n    \"fucker\",\n    \"fucking\",\n    \"god dammit\",\n    \"goddammit\",\n    \"God damn\",\n    \"god damn\",\n    \"goddamn\",\n    \"Goddamn\",\n    \"goddamned\",\n    \"goddamnit\",\n    \"godsdamn\",\n    \"holy shit\",\n    \"horseshit\",\n    \"in shit\",\n    \"jackarse\",\n    \"jack-ass\",\n    \"jackass\",\n    \"Jesus Christ\",\n    \"Jesus fuck\",\n    \"Jesus Harold Christ\",\n    \"Jesus H. Christ\",\n    \"Jesus, Mary and Joseph\",\n    \"Jesus wept\",\n    \"kike\",\n    \"mother fucker\",\n    \"mother-fucker\",\n    \"motherfucker\",\n    \"nigga\",\n    \"nigra\",\n    \"pigfucker\",\n    \"piss\",\n    \"prick\",\n    \"pussy\",\n    \"shit\",\n    \"shit ass\",\n    \"shite\",\n    \"sibling fucker\",\n    \"sisterfuck\",\n    \"sisterfucker\",\n    \"slut\",\n    \"son of a bitch\",\n    \"son of a whore\",\n    \"spastic\",\n    \"sweet Jesus\",\n    \"twat\",\n    \"wanker\",\n  ];\n  const getcommentUseralbum = async (id, commentid) => {\n    let formData = {\n      id: id,\n      commentid: commentid,\n    };\n    console.log(formData);\n    try {\n      const res = await axios.post(\n        apiUrl + \"getUseralbumsCommentsSeperate\",\n        formData,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n\n      const newComment = res.data.album.comments; // the newly saved comment with full details\n      console.log(newComment);\n      setUserPhotoCommets((prevComments) => [\n        ...prevComments, // Spread the previous comments\n        ...newComment, // Append the new comments\n      ]);\n      if (newComment.user_id === userLogin.id) {\n        if (chatEndRef.current) {\n          chatEndRef.current.scrollIntoView({ behavior: \"smooth\" });\n        }\n      }\n    } catch (err) {\n      if (err.response) {\n        console.error(\"Server responded with error:\", err.response);\n      } else if (err.request) {\n        console.error(\"No response received:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    } finally {\n      setspinner(false);\n    }\n  };\n  const handlePostSubmit = async (e) => {\n    if (e.preventDefault) e.preventDefault();\n\n    setspinner(true);\n\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      comment: e.description || e.target.description.value,\n      event_id: GroupPostDataPopup.event_id,\n      post_id: GroupPostDataPopup.id,\n      user_id: userLogin.id,\n    };\n    try {\n      const res = await axios.post(\n        apiUrl + \"CreateEventPostComment\",\n        formData,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n      getrefreshComment(\"\");\n      setTimeout(() => {\n        if (chatEndRef.current) {\n          chatEndRef.current.scrollIntoView({ behavior: \"smooth\" });\n        }\n      }, 1000);\n      setComments(\"\");\n    } catch (err) {\n      if (err.response) {\n        console.error(\"Server responded with error:\", err.response);\n      } else if (err.request) {\n        console.error(\"No response received:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    } finally {\n      setspinner(false);\n    }\n  };\n\n  const [showPicker, setShowPicker] = useState(false);\n\n  const handleEmojiClick = (emojiObject) => {\n    // Append emoji to the existing text\n    setComments((prevMessage) => prevMessage + emojiObject.emoji);\n    setShowPicker(false);\n\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  };\n  // Update `isparamVl` when `currentIndex` changes\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      if (event.key === \"Escape\") {\n        onClose1(); // Close the popup when Escape is pressed\n      }\n    };\n\n    window.addEventListener(\"keydown\", handleKeyDown);\n\n    // Cleanup the event listener on component unmount\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [onClose1]);\n  const handleKeyDown = (e) => {\n    if (e.key === \"Enter\" && comments.trim() !== \"\") {\n      e.preventDefault();\n\n      handlePostSubmit({\n        description: comments,\n        event_id: GroupPostDataPopup.event_id,\n        post_id: GroupPostDataPopup.id,\n        user_id: userLogin.id,\n      });\n    }\n  };\n  if (!isOpen1) return null;\n  const handleOverlayClick = (e) => {\n    // Check if the clicked element is the overlay\n    if (e.target.classList.contains(\"popup-overlay\")) {\n      onClose1(); // Close the popup if the overlay is clicked\n    }\n  };\n  const handledeletebtn = () => {\n    setisPopupOpen_delete(true);\n    setdeleteMessage(\"Are you sure? You want to delete this album media\");\n  };\n  const closePopup_delete = () => {\n    setisPopupOpen_delete(false);\n  };\n  const refreshpopup = async () => {\n    deletePost();\n  };\n  const deletePost = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n  };\n  const handleChangeHeartPopup = async (postid, event_id) => {\n    let formData = {\n      user_id: userLogin.id,\n      post_id: postid,\n      event_id: event_id,\n    };\n    try {\n      const res = await axios.post(apiUrl + \"EventpostFavourite\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      favSectionRefresh();\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  return (\n    <>\n      <div className=\"popup-overlay\" onClick={handleOverlayClick}>\n        <AlertDelete\n          isOpen1={isPopupOpen_delete}\n          onClose1={closePopup_delete}\n          message={deleteMessage}\n          onReturnSent={refreshpopup}\n        ></AlertDelete>\n        {showPopSuccess && <SuccessPop message={successPopMessage} />}\n        <div className=\"popup-content col-md-10\">\n          <button\n            className=\"close-button\"\n            style={{ zIndex: \"999\" }}\n            onClick={onClose1}\n          >\n            &times; {/* Close button */}\n          </button>\n\n          <div className=\"usergallery_pop  d-flex flex-column gap-1 h-100\">\n            <button\n              className=\"arrow right\"\n              type=\"button\"\n              onClick={() => gotoNext()}\n            >\n              <FaChevronRight />\n            </button>\n            <button\n              className=\"arrow left\"\n              type=\"button\"\n              onClick={() => gotoprev()}\n            >\n              <FaChevronLeft />\n            </button>\n            <div className=\"row p-4\">\n              <div className=\"col-lg-7\">\n                <div className=\"position-relative\">\n                  <div className=\"d-block gallery_im1g \">\n                    {GroupPostDataPopup.file ? (\n                      // Check if the URL ends with a valid image extension\n                      <MediaRenderer url={GroupPostDataPopup.file} />\n                    ) : (\n                      // Fallback when `item.image` is undefined or invalid\n                      <p>{t(\"No_avalibale_media\")}</p>\n                    )}\n                  </div>\n                  {userLogin.id === GroupPostDataPopup.user_id && (\n                    <div className=\"flex-shrink-0 posttopbtns\">\n                      {/* <button\n                        title=\"Delete\"\n                        onClick={handledeletebtn}\n                        type=\"button\"\n                        className=\"btn redbtn\"\n                        style={{\n                          padding: \"0px 0px\",\n                          textAlign: \"center\",\n                          minWidth: \"0px\",\n                          background: \"red\",\n                          width: \"40px\",\n                          height: \"40px\",\n                          borderRadius: \"50px\",\n                          position: \"absolute\",\n                          top: \"10px\",\n                          right: \"15px\",\n                        }}\n                      >\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width={24}\n                          height={24}\n                          viewBox=\"0 0 24 24\"\n                          fill=\"none\"\n                          stroke=\"currentColor\"\n                          strokeWidth={2}\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          className=\"icon icon-tabler textcolor icons-tabler-outline icon-tabler-trash\"\n                        >\n                          <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                          <path d=\"M4 7l16 0\" />\n                          <path d=\"M10 11l0 6\" />\n                          <path d=\"M14 11l0 6\" />\n                          <path d=\"M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12\" />\n                          <path d=\"M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3\" />\n                        </svg>\n                      </button> */}\n                    </div>\n                  )}\n                </div>\n              </div>\n              <div className=\"col-lg-5\">\n                <div className=\"d-flex h-100 flex-column justify-content-between gap-1\">\n                  <div className=\"d-flex flex-column gap-1 p-3 bordr-bt\">\n                    <div className=\"d-flex align-items-center gap-3 justify-content-between\">\n                      <Link\n                        to={`/friend/${GroupPostDataPopup.uid}`}\n                        target=\"_blank\"\n                      >\n                        {GroupPostDataPopup.username}\n                      </Link>\n\n                      <h6>{formateTime(GroupPostDataPopup.date)}</h6>\n                    </div>\n                    <div className=\"d-flex align-items-center gap-3 justify-content-between\">\n                      <p>\n                        {GroupPostDataPopup &&\n                        GroupPostDataPopup.description &&\n                        GroupPostDataPopup.description.length > 150\n                          ? GroupPostDataPopup.description.substring(0, 150) +\n                            \"...\"\n                          : GroupPostDataPopup?.description ||\n                            \"No description available\"}\n                      </p>\n\n                      <div className=\"d-flex align-items-center gap-3 flex-shrink-0\">\n                        <div className=\"d-flex align-items-center gap-1 flex-shrink-0\">\n                          <button\n                            type=\"button\"\n                            className=\"liked  fulw\"\n                            onClick={() =>\n                              handleChangeHeartPopup(\n                                GroupPostDataPopup.id,\n                                GroupPostDataPopup.event_id\n                              )\n                            }\n                          >\n                            {GroupPostDataPopup.total_favorite ? (\n                              <FaHeart />\n                            ) : (\n                              <FaRegHeart />\n                            )}\n                          </button>\n                          <p className=\"likecount\">\n                            {GroupPostDataPopup.total_favorite}\n                          </p>\n                        </div>\n                        <div className=\"d-flex align-items-center gap-1 flex-shrink-0\">\n                          <div className=\"d-block like_icon\">\n                            <img\n                              className=\"w-100 h-100\"\n                              src={require(\"../assets/images/comment.png\")}\n                              alt=\"img\"\n                            />\n                          </div>\n                          <p className=\"likecount\">\n                            {GroupPostDataPopup.total_comments}\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"d-flex flex-column gap-1\">\n                    <ul className=\"usergallery_msg scroll_bar\">\n                      {GrouppostCommentGet.length === 0 ? (\n                        <li>{t(\"Nocommentsavailable\")}</li>\n                      ) : (\n                        GrouppostCommentGet.map((comment, index) => (\n                          <li className=\"gap-3\" key={index}>\n                            <div className=\"profile_img\">\n                              <img\n                                className=\"w-100 h-100\"\n                                src={\n                                  comment.makeImagePrivate === 1\n                                    ? require(\"../assets/images/thumb.jpg\") // Default image if the profile image is private\n                                    : comment.profile_image // Use user's profile image if available\n                                    ? comment.profile_image\n                                    : require(\"../assets/images/image3.png\") // Default image if no profile image\n                                }\n                                alt=\"img\"\n                              />\n                            </div>\n                            <div className=\"comment_text d-flex flex-column gap-1\">\n                              <h6>{comment.username}</h6>{\" \"}\n                              {/* Display the commenter's username */}\n                              <p>{comment.description}</p>{\" \"}\n                              {/* Display the comment text */}\n                            </div>\n                            <p>{formateTime(comment.date)}</p>{\" \"}\n                          </li>\n                        ))\n                      )}\n                      <li ref={chatEndRef} />\n                    </ul>\n                    <form\n                      action=\"javascript:void(0)\"\n                      method=\"post\"\n                      onSubmit={handlePostSubmit}\n                    >\n                      {restr_message && (\n                        <span\n                          className=\"text-danger\"\n                          style={{ fontSize: \"14px\" }}\n                        >\n                          {t(\"Your_message_contain\")}\n                        </span>\n                      )}\n                      <div className=\"d-flex align-items-center gap-3 w-100 usergallery_from\">\n                        {spinner && (\n                          <div\n                            className=\"spinner-border text-success postloader\"\n                            role=\"status\"\n                          >\n                            <span className=\"visually-hidden\"></span>\n                          </div>\n                        )}\n                        <div className=\"comment_input w-100 d-flex align-items-center gap-1\">\n                          <input\n                            type=\"hidden\"\n                            value={PopupData.id}\n                            name=\"comment_id\"\n                          />\n                          <div className=\"emoji-container\">\n                            <button\n                              type=\"button\"\n                              className=\"emoji-button\"\n                              onClick={() => setShowPicker(!showPicker)}\n                            >\n                              😀\n                            </button>\n\n                            {showPicker && (\n                              <div\n                                className=\"emoji-picker\"\n                                style={{ position: \"absolute\", top: \"64px\" }}\n                              >\n                                <EmojiPicker onEmojiClick={handleEmojiClick} />\n                              </div>\n                            )}\n                          </div>\n                          <input\n                            type=\"text\"\n                            required\n                            ref={inputRef}\n                            name=\"description\"\n                            value={comments} // Controlled input\n                            onChange={handleCommentChange} // Simplified\n                            onKeyDown={handleKeyDown} // Send on Enter Key\n                            placeholder={`${t(\"write_a_comment\")}`}\n                          />\n\n                          <button\n                            type=\"submit\"\n                            disabled={isButtonDisabled} // Disable button if comment is empty\n                            style={{ opacity: isButtonDisabled ? 1 : 1 }}\n                            className=\"comment_postbtn\"\n                          >\n                            {t(\"Post\")}\n                          </button>\n                        </div>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Link, useParams, useNavigate } from \"react-router-dom\";\nimport Headertwo from \"../components/Headertwo\";\nimport iconphoto from \"../assets/images/me3.png\";\nimport SuccessPop from \"../components/SuccessPop\";\nimport icon1 from \"../assets/images/det1.png\";\nimport icon2 from \"../assets/images/det2.png\";\nimport icon3 from \"../assets/images/det3.png\";\nimport axios from \"axios\";\nimport { InviteEventsFriend } from \"../components/InviteEventsFriend\";\nimport { AlertDelete } from \"../components/AlertDelete\";\nimport { AlertSucess } from \"../components/AlertSucess\";\nimport { AlertError } from \"../components/AlertError\";\nimport ErrorPop from \"../components/ErrorPop\";\nimport { format, parseISO } from \"date-fns\";\nimport { Createneweventpost } from \"../components/Createneweventpost\";\nimport { EventPostComment } from \"../components/EventPostComment\";\nimport { useTranslation } from \"react-i18next\";\nimport i18n from \"../i18n\";\nimport MediaRenderer from \"../components/MediaRenderer\";\nimport { Editevent } from \"../components/Editevent\";\nimport { EventMediaLikeComment } from \"../components/EventMediaLikeComment\";\nexport default function Singleevent() {\n  const navigate = useNavigate();\n  const [currentSlideIndex, setCurrentSlideIndex] = useState(1);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [allevents, setallevents] = useState([]);\n  const [editPage, seteditPage] = useState(false);\n  const [Allcheckgroupmember, setAllcheckgroupmember] = useState([]);\n  const [AllfriendId, setAllfriendId] = useState([]);\n  const [eventId, seteventId] = useState(\"\");\n  const [isPopupOpen1, setIsPopupOpen1] = useState(false);\n  const [isPopupOpen_error, setisPopupOpen_error] = useState(false);\n  const [isPopupOpen_sucess, setisPopupOpen_sucess] = useState(false);\n  const [isGrouppost, setGrouppost] = useState([]);\n  const [isPopupOpen_delete, setisPopupOpen_delete] = useState(false);\n  const [allyoureventsUser, setallyoureventsUser] = useState([]);\n  const [showPopSuccess, setShowPopSuccess] = useState(false);\n  const [LoginData, setLoginData] = useState(\"\");\n  const [EventDetail, setEventDetail] = useState(\"\");\n  const [showPopError, setShowPopError] = useState(false);\n  const [errorPopMessage, setPoperrorMessage] = useState(\"\");\n  const [successPopMessage, setPopsuccessMessage] = useState(\"\");\n  const [deleteMessage, setdeleteMessage] = useState(\"\");\n\n  const [EventDetailIntersted, setEventDetailIntersted] = useState([]);\n  const [showhide, setshowhide] = useState(false);\n\n  const [isInterested, setIsInterested] = useState(false);\n\n  const [isPopupOpen_newpost, setIsPopupOpen_newpost] = useState(false);\n  const [eventAcceptorNo, seteventAcceptorNo] = useState(false);\n  const [eventAccepted, seteventAccepted] = useState(false);\n  const [eventAcceptorNoCheck, seteventAcceptorNoCheck] = useState(false);\n  const [isEventpost, setEventpost] = useState([]);\n  const [allEventsInterstedUser, setallEventsInterstedUser] = useState([]);\n  const [eventView, seteventView] = useState(false);\n  var apiUrl = \"https://backend.amourette.no/api/\";\n  var apiUrl2 = \"https://backend.amourette.no/api/members/\";\n  const { slug } = useParams();\n  const { t } = useTranslation();\n  const storedUsername = localStorage.getItem(\"userLogin\");\n  const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem(\"language\") || \"en\"; // Default to 'en' if no language is saved\n    console.log(\"language\");\n    console.log(savedLanguage);\n\n    // Change the language if it's not already the current language\n    if (i18n.language !== savedLanguage) {\n      i18n.changeLanguage(savedLanguage);\n    }\n  }, [i18n, t]);\n  const editPageClose = () => {\n    seteditPage(false);\n  };\n  const open_Edit = () => {\n    seteditPage(true);\n  };\n  useEffect(() => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null; // Safely parse login data\n\n    getAllfriends();\n  }, []);\n  const getAllfriends = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      user_id: userLogin.id,\n    };\n    try {\n      const res = await axios.post(apiUrl2 + \"getAllfriends\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      var respo = res.data.results;\n      const friendUserIds = respo.map((friend) => friend.id);\n\n      setAllfriendId(friendUserIds);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  useEffect(() => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null; // Safely parse login data\n    setLoginData(userLogin);\n    if (slug === undefined) {\n      //seteventId(\"\");\n    } else {\n      getDetails(slug);\n      UsercheckAccept();\n    }\n  }, [eventId]);\n  useEffect(() => {\n    if (LoginData) {\n      UsercheckAccept(); // Call UsercheckAccept only when LoginData is available\n    }\n    if (slug !== undefined) {\n      getDetails(slug);\n    }\n  }, [LoginData, eventView, slug]);\n  const UsercheckAccept = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      user_id: userLogin.id,\n      slug: slug,\n    };\n    try {\n      const res = await axios.post(apiUrl + \"UsercheckAccept\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      var respo = res.data.results;\n      if (respo.length === 0) {\n        seteventView(false);\n        seteventAcceptorNo(false);\n        // navigate(\"/events\");\n      } else {\n        if (respo[0].event_status === \"Created by You\") {\n          seteventView(true);\n          seteventAcceptorNo(false);\n          seteventAcceptorNoCheck(false);\n        }\n        if (respo[0].invite_status === \"No\") {\n          seteventView(false);\n          seteventAcceptorNo(true);\n        }\n        if (respo[0].invite_status === \"Yes\") {\n          seteventView(true);\n          seteventAccepted(false);\n          seteventAcceptorNoCheck(true);\n        }\n      }\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const getDetails = async (slug) => {\n    let formData = {\n      slug: slug,\n    };\n    try {\n      const res = await axios.post(apiUrl + \"get_EventDetailSlug\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      var respo = res.data.event;\n      seteventId(respo.id);\n      //getEventdetail(respo.id);\n\n      getEventdetailallIntersted(respo.id);\n      get_EventIntersted(respo.id);\n      getpostComment(respo.id);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  useEffect(() => {\n    if (eventId !== \"\") {\n      getEventInterstedUser();\n    }\n  }, [eventId]);\n  const getEventInterstedUser = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null; // Safely parse login data\n    let formData = {\n      user_id: userLogin.id,\n      event_id: eventId,\n    };\n\n    try {\n      const res = await axios.post(apiUrl + \"getEventInterstedUser\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      console.log(res.data.results);\n      console.log(\"hhh\");\n      setallEventsInterstedUser(res.data.results);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const getallYoureventsUser = async (id) => {\n    let formData = {\n      user_id: LoginData.id,\n      event_id: id,\n    };\n\n    try {\n      const res = await axios.post(apiUrl + \"getallYoureventsUser\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n\n      setallyoureventsUser(res.data.events);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  useEffect(() => {\n    if (eventId !== \"\") {\n      getEventdetail();\n    }\n  }, [eventId]);\n  const getEventdetail = async () => {\n    let formData = {\n      event_id: eventId,\n    };\n    console.log(formData);\n    try {\n      const res = await axios.post(apiUrl + \"get_EventDetail\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n\n      if (res.data.event === \"\" || res.data.event === undefined) {\n        navigate(\"/events\");\n      } else {\n        if (LoginData && LoginData.id === res.data.event.user_id) {\n          setshowhide(true);\n        } else {\n          setshowhide(false);\n        }\n      }\n      setEventDetail(res.data.event);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n        console.error(\"Response error:\", err.response);\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n\n  const getEventdetailallIntersted = async (idd) => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = JSON.parse(storedUsername);\n    const userIdsWithSelf = [...AllfriendId, userLogin.id];\n    let formData = {\n      event_id: idd,\n      user_id: LoginData.id,\n      user_ids: userIdsWithSelf,\n    };\n\n    try {\n      const res = await axios.post(\n        apiUrl + \"get_EventdetailAllIntersted\",\n        formData,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        }\n      );\n\n      setEventDetailIntersted(res.data.results);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n\n  const get_EventIntersted = async (idd) => {\n    let formData = {\n      event_id: idd,\n      user_id: LoginData.id,\n    };\n\n    try {\n      const res = await axios.post(apiUrl + \"get_EventIntersted\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      if (res.data.status === \"1\") {\n        setIsInterested(true); // User is now interested\n      } else if (res.data.status === \"2\") {\n        setIsInterested(false); // User is no longer interested\n      }\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const openPopup1 = (id) => {\n    seteventId(id);\n    getallYoureventsUser(id);\n    setIsPopupOpen1(true);\n    document.body.style.overflowY = \"hidden\";\n  };\n  const closePopup1 = () => {\n    setIsPopupOpen1(false);\n    document.body.style.overflowY = \"auto\";\n  };\n\n  const open_DeleteAlert = (id) => {\n    setisPopupOpen_delete(true);\n    setdeleteMessage(\"Are you sure? You want delete this event\");\n  };\n  const closePopup_delete = () => {\n    setisPopupOpen_delete(false);\n  };\n  const closePopup_error = () => {\n    setisPopupOpen_error(false);\n  };\n  const closePopup_sucess = () => {\n    setisPopupOpen_sucess(false);\n  };\n  const refreshFriendsList = () => {\n    getallYoureventsUser(eventId);\n  };\n\n  const openPopup_newpost = () => {\n    setIsPopupOpen_newpost(true);\n    document.body.style.overflowY = \"hidden\";\n  };\n  const closePopup_newpost = () => {\n    setIsPopupOpen_newpost(false);\n    document.body.style.overflowY = \"auto\";\n  };\n\n  const deleteEvent = async () => {\n    let deleteev = {\n      user_id: LoginData.id,\n      event_id: eventId,\n    };\n    console.log(deleteev);\n    try {\n      const res = await axios.post(apiUrl + \"userDeleteEvent\", deleteev, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n\n      navigate(\"/events\");\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  useEffect(() => {\n    if (EventDetail) {\n      getuserGroupView(EventDetail.user_id);\n    }\n  }, [EventDetail]);\n  const getuserGroupView = async (idd) => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      user_id: EventDetail.user_id,\n      checkfrd: EventDetail.user_id,\n    };\n    try {\n      const res = await axios.post(apiUrl2 + \"checkfrdevent\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      var respo = res.data.results;\n      console.log(respo);\n      const friendUserIds = respo.map((friend) => friend.id);\n\n      setAllcheckgroupmember(friendUserIds);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const refreshpopup = async () => {\n    deleteEvent();\n  };\n\n  const formatDateRange = (startDate, endDate) => {\n    const start = parseISO(startDate);\n    const end = parseISO(endDate);\n\n    const startDay = format(start, \"d\");\n    const endDay = format(end, \"d\");\n    const month = format(start, \"MMM\");\n\n    return `${startDay} ${month} - ${endDay} ${month}`;\n  };\n\n  const handleInterested = async () => {\n    let formData = {\n      event_id: eventId,\n      user_id: LoginData.id,\n    };\n\n    try {\n      const res = await axios.post(apiUrl + \"userEventIntersted\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      console.log(\"hh\");\n      getEventdetailallIntersted(eventId);\n      if (res.data.status === \"1\") {\n        setIsInterested(true); // User is now interested\n      } else if (res.data.status === \"2\") {\n        setIsInterested(false); // User is no longer interested\n      }\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const getpostComment = async (idd) => {\n    let formData = {\n      event_id: idd,\n      user_id: LoginData.id,\n    };\n\n    try {\n      const res = await axios.post(apiUrl + \"get_postComment\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      console.log(\"res.data\");\n      setEventpost(res.data.results);\n      setGrouppost(res.data.results);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const refreshPostComment = () => {\n    getpostComment(eventId);\n    setIsPopupOpen_newpost(false);\n  };\n\n  const Iseventfav = async () => {\n    getpostComment(eventId);\n  };\n  const commentSectionRefresh = async () => {\n    getpostComment(eventId);\n  };\n  const handledeleteSentto = async (slug) => {\n    let deleteev = {\n      user_id: LoginData.id,\n      event_id: eventId,\n      slug: slug,\n    };\n\n    try {\n      const res = await axios.post(apiUrl + \"DeleteInviteRequest\", deleteev, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      setShowPopError(true);\n      setPoperrorMessage(\"Successfully deleted\");\n      navigate(\"/events\");\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const handleAccept = async (slug) => {\n    let eventAccepted = {\n      user_id: LoginData.id,\n      event_id: eventId,\n      slug: slug,\n    };\n\n    try {\n      const res = await axios.post(apiUrl + \"eventAccepted\", eventAccepted, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      console.log(res);\n      setShowPopSuccess(true);\n      setPopsuccessMessage(\"Event accepted successfully\");\n      UsercheckAccept();\n      setTimeout(() => {\n        setShowPopSuccess(false);\n        window.location.reload();\n      }, 800);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const getpostCommentrefresh = async () => {\n    getpostComment(eventId);\n  };\n  useEffect(() => {\n    if (modalOpen) {\n      // Disable scrolling when modal is open\n      document.body.style.overflowY = \"hidden\";\n    } else {\n      // Enable scrolling when modal is closed\n      document.body.style.overflowY = \"auto\";\n    }\n\n    // Cleanup to restore the overflow style when the component unmounts\n    return () => {\n      document.body.style.overflowY = \"auto\";\n    };\n  }, [modalOpen]);\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      if (event.key === \"Escape\") {\n        setModalOpen(false);\n      }\n    };\n\n    // Add event listener\n    window.addEventListener(\"keydown\", handleKeyDown);\n\n    // Cleanup event listener on unmount\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, []);\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      if (!modalOpen) return; // Ensure key events work only when modal is open\n\n      if (event.key === \"ArrowRight\") {\n        showSlide(currentSlideIndex + 1); // Right arrow → moves to next slide\n      } else if (event.key === \"ArrowLeft\") {\n        showSlide(currentSlideIndex - 1); // Left arrow ← moves to previous slide\n      }\n    };\n\n    document.addEventListener(\"keydown\", handleKeyDown);\n\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [currentSlideIndex, modalOpen]);\n  const openModal = () => setModalOpen(true);\n  const closeModal = () => setModalOpen(false);\n  const validPosts = isGrouppost.filter((post) => post.file);\n  const showSlide = (index) => {\n    if (index < 0) {\n      setCurrentSlideIndex(validPosts.length); // Loop back to last slide\n    } else if (index > validPosts.length) {\n      setCurrentSlideIndex(1); // Loop to first slide\n    } else {\n      setCurrentSlideIndex(index);\n    }\n  };\n\n  // Likes Comments Groups Same As Gallery\n  console.log(validPosts);\n  const [isPopupOpen11, setIsPopupOpen11] = useState(false);\n  const [GroupPostDataPopup, setGroupPostDataPopup] = useState(\"\");\n  const [GrouppostCommentGet, setGrouppostCommentGet] = useState([]);\n  const [popupgroupindex, setpopupgroupindex] = useState(\"\");\n  const [currentIndexPopup, setCurrentIndexPopup] = useState(0); // Assuming you have a state to track the index\n  const [GroupCommentpopupPostId, setGroupCommentpopupPostId] = useState(\"\");\n  const openPopupCommentBox = async (id, group_id, index) => {\n    setGroupCommentpopupPostId(id);\n    GrouppostComment(id, group_id);\n    setpopupgroupindex(index);\n    let formData = {\n      id: id,\n      event_id: group_id,\n      user_id: userLogin.id,\n    };\n    try {\n      const res = await axios.post(apiUrl + \"getEventPostData\", formData, {\n        headers: {\n          Accept: \"application/json\",\n        },\n      });\n      setGroupPostDataPopup(res.data.results[0]);\n      setIsPopupOpen11(true);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const GrouppostComment = async (postid, group_id) => {\n    let formData = {\n      id: postid,\n      event_id: group_id,\n      user_id: userLogin.id,\n    };\n    try {\n      const res = await axios.post(apiUrl + \"getEventpostComment\", formData, {\n        headers: {\n          Accept: \"application/json\",\n        },\n      });\n      setGrouppostCommentGet(res.data.results);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const closePopup11 = () => {\n    setIsPopupOpen11(false);\n    document.body.style.overflowY = \"auto\";\n  };\n  const getrefreshComment = async () => {\n    GrouppostComment(GroupCommentpopupPostId, eventId);\n  };\n  const favSectionRefresh = async () => {\n    openPopupCommentBox(GroupCommentpopupPostId, eventId, popupgroupindex);\n  };\n  const gotoNext = () => {\n    console.log(\"Navigating to next post\");\n    setCurrentIndexPopup((prevIndex) => {\n      if (prevIndex < validPosts.length - 1) {\n        const newIndex = prevIndex + 1;\n        console.log(\"New Index:\", newIndex);\n        console.log(\"Next Post Data:\", validPosts[newIndex]);\n        openPopupCommentBox(\n          validPosts[newIndex].id,\n          validPosts[newIndex].event_id,\n          newIndex\n        );\n        return newIndex;\n      }\n      console.log(\"Already at the last post. Index:\", prevIndex);\n      console.log(\"Current Post Data:\", validPosts[prevIndex]);\n      return prevIndex;\n    });\n  };\n\n  const gotoprev = () => {\n    console.log(\"Navigating to previous post\");\n    setCurrentIndexPopup((prevIndex) => {\n      if (prevIndex > 0) {\n        const newIndex = prevIndex - 1;\n        console.log(\"New Index:\", newIndex);\n        console.log(\"Previous Post Data:\", validPosts[newIndex]);\n        openPopupCommentBox(\n          validPosts[newIndex].id,\n          validPosts[newIndex].event_id,\n          newIndex\n        );\n        return newIndex;\n      }\n      console.log(\"Already at the first post. Index:\", prevIndex);\n      console.log(\"Current Post Data:\", validPosts[prevIndex]);\n      return prevIndex;\n    });\n  };\n  // Likes Comments Groups Same As Gallery\n  return (\n    <>\n      <Headertwo />\n      {showPopError && <ErrorPop message={errorPopMessage} />}\n      {showPopSuccess && <SuccessPop message={successPopMessage} />}\n      <section className=\"singleevent d-block gapy\">\n        <div className=\"container-lg\">\n          <div className=\"row gy-4\">\n            <div className=\"col-md-7\">\n              <div className=\"d-flex flex-column gap-4\">\n                <div className=\"eventtitle d-block pb-1\">\n                  <h1>{EventDetail.name}</h1>\n                </div>\n                <div className=\"d-flex flex-column gap-2\">\n                  {showhide && (\n                    <div className=\"evname d-block\">\n                      <div className=\"d-flex flex-column gap-2\">\n                        <div\n                          className=\"d-flex gap-2 align-items-center\"\n                          onClick={openPopup_newpost}\n                        >\n                          <div className=\"flex-shrink-0\">\n                            <div className=\"evephoto ofit rounded-circle overflow-hidden\">\n                              <img src={EventDetail.image} alt=\"evepic\" />\n                            </div>\n                          </div>\n                          <div className=\"flex-grow-1\">\n                            <div className=\"whatthink d-block\">\n                              <h4>{`${t(\"what_do_you_think\")}`}</h4>\n                            </div>\n                          </div>\n                        </div>\n                        <div\n                          className=\"d-flex justify-content-end addphotothink\"\n                          onClick={openPopup_newpost}\n                        >\n                          <div className=\"d-flex gap-2 align-items-center\">\n                            <div className=\"flex-grow-1\">\n                              <h4>{`${t(\"Add_photo\")}`}</h4>\n                            </div>\n                            <div className=\"flex-shrink-0\">\n                              <div className=\"iconphoto fulw\">\n                                <img src={iconphoto} alt=\"namepic\" />\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                  {eventView ? (\n                    <EventPostComment\n                      isEventpost={isEventpost}\n                      LoginData={LoginData}\n                      Iseventfav={Iseventfav}\n                      commentSectionRefresh={commentSectionRefresh}\n                      getpostCommentrefresh={getpostCommentrefresh}\n                    />\n                  ) : (\n                    <p>{`${t(\"No_result_found\")}`}</p>\n                  )}\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-5\">\n              <div className=\"d-flex flex-column gap-3\">\n                <div className=\"d-flex align-items-start flex-wrap gap-3\">\n                  <div className=\"d-flex justify-content-start gap-3 posttopbtns\">\n                    {eventAcceptorNo && (\n                      <button\n                        type=\"button\"\n                        onClick={() => handleAccept(slug)}\n                        className={`btn prbtn ${isInterested ? \"\" : \"\"}`}\n                      >\n                        {`${t(\"Accept\")}`}\n                      </button>\n                    )}\n                    {eventAcceptorNoCheck && (\n                      <button\n                        type=\"button\"\n                        className={`btn prbtn ${isInterested ? \"\" : \"\"}`}\n                      >\n                        {`${t(\"Accepted\")}`}\n                      </button>\n                    )}\n                    {!showhide && (\n                      <button\n                        type=\"button\"\n                        onClick={handleInterested}\n                        className={`btn prbtn ${\n                          isInterested ? \"interested_btn\" : \"\"\n                        }`}\n                      >\n                        {`${t(\"INTERESTED\")}`}\n                      </button>\n                    )}\n                    {eventAcceptorNo && (\n                      <button\n                        type=\"button\"\n                        onClick={() => handledeleteSentto(slug)}\n                        className={`btn redbtn ${isInterested ? \"\" : \"\"}`}\n                      >\n                        {`${t(\"Delete\")}`}\n                      </button>\n                    )}\n                    {showhide && (\n                      <button\n                        type=\"button\"\n                        onClick={() => openPopup1(eventId)}\n                        className=\"btn sebtn\"\n                      >\n                        {`${t(\"invite_a_member\")}`}\n                      </button>\n                    )}\n                  </div>\n\n                  {/* {showhide && (\n                    <div className=\"d-flex justify-content-between posttopbtns\">\n                      <button type=\"button\" className=\"btn prbtn\">\n                        {`${t(\"save_changes\")}`}\n                      </button>\n                    </div>\n                  )} */}\n                  {showhide && (\n                    <div className=\"d-flex justify-content-between posttopbtns\">\n                      <button\n                        type=\"button\"\n                        onClick={() => open_DeleteAlert(eventId)}\n                        className=\"btn redbtn\"\n                      >\n                        {`${t(\"DELETE_EVENT\")}`}\n                      </button>\n                    </div>\n                  )}\n                  {showhide && (\n                    <div className=\"d-flex justify-content-between posttopbtns\">\n                      <button\n                        type=\"button\"\n                        onClick={() => open_Edit()}\n                        className=\"btn sebtn\"\n                      >\n                        {`${t(\"edit_events\")}`}\n                      </button>\n                    </div>\n                  )}\n                </div>\n                <div className=\"detailbox d-flex flex-column gap-2\">\n                  <h3>{`${t(\"Detaljer\")}`}</h3>\n                  <p>{EventDetail.description}</p>\n                  <div className=\"d-flex flex-column gap-2 mt-2\">\n                    <div className=\"d-flex gap-3 align-items-center deticontext \">\n                      <div className=\"flex-shrink-0\">\n                        <div className=\"pubimg fulw\">\n                          <img src={icon1} alt=\"pubimg\" />\n                        </div>\n                      </div>\n                      <div className=\"flex-grow-1\">\n                        <h5>\n                          {EventDetail.makeImagePrivate === 0\n                            ? \"Public\"\n                            : \"Private\"}\n                        </h5>\n                      </div>\n                    </div>\n                    <div className=\"d-flex gap-3 align-items-center deticontext \">\n                      <div className=\"flex-shrink-0\">\n                        <div className=\"pubimg fulw\">\n                          <img src={icon2} alt=\"pubimg\" />\n                        </div>\n                      </div>\n                      <div className=\"flex-grow-1\">\n                        <h5>{EventDetail.location}</h5>\n                      </div>\n                    </div>\n                    <div className=\"d-flex gap-3 align-items-center deticontext \">\n                      <div className=\"flex-shrink-0\">\n                        <div className=\"pubimg fulw\">\n                          <img src={icon3} alt=\"pubimg\" />\n                        </div>\n                      </div>\n                      <div className=\"flex-grow-1\">\n                        <h5>\n                          {EventDetail.time} and{\" \"}\n                          {EventDetail.start_date && EventDetail.end_date ? (\n                            formatDateRange(\n                              EventDetail.start_date,\n                              EventDetail.end_date\n                            )\n                          ) : (\n                            <span> {`${t(\"invalid_date_range\")}`}</span>\n                          )}\n                        </h5>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"detailbox d-flex flex-column gap-2\">\n                  {/* <div className=\"row g-2 g-md-4\">\n                    {EventDetailIntersted && EventDetailIntersted.length > 0 ? (\n                      EventDetailIntersted.map((member, index) => (\n                        <div className=\"col-2 col-md-3\" key={index}>\n                          <div className=\"memperson ofit overflow-hidden rounded-3\">\n                            {member.profile_image ? ( // Display the image URL if available\n                              <img\n                                className=\"w-100 h-100\"\n                                src={member.profile_image} // Use the URL created from the file\n                                alt=\"Selected\"\n                              />\n                            ) : (\n                              <img\n                                className=\"w-100 h-100\"\n                                src={require(\"../assets/images/thumb.jpg\")} // If it's an image URL from the profile\n                                alt=\"Profile\"\n                              />\n                            )}\n                          </div>\n                        </div>\n                      ))\n                    ) : (\n                      <div className=\"col-12\">\n                        <p>{`${t(\"No_result_found\")}`}</p>\n                      </div>\n                    )}\n                  </div> */}\n\n                  <div className=\"row g-2 g-md-4\">\n                    <div className=\"col-12\">\n                      <h3>{`${t(\"LeftMenu_Members\")}`} </h3>\n                      <div className=\"d-flex flex-column gap-3 tag_friends\">\n                        <div className=\"d-flex align-items-start w-100 gap-3\">\n                          {/* <span>{EventDetailIntersted.length}</span> */}\n                          <div className=\"d-flex flex-column gap-3 overflow-auto scroll_bar pb-4\">\n                            <div className=\"d-flex align-items-center w-100 gap-2\">\n                              {EventDetailIntersted.length > 0 && (\n                                <span>{EventDetailIntersted.length}</span>\n                              )}\n\n                              <p className=\"text1line\">\n                                {EventDetailIntersted &&\n                                EventDetailIntersted.length > 0\n                                  ? EventDetailIntersted.map(\n                                      (member, index) => (\n                                        <span key={member.uid}>\n                                          <Link\n                                            to={`/friend/${member.uid}`}\n                                            target=\"_blank\"\n                                          >\n                                            {member.username}\n                                          </Link>\n                                          {index !==\n                                            EventDetailIntersted.length - 1 &&\n                                            \", \"}\n                                        </span>\n                                      )\n                                    )\n                                  : \"\"}\n                              </p>\n                            </div>\n\n                            {EventDetailIntersted &&\n                            EventDetailIntersted.length > 0 ? (\n                              <ul className=\"avimgs\">\n                                {EventDetailIntersted.map((member, index) => (\n                                  <li key={index}>\n                                    <Link\n                                      to={`/friend/${member.uid}`}\n                                      target=\"_blank\"\n                                    >\n                                      <img\n                                        className=\"w-100 h-100\"\n                                        src={\n                                          member.profile_image ||\n                                          require(\"../assets/images/thumb.jpg\")\n                                        }\n                                        alt=\"Profile\"\n                                      />\n                                    </Link>\n                                  </li>\n                                ))}\n                              </ul>\n                            ) : (\n                              <p>{t(\"No_result_found\")}</p>\n                            )}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* <div className=\"d-block vmore\">\n                    <Link to=\"/\">View More</Link>\n                  </div> */}\n                </div>\n                <div className=\"detailbox d-flex flex-column gap-2\">\n                  <h3>{`${t(\"Media\")}`}</h3>\n                  <div className=\"row\">\n                    {eventView && validPosts.length > 0 ? (\n                      <div className=\"row gy-2\">\n                        {validPosts.map((post, index) =>\n                          post.file ? (\n                            <div className=\"col-sm-3 col-md-6\" key={index}>\n                              <div className=\"memperson ofit \">\n                                <div className=\"overflow-hidden rounded-3 d-block\">\n                                  <MediaRenderer\n                                    url={post.file}\n                                    onClick={() => {\n                                      if (eventView) {\n                                        openPopupCommentBox(\n                                          post.id,\n                                          post.event_id,\n                                          index\n                                        );\n                                        showSlide(index + 1);\n                                      } else {\n                                        openModal(); // Call your function for opening the modal when groupView is false\n                                        showSlide(index + 1);\n                                      }\n                                    }}\n                                  />\n                                </div>\n                                <Link\n                                  to={`/friend/${post.uid}`}\n                                  target=\"_blank\"\n                                  className=\"goupmediatext\"\n                                >\n                                  {post.username}\n                                </Link>\n                              </div>\n                            </div>\n                          ) : null\n                        )}\n                      </div>\n                    ) : (\n                      <p>{`${t(\"No_available_media\")}`}</p>\n                    )}\n                  </div>\n\n                  {eventView &&\n                    validPosts.some(\n                      (post) =>\n                        post.file &&\n                        typeof post.file === \"string\" &&\n                        post.file.trim() !== \"\"\n                    ) && (\n                      <div className=\"d-block vmore\">\n                        <Link to={`/eventmedia/${slug}`}>{`${t(\n                          \"view_more\"\n                        )}`}</Link>\n                      </div>\n                    )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n      {modalOpen && (\n        <div id=\"myModal\" className=\"modalgg\">\n          <span className=\"close cursor\" onClick={closeModal}>\n            &times;\n          </span>\n          <div className=\"modal-content\">\n            {validPosts.length > 0 ? (\n              validPosts.map((post, index) => (\n                <div\n                  className=\"mySlides\"\n                  style={{\n                    display: currentSlideIndex === index + 1 ? \"block\" : \"none\",\n                  }}\n                  key={index}\n                >\n                  <div className=\"numbertext\">\n                    {index + 1} / {validPosts.length}\n                  </div>\n\n                  {post.file &&\n                  typeof post.file === \"string\" &&\n                  post.file.match(/\\.(jpeg|jpg|gif|png|webp|bmp|svg)$/i) ? (\n                    <img src={post.file} alt=\"img\" />\n                  ) : post.file &&\n                    typeof post.file === \"string\" &&\n                    post.file.match(\n                      /\\.(mp4|mov|avi|mkv|webm|ogg|flv|3gp)$/i\n                    ) ? (\n                    <video controls alt=\"video\">\n                      <source src={post.file} type=\"video/mp4\" />\n                      {`${t(\"Your_browser_does\")}`}\n                    </video>\n                  ) : null}\n                </div>\n              ))\n            ) : (\n              <p>{`${t(\"No_available_media\")}`}</p>\n            )}\n\n            <a\n              className=\"prev\"\n              onClick={() => showSlide(currentSlideIndex - 1)}\n            >\n              &#10094;\n            </a>\n            <a\n              className=\"next\"\n              onClick={() => showSlide(currentSlideIndex + 1)}\n            >\n              &#10095;\n            </a>\n          </div>\n        </div>\n      )}\n      <InviteEventsFriend\n        isOpen1={isPopupOpen1}\n        onClose1={closePopup1}\n        friends={allyoureventsUser}\n        LoginData={LoginData}\n        eventId={eventId}\n        onInvitesSent={refreshFriendsList}\n      ></InviteEventsFriend>\n      <AlertDelete\n        isOpen1={isPopupOpen_delete}\n        onClose1={closePopup_delete}\n        message={deleteMessage}\n        onReturnSent={refreshpopup}\n      ></AlertDelete>\n      <AlertError\n        isOpen1={isPopupOpen_error}\n        onClose1={closePopup_error}\n      ></AlertError>\n      <AlertSucess\n        isOpen1={isPopupOpen_sucess}\n        onClose1={closePopup_sucess}\n      ></AlertSucess>\n      <Createneweventpost\n        isOpen={isPopupOpen_newpost}\n        onClose={closePopup_newpost}\n        eventId={eventId}\n        LoginData={LoginData}\n        reSetPost={refreshPostComment}\n      ></Createneweventpost>\n      <Editevent\n        isOpen={editPage}\n        onClose={editPageClose}\n        LoginData={LoginData}\n        eventId={eventId}\n        EventDetail={EventDetail}\n      ></Editevent>\n\n      <EventMediaLikeComment\n        isOpen1={isPopupOpen11}\n        onClose1={closePopup11}\n        GroupPostDataPopup={GroupPostDataPopup}\n        GrouppostCommentGet={GrouppostCommentGet}\n        getrefreshComment={getrefreshComment}\n        favSectionRefresh={favSectionRefresh}\n        gotoNext={gotoNext}\n        gotoprev={gotoprev}\n        validPosts={validPosts}\n      />\n    </>\n  );\n}\n"],"names":["InviteEventsFriend","_ref","isOpen1","onClose1","children","friends","LoginData","eventId","onInvitesSent","selectedFriends","setSelectedFriends","useState","invMessage","setinvMessage","t","useTranslation","useEffect","savedLanguage","localStorage","getItem","console","log","i18n","language","changeLanguage","_jsx","_Fragment","className","onClick","e","target","classList","contains","_jsxs","action","onSubmit","async","preventDefault","formData","friendIds","user_id","id","response","axios","post","apiUrl","headers","setTimeout","data","error","method","length","map","friend","index","profile_image","src","alt","require","username","type","onChange","handleCheckboxChange","userId","prevSelected","includes","filter","checked","name","disabled","AlertSucess","AlertError","Createneweventpost","isOpen","onClose","reSetPost","description","setDescription","image","setImage","restr_message","setrestr_message","setError","spinner","setspinner","fileType","setFileType","videoUrl","setVideoUrl","restrictedWords","isButtonDisabled","trim","style","fontSize","FormData","append","res","Accept","status","err","request","rows","placeholder","value","inputValue","hasRestrictedWord","some","word","toLowerCase","accept","event","file","files","isImage","startsWith","isVideo","size","URL","createObjectURL","controls","height","BsCloudUpload","color","role","opacity","EventPostComment","isEventpost","Iseventfav","commentSectionRefresh","getpostCommentrefresh","postId","setpostId","currentSlideIndex","setCurrentSlideIndex","isPopupOpen_delete","setisPopupOpen_delete","deleteMessage","setdeleteMessage","comments","setComments","Array","fill","webSocket","setWebSocket","errorPopMessage","setPoperrorMessage","restrictedStates","setRestrictedStates","inputRef","useRef","modalOpen","setModalOpen","imagess","setimage","closeModal","showPopError","setShowPopError","ws","WebSocket","onmessage","receivedMessage","JSON","parse","close","handlePostComment","event_id","_comments$index","commentText","currentWordCount","text","split","post_id","comment","prev","results","fetchComments","formateTime","dateString","postDate","Date","isNaN","getTime","now","adjustedPostDate","osloPostTime","Intl","DateTimeFormat","timeZone","hour","minute","hour12","format","timeDiff","seconds","Math","floor","minutes","hours","days","weeks","months","years","showPicker","setShowPicker","handleKeyDown","key","document","addEventListener","removeEventListener","AlertDelete","closePopup_delete","message","onReturnSent","handleeventPostDelete","ErrorPop","_comments$index3","_comments$index4","Link","to","uid","makeImagePrivate","date","title","handleeventPostDeleteconfirm","padding","textAlign","minWidth","background","xmlns","width","viewBox","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","MediaRenderer","url","chat","postid","handleChangeHeart","fav","FaHeart","FaRegHeart","fav_count","comm","comt_uid","comment_user_profile_image","comment_makeImagePrivate","comment_user_username","comment_date","toggleEmojiPicker","EmojiPicker","onEmojiClick","emojiObject","handleEmojiClick","inputEl","current","currentValue","startPos","selectionStart","endPos","selectionEnd","newValue","substring","emoji","focus","onKeyDown","_comments$index2","ref","el","handleCommentChange","transition","display","Editevent","onEventCreated","EventDetail","selectedFile","setSelectedFile","errorMessage","setErrorMessage","showPopSuccess","setShowPopSuccess","successPopMessage","setPopsuccessMessage","setMakeImagePrivate","eventData","setEventData","start_date","end_date","time","location","today","day","String","getDate","padStart","month","getMonth","year","getFullYear","previewImage","setPreviewImage","makeImageUse","today_enddate","handleInputChange","prevData","SuccessPop","storedUsername","userLogin","window","replace","slug","reload","required","defaultValue","selectedDate","setHours","alert","minLength","EventMediaLikeComment","GroupPostDataPopup","GrouppostCommentGet","getrefreshComment","favSectionRefresh","gotoNext","gotoprev","validPosts","input","setInput","chatEndRef","isparamVl","setparamVl","UserPhotoCommets","setUserPhotoCommets","UserPopupData","setUserPopupData","PopupData","setPopupData","handlePostSubmit","scrollIntoView","behavior","deletePost","zIndex","FaChevronRight","FaChevronLeft","handleChangeHeartPopup","total_favorite","total_comments","position","top","prevMessage","Singleevent","navigate","useNavigate","allevents","setallevents","editPage","seteditPage","Allcheckgroupmember","setAllcheckgroupmember","AllfriendId","setAllfriendId","seteventId","isPopupOpen1","setIsPopupOpen1","isPopupOpen_error","setisPopupOpen_error","isPopupOpen_sucess","setisPopupOpen_sucess","isGrouppost","setGrouppost","allyoureventsUser","setallyoureventsUser","setLoginData","setEventDetail","EventDetailIntersted","setEventDetailIntersted","showhide","setshowhide","isInterested","setIsInterested","isPopupOpen_newpost","setIsPopupOpen_newpost","eventAcceptorNo","seteventAcceptorNo","eventAccepted","seteventAccepted","eventAcceptorNoCheck","seteventAcceptorNoCheck","setEventpost","allEventsInterstedUser","setallEventsInterstedUser","eventView","seteventView","apiUrl2","useParams","getAllfriends","friendUserIds","undefined","getDetails","UsercheckAccept","respo","event_status","invite_status","getEventdetailallIntersted","get_EventIntersted","getpostComment","getEventInterstedUser","getallYoureventsUser","events","getEventdetail","userIdsWithSelf","idd","user_ids","openPopup_newpost","body","overflowY","getuserGroupView","checkfrd","showSlide","isPopupOpen11","setIsPopupOpen11","setGroupPostDataPopup","setGrouppostCommentGet","popupgroupindex","setpopupgroupindex","currentIndexPopup","setCurrentIndexPopup","GroupCommentpopupPostId","setGroupCommentpopupPostId","openPopupCommentBox","group_id","GrouppostComment","Headertwo","iconphoto","handleAccept","deleteev","handledeleteSentto","openPopup1","icon1","icon2","icon3","formatDateRange","startDate","endDate","start","parseISO","end","startDay","endDay","member","match","closePopup1","refreshFriendsList","deleteEvent","closePopup_error","closePopup_sucess","closePopup_newpost","refreshPostComment","editPageClose","closePopup11","prevIndex","newIndex"],"sourceRoot":""}