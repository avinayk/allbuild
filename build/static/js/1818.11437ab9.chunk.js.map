{"version":3,"file":"static/js/1818.11437ab9.chunk.js","mappings":"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,GAAGiB,OAAWjB,GAAc,EA+C/BxH,EAAkB,CACtB,OACA,WACA,WACA,MACA,WACA,UACA,UACA,QACA,SACA,WACA,gBACA,SACA,WACA,eACA,mBACA,sBACA,OACA,aACA,OACA,OACA,SACA,OACA,SACA,UACA,OACA,YACA,WACA,WACA,WACA,UACA,OACA,SACA,gBACA,eACA,OACA,SACA,UACA,aACA,YACA,WACA,WACA,UACA,UACA,YACA,YACA,WACA,YACA,YACA,UACA,WACA,WACA,UACA,eACA,aACA,sBACA,kBACA,yBACA,aACA,OACA,gBACA,gBACA,eACA,QACA,QACA,YACA,OACA,QACA,QACA,OACA,WACA,QACA,iBACA,aACA,eACA,OACA,iBACA,iBACA,UACA,cACA,OACA,UAKI0I,EAAoBvH,MAAOwH,EAAOlD,EAAQmD,KAAc,IAADC,EAC3D,MAAMC,EAAkC,QAAvBD,EAAGjE,EAAc+D,UAAM,IAAAE,OAAA,EAApBA,EAAsB3I,OACpC6I,GALYC,EAKkBF,GAJxB5I,OAAS8I,EAAKC,MAAM,OAAOlE,OAAS,EAD9BiE,MAMlB,GAAID,EAAmB,KACrB,GAAID,EAAa,CACf,MAAMzH,EAAW,CACf6H,QAASzD,EACT0D,QAASnL,EAAUwD,GACnBoH,SAAUA,EACVQ,QAASN,GAGX,IACE,MAAMrH,QAAYC,EAAAA,EAAMC,KACtBC,EAAS,yBACTP,EACA,CACEQ,QAAS,CACPC,OAAQ,mBACR,eAAgB,sBAKtBnC,QAAQC,IAAI,kBAAmB6B,EAAIO,MAGnC6C,GAAkBwE,IAAI,IACjBA,EACH,CAACV,GAAQ,OAGX1G,YAAW,KACTqH,GAAqB,GACpB,KAEHhF,GACF,CAAE,MAAOpC,GACPvC,QAAQpB,MAAM,yBAA0B2D,EAC1C,CACF,OAEAgD,GAAgB,GAChBE,EACE,gDAAwD2D,YAE1D9G,YAAW,KACTiD,GAAgB,GAChBE,EAAmB,GAAG,GACrB,KACL,EAGIkE,EAAsBA,QAsCrBC,EAAYC,IAAiBpL,EAAAA,EAAAA,UAAS,CAAC,GAiE9C,OAhBAmB,EAAAA,EAAAA,YAAU,KACR,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","sources":["components/Createnewgrouppost.jsx","components/GroupPostComment.jsx","components/GroupInviteFriend.jsx","components/Editgroup.jsx","components/GroupMediaLikeComment.jsx","pages/Singlegroup.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BsCloudUpload } from \"react-icons/bs\";\nimport axios from \"axios\";\nimport SuccessPop from \"../components/SuccessPop\";\nimport { useTranslation } from \"react-i18next\";\nimport i18n from \"../i18n\";\nexport const Createnewgrouppost = ({\n  isOpen,\n  onClose,\n  children,\n  groupId,\n  LoginData,\n  reSetPost,\n}) => {\n  var apiUrl = \"https://backend.amourette.no/api/groups/\";\n  const [description, setDescription] = useState(\"\");\n  const [image, setImage] = useState(null);\n  const [error, setError] = useState(\"\");\n  const [showPopSuccess, setShowPopSuccess] = useState(false);\n  const [successPopMessage, setPopsuccessMessage] = useState(\"\");\n  const [spinner, setspinner] = useState(false);\n  const [restr_message, setrestr_message] = useState(false);\n  const [fileType, setFileType] = useState(\"\");\n  const [videoUrl, setVideoUrl] = useState(\"\");\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem(\"language\") || \"en\"; // Default to 'en' if no language is saved\n    console.log(\"language\");\n    console.log(savedLanguage);\n\n    // Change the language if it's not already the current language\n    if (i18n.language !== savedLanguage) {\n      i18n.changeLanguage(savedLanguage);\n    }\n  }, [i18n, t]);\n  if (!isOpen) return null;\n  const handleOverlayClick = (e) => {\n    // Check if the clicked element is the overlay\n    if (e.target.classList.contains(\"popup-overlay\")) {\n      onClose(); // Close the popup if the overlay is clicked\n    }\n  };\n  const MAX_FILE_SIZE = 25 * 1024 * 1024; // 2 MB\n  const handleImageChange = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      // Check if the file is an image or video\n      const isImage = file.type.startsWith(\"image/\");\n      const isVideo = file.type.startsWith(\"video/\");\n\n      if (!isImage && !isVideo) {\n        setError(\"Please upload a valid image or video file.\");\n        setImage(null);\n        return;\n      }\n\n      // Check file size\n      if (file.size > MAX_FILE_SIZE) {\n        setError(\"File size must be less than 5 MB.\");\n        setImage(null);\n        return;\n      }\n\n      // Clear previous error messages\n      setError(\"\");\n      setImage(file);\n      setFileType(isImage ? \"image\" : \"video\");\n\n      if (isVideo) {\n        //const resizedVideoUrl = await resizeVideo(file);\n        // setVideoUrl(resizedVideoUrl);\n      }\n    }\n  };\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setspinner(true);\n    const formData = new FormData();\n    formData.append(\"description\", description);\n    formData.append(\"image\", image);\n    formData.append(\"group_id\", groupId);\n    formData.append(\"user_id\", LoginData.id);\n    formData.append(\"fileType\", \"groupspost\");\n    try {\n      const res = await axios.post(apiUrl + \"createGroupPost\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"multipart/form\", // Ensure the content type is JSON\n        },\n      });\n      console.log(res.status);\n      setspinner(false);\n      if (res.status === 200) {\n        setShowPopSuccess(true);\n        setPopsuccessMessage(\"Post created successfully\");\n        console.log(\"Submission successful:\", res.data);\n        // Reset the form fields\n        reSetPost();\n        setTimeout(() => {\n          setShowPopSuccess(false);\n          setPopsuccessMessage(\"\");\n          onClose();\n        }, 800);\n        setDescription(\"\");\n        setImage(null);\n        setError(\"\");\n      }\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        // console.error(\"Request data:\", err.request);\n      } else {\n        //console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const restrictedWords = [\n    \"arse\",\n    \"arsehead\",\n    \"arsehole\",\n    \"ass\",\n    \"ass hole\",\n    \"asshole\",\n    \"bastard\",\n    \"bitch\",\n    \"bloody\",\n    \"bollocks\",\n    \"brotherfucker\",\n    \"bugger\",\n    \"bullshit\",\n    \"child-fucker\",\n    \"Christ on a bike\",\n    \"Christ on a cracker\",\n    \"cock\",\n    \"cocksucker\",\n    \"crap\",\n    \"cunt\",\n    \"dammit\",\n    \"damn\",\n    \"damned\",\n    \"damn it\",\n    \"dick\",\n    \"dick-head\",\n    \"dickhead\",\n    \"dumb ass\",\n    \"dumb-ass\",\n    \"dumbass\",\n    \"dyke\",\n    \"faggot\",\n    \"father-fucker\",\n    \"fatherfucker\",\n    \"fuck\",\n    \"fucker\",\n    \"fucking\",\n    \"god dammit\",\n    \"goddammit\",\n    \"God damn\",\n    \"god damn\",\n    \"goddamn\",\n    \"Goddamn\",\n    \"goddamned\",\n    \"goddamnit\",\n    \"godsdamn\",\n    \"holy shit\",\n    \"horseshit\",\n    \"in shit\",\n    \"jackarse\",\n    \"jack-ass\",\n    \"jackass\",\n    \"Jesus Christ\",\n    \"Jesus fuck\",\n    \"Jesus Harold Christ\",\n    \"Jesus H. Christ\",\n    \"Jesus, Mary and Joseph\",\n    \"Jesus wept\",\n    \"kike\",\n    \"mother fucker\",\n    \"mother-fucker\",\n    \"motherfucker\",\n    \"nigga\",\n    \"nigra\",\n    \"pigfucker\",\n    \"piss\",\n    \"prick\",\n    \"pussy\",\n    \"shit\",\n    \"shit ass\",\n    \"shite\",\n    \"sibling fucker\",\n    \"sisterfuck\",\n    \"sisterfucker\",\n    \"slut\",\n    \"son of a bitch\",\n    \"son of a whore\",\n    \"spastic\",\n    \"sweet Jesus\",\n    \"twat\",\n    \"wanker\",\n  ];\n  const isButtonDisabled = (!description.trim() && !image) || restr_message;\n  const handleCommentChange = (e) => {\n    const inputValue = e.target.value;\n    setDescription(inputValue);\n\n    // Check for restricted words\n    const hasRestrictedWord = restrictedWords.some((word) =>\n      inputValue.toLowerCase().includes(word.toLowerCase())\n    );\n\n    if (hasRestrictedWord) {\n      setrestr_message(true);\n    } else {\n      setrestr_message(false);\n    }\n  };\n  return (\n    <>\n      <div className=\"popup-overlay\" onClick={handleOverlayClick}>\n        {showPopSuccess && <SuccessPop message={successPopMessage} />}\n        <div className=\"popup-content col-md-5\">\n          <button className=\"close-button\" onClick={onClose}>\n            &times; {/* Close button */}\n          </button>\n          <div className=\"gallery_pop  d-flex flex-column gap-4\">\n            <h3> {`${t(\"create_post\")}`}</h3>\n            {restr_message && (\n              <span className=\"text-danger\" style={{ fontSize: \"14px\" }}>\n                {`${t(\"Your_message_contain\")}`}\n              </span>\n            )}\n            <form\n              action=\"javascript:void(0)\"\n              method=\"post\"\n              onSubmit={handleSubmit}\n            >\n              <div className=\"row gy-3 align-items-end\">\n                <div className=\"col-12\">\n                  <textarea\n                    rows=\"8\"\n                    placeholder={`${t(\"what_do_you_think\")}`}\n                    value={description}\n                    onChange={handleCommentChange}\n                  ></textarea>\n                </div>\n                <div className=\"col-12\">\n                  <div className=\"uploadfile rel bgload\">\n                    <input\n                      type=\"file\"\n                      accept=\"image/*,video/*\"\n                      className=\"fileload\"\n                      name=\"image\"\n                      onChange={handleImageChange}\n                    />\n                    <div className=\"upload_image\">\n                      {/* Show image preview */}\n                      {fileType === \"image\" && image && (\n                        <img\n                          className=\"w-100 h-100\"\n                          src={URL.createObjectURL(image)}\n                          alt=\"Selected Image\"\n                        />\n                      )}\n\n                      {/* Show video preview */}\n                      {fileType === \"video\" && image && (\n                        <video className=\"w-100 h-100\" controls>\n                          <source\n                            src={videoUrl || URL.createObjectURL(image)}\n                            type=\"video/mp4\"\n                          />\n                          {t(\"Your_browser_does\")}\n                        </video>\n                      )}\n                    </div>\n                    <div className=\"inload\" style={{ height: \"100px\" }}>\n                      <div>\n                        <BsCloudUpload style={{ fontSize: \"24px\" }} />\n                        <h3 style={{ fontSize: \"14px\" }}>{`${t(\n                          \"upload_image\"\n                        )}`}</h3>\n                      </div>\n                      {error && <p style={{ color: \"red\" }}>{error}</p>}\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-12\">\n                  {spinner && (\n                    <div\n                      className=\"spinner-border text-success date-load\"\n                      role=\"status\"\n                    >\n                      <span className=\"visually-hidden\">\n                        {`${t(\"loading\")}`}...\n                      </span>\n                    </div>\n                  )}\n                  <button\n                    type=\"submit\"\n                    disabled={isButtonDisabled} // Disable button if comment is empty\n                    style={{ opacity: isButtonDisabled ? 0.1 : 1 }}\n                  >\n                    {`${t(\"POST\")}`}\n                  </button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FaRegHeart, FaHeart } from \"react-icons/fa\";\nimport chat from \"../assets/images/chatpost.png\";\nimport ErrorPop from \"../components/ErrorPop\";\nimport axios from \"axios\";\nimport { AlertDelete } from \"../components/AlertDelete\";\nimport image1 from \"../assets/images/image1.jfif\";\nimport image2 from \"../assets/images/image2.jfif\";\nimport image3 from \"../assets/images/image4.jfif\";\nimport image4 from \"../assets/images/image5.jfif\";\nimport image5 from \"../assets/images/angular.jpg\";\nimport image6 from \"../assets/images/image3.png\";\nimport { useTranslation } from \"react-i18next\";\nimport MediaRenderer from \"../components/MediaRenderer\";\nimport i18n from \"../i18n\";\nimport EmojiPicker from \"emoji-picker-react\";\nexport const GroupPostComment = ({\n  isGrouppost,\n  LoginData,\n  Isgroupfav,\n  commentSectionRefresh,\n  getpostCommentrefresh,\n}) => {\n  const apiUrl = \"https://backend.amourette.no/api/groups/\";\n  const commentRefs = useRef([]); // Ref to manage scroll to the last comment\n  const inputRef = useRef({});\n  const [commentInputs, setCommentInputs] = useState(\n    Array(isGrouppost.length).fill(\"\")\n  );\n  const [showPopError, setShowPopError] = useState(false);\n  const [errorPopMessage, setPoperrorMessage] = useState(\"\");\n  const MAX_WORDS = 2000;\n  const [isPopupOpen_delete, setisPopupOpen_delete] = useState(false);\n  const [deleteMessage, setdeleteMessage] = useState(\"\");\n  const [postId, setpostId] = useState(\"\");\n  const [modalOpen, setModalOpen] = useState(false);\n  const [currentSlideIndex, setCurrentSlideIndex] = useState(1);\n  const openModal = () => setModalOpen(true);\n  const closeModal = () => {\n    setimage(null); // Close the modal by setting imagess to null\n  };\n  const [imagess, setimage] = useState(null);\n  const [restrictedStates, setRestrictedStates] = useState([]); // To track restricted word status for each input\n\n  const [restr_message, setrestr_message] = useState(false);\n  const [comments, setComments] = useState(Array(isGrouppost.length).fill([])); // Initialize comments state\n  const images = [\n    {\n      src: image1,\n      wideSrc: image1,\n      alt: \"Nature\",\n    },\n    {\n      src: image2,\n      wideSrc: image3,\n      alt: \"Snow\",\n    },\n    {\n      src: image4,\n      wideSrc: image5,\n      alt: \"Mountains\",\n    },\n    {\n      src: image6,\n      wideSrc: image6,\n      alt: \"Lights\",\n    },\n    {\n      src: image1,\n      wideSrc: image1,\n      alt: \"Nature\",\n    },\n    {\n      src: image2,\n      wideSrc: image3,\n      alt: \"Snow\",\n    },\n    {\n      src: image4,\n      wideSrc: image5,\n      alt: \"Mountains\",\n    },\n    {\n      src: image6,\n      wideSrc: image6,\n      alt: \"Lights\",\n    },\n  ];\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem(\"language\") || \"en\"; // Default to 'en' if no language is saved\n\n    // Change the language if it's not already the current language\n    if (i18n.language !== savedLanguage) {\n      i18n.changeLanguage(savedLanguage);\n    }\n  }, [i18n, t]);\n  const showSlide = (n) => {\n    if (n > images.length) setCurrentSlideIndex(1);\n    else if (n < 1) setCurrentSlideIndex(images.length);\n    else setCurrentSlideIndex(n);\n  };\n  useEffect(() => {\n    if (modalOpen) {\n      // Disable scrolling when modal is open\n      document.body.style.overflowY = \"hidden\";\n    } else {\n      // Enable scrolling when modal is closed\n      document.body.style.overflowY = \"auto\";\n    }\n\n    // Cleanup to restore the overflow style when the component unmounts\n    return () => {\n      document.body.style.overflowY = \"auto\";\n    };\n  }, [modalOpen]);\n  useEffect(() => {\n    const ws = new WebSocket(\"wss://backend.amourette.no\"); // Adjust port if needed\n\n    ws.onmessage = (event) => {\n      try {\n        const receivedMessage = JSON.parse(event.data);\n        console.log(\"New WebSocket message:\", receivedMessage);\n\n        if (receivedMessage.event === \"groupComments\") {\n          commentSectionRefresh();\n        }\n        if (receivedMessage.event === \"groupfav\") {\n          console.log(\"aaaaaa\");\n\n          commentSectionRefresh();\n        }\n      } catch (error) {\n        console.error(\"Failed to parse WebSocket message:\", error);\n        console.error(\"Raw message:\", event.data);\n      }\n    };\n\n    return () => {\n      ws.close();\n    };\n  }, [isGrouppost, LoginData]);\n\n  const formateTime = (dateString) => {\n    if (!dateString) return null;\n\n    // Parse the date as UTC\n    const postDate = new Date(dateString);\n    if (isNaN(postDate.getTime())) {\n      console.error(\"Invalid date:\", dateString);\n      return \"Invalid date\";\n    }\n\n    // Get the current time in UTC\n    const now = new Date();\n\n    // Adjust the postDate by subtracting 1 hour (3600000ms)\n    const adjustedPostDate = new Date(postDate.getTime() - 3600000);\n\n    // Convert postDate to Europe/Oslo time correctly\n    const osloPostTime = new Intl.DateTimeFormat(\"en-GB\", {\n      timeZone: \"Europe/Oslo\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      hour12: false, // Ensures 24-hour format\n    }).format(adjustedPostDate);\n\n    // Calculate time difference in seconds, minutes, hours, days\n    const timeDiff = now.getTime() - postDate.getTime();\n    const seconds = Math.floor(timeDiff / 1000);\n    const minutes = Math.floor(seconds / 60);\n    const hours = Math.floor(minutes / 60);\n    const days = Math.floor(hours / 24);\n    const weeks = Math.floor(days / 7);\n    const months = Math.floor(days / 30);\n    const years = Math.floor(days / 365);\n\n    // Generate formatted output based on the difference\n    if (minutes < 60) return `${osloPostTime}`;\n    if (hours < 24) return `${osloPostTime}`;\n    if (days === 1) return `Yesterday at ${osloPostTime}`;\n    if (days < 7) return `${days}d  ${osloPostTime}`;\n    if (weeks < 4) return `${weeks}w  ${osloPostTime}`;\n    if (months < 12) return `${months}m  ${osloPostTime}`;\n    return `${years}y  ${osloPostTime}`;\n  };\n\n  const handleChangeHeart = async (postid, group_id) => {\n    let formData = {\n      user_id: LoginData.id,\n      post_id: postid,\n      group_id: group_id,\n    };\n\n    try {\n      const res = await axios.post(apiUrl + \"GrouppostFavourite\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      commentSectionRefresh();\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const handleCommentChange = (e, index) => {\n    const inputValue = e.target.value;\n\n    setCommentInputs((prev) => ({\n      ...prev,\n      [index]: inputValue, // Ensure updating only specific input\n    }));\n\n    // Check for restricted words for the specific input\n    const hasRestrictedWord = restrictedWords.some((word) =>\n      inputValue.toLowerCase().includes(word.toLowerCase())\n    );\n\n    // Update the restriction state for this input\n    setRestrictedStates((prev) => ({\n      ...prev,\n      [index]: hasRestrictedWord,\n    }));\n  };\n  const restrictedWords = [\n    \"arse\",\n    \"arsehead\",\n    \"arsehole\",\n    \"ass\",\n    \"ass hole\",\n    \"asshole\",\n    \"bastard\",\n    \"bitch\",\n    \"bloody\",\n    \"bollocks\",\n    \"brotherfucker\",\n    \"bugger\",\n    \"bullshit\",\n    \"child-fucker\",\n    \"Christ on a bike\",\n    \"Christ on a cracker\",\n    \"cock\",\n    \"cocksucker\",\n    \"crap\",\n    \"cunt\",\n    \"dammit\",\n    \"damn\",\n    \"damned\",\n    \"damn it\",\n    \"dick\",\n    \"dick-head\",\n    \"dickhead\",\n    \"dumb ass\",\n    \"dumb-ass\",\n    \"dumbass\",\n    \"dyke\",\n    \"faggot\",\n    \"father-fucker\",\n    \"fatherfucker\",\n    \"fuck\",\n    \"fucker\",\n    \"fucking\",\n    \"god dammit\",\n    \"goddammit\",\n    \"God damn\",\n    \"god damn\",\n    \"goddamn\",\n    \"Goddamn\",\n    \"goddamned\",\n    \"goddamnit\",\n    \"godsdamn\",\n    \"holy shit\",\n    \"horseshit\",\n    \"in shit\",\n    \"jackarse\",\n    \"jack-ass\",\n    \"jackass\",\n    \"Jesus Christ\",\n    \"Jesus fuck\",\n    \"Jesus Harold Christ\",\n    \"Jesus H. Christ\",\n    \"Jesus, Mary and Joseph\",\n    \"Jesus wept\",\n    \"kike\",\n    \"mother fucker\",\n    \"mother-fucker\",\n    \"motherfucker\",\n    \"nigga\",\n    \"nigra\",\n    \"pigfucker\",\n    \"piss\",\n    \"prick\",\n    \"pussy\",\n    \"shit\",\n    \"shit ass\",\n    \"shite\",\n    \"sibling fucker\",\n    \"sisterfuck\",\n    \"sisterfucker\",\n    \"slut\",\n    \"son of a bitch\",\n    \"son of a whore\",\n    \"spastic\",\n    \"sweet Jesus\",\n    \"twat\",\n    \"wanker\",\n  ];\n  const countWords = (text) => {\n    return text.trim() ? text.split(/\\s+/).length : 0; // Count words by splitting on whitespace\n  };\n  const handlePostComment = async (index, postId, group_id) => {\n    const commentText = commentInputs[index]?.trim();\n    const currentWordCount = countWords(commentText);\n    if (currentWordCount < 2000) {\n      if (commentText) {\n        const formData = {\n          post_id: postId,\n          user_id: LoginData.id,\n          group_id: group_id,\n          comment: commentText, // Use trimmed comment\n        };\n\n        try {\n          const res = await axios.post(\n            apiUrl + \"CreateGroupPostComment\",\n            formData,\n            {\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n              },\n            }\n          );\n\n          console.log(\"Comment posted:\", res.data);\n\n          // ✅ Reset only the specific input field after posting\n          setCommentInputs((prev) => ({\n            ...prev,\n            [index]: \"\", // Reset only this comment field\n          }));\n\n          setTimeout(() => {\n            scrollToLastComment();\n          }, 100);\n\n          Isgroupfav(); // Refresh comment section\n        } catch (err) {\n          console.error(\"Error posting comment:\", err);\n        }\n      }\n    } else {\n      setShowPopError(true);\n      setPoperrorMessage(\n        `Comment cannot exceed ${MAX_WORDS} words. Currently: ${currentWordCount} words.`\n      );\n      setTimeout(() => {\n        setShowPopError(false);\n        setPoperrorMessage(\"\");\n      }, 1500);\n    }\n  };\n\n  const scrollToLastComment = () => {\n    // if (commentRefs.current.length > 0) {\n    //   const lastCommentIndex = commentRefs.current.length - 1;\n    //   const lastComment = commentRefs.current[lastCommentIndex];\n    //   if (lastComment) {\n    //     lastComment.scrollIntoView({ behavior: \"smooth\", block: \"end\" });\n    //   }\n    // }\n  };\n  const handlegroupPostDeleteconfirm = async (id) => {\n    setpostId(id);\n    setisPopupOpen_delete(true);\n    setdeleteMessage(\"Are you sure? You want delete this post\");\n  };\n  const closePopup_delete = () => {\n    setisPopupOpen_delete(false);\n  };\n  const handlegroupPostDelete = async () => {\n    let formData = {\n      id: postId,\n      user_id: LoginData.id,\n    };\n    try {\n      const res = await axios.post(apiUrl + \"grouppostDelete\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      setisPopupOpen_delete(false);\n      getpostCommentrefresh();\n    } catch (err) {\n      console.error(\"Error posting comment:\", err);\n    }\n  };\n  const refreshpopup = async () => {\n    handlegroupPostDelete();\n  };\n  const [showPicker, setShowPicker] = useState({}); // Ensure it's an object\n\n  const handleEmojiClick = (emojiObject, index) => {\n    const inputEl = inputRef.current[index];\n    if (!inputEl) return;\n\n    // Get current value, ensuring it's a string\n    const currentValue = commentInputs[index] || \"\";\n\n    // Insert emoji at the current cursor position\n    const startPos = inputEl.selectionStart || currentValue.length;\n    const endPos = inputEl.selectionEnd || currentValue.length;\n    const newValue =\n      currentValue.substring(0, startPos) +\n      emojiObject.emoji +\n      currentValue.substring(endPos);\n\n    setCommentInputs((prev) => ({\n      ...prev,\n      [index]: newValue, // Ensure the index key is properly set\n    }));\n\n    // Move cursor after the inserted emoji\n    setTimeout(() => {\n      inputEl.selectionStart = inputEl.selectionEnd =\n        startPos + emojiObject.emoji.length;\n      inputEl.focus();\n    }, 0);\n\n    // Close emoji picker\n    setShowPicker((prev) => ({\n      ...prev,\n      [index]: false,\n    }));\n  };\n\n  const toggleEmojiPicker = (index) => {\n    setShowPicker((prev) => ({\n      ...prev,\n      [index]: !prev[index], // Toggle the specific index\n    }));\n  };\n  const handleKeyDown = (e, index, postId, groupId) => {\n    if (e.key === \"Enter\" && commentInputs[index]?.trim() !== \"\") {\n      e.preventDefault();\n      handlePostComment(index, postId, groupId);\n    }\n  };\n\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      if (event.key === \"Escape\") {\n        closeModal();\n      }\n    };\n\n    // Attach event listener\n    document.addEventListener(\"keydown\", handleKeyDown);\n\n    // Cleanup event listener on unmount\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, []);\n  console.log(imagess);\n  return (\n    <div>\n      <AlertDelete\n        isOpen1={isPopupOpen_delete}\n        onClose1={closePopup_delete}\n        message={deleteMessage}\n        onReturnSent={refreshpopup}\n      ></AlertDelete>\n      {showPopError && <ErrorPop message={errorPopMessage} />}\n      <div className=\"d-flex flex-column gap-3\">\n        {isGrouppost.length > 0 ? (\n          isGrouppost.map((post, index) => (\n            <div className=\"evname d-block\" key={index}>\n              <div className=\"d-flex flex-column gap-2\">\n                <div className=\"d-flex gap-2 align-items-center\">\n                  <div className=\"flex-shrink-0\">\n                    <div className=\"evephoto ofit rounded-circle overflow-hidden\">\n                      <Link to={`/friend/${post.uid}`} target=\"_blank\">\n                        {post.profile_image && post.makeImagePrivate === 0 ? (\n                          <img src={post.profile_image} alt=\"Selected\" />\n                        ) : (\n                          <img\n                            src={require(\"../assets/images/thumb.jpg\")}\n                            alt=\"Profile\"\n                          />\n                        )}\n                      </Link>\n                    </div>\n                  </div>\n                  <div className=\"flex-grow-1\">\n                    <div className=\"d-flex flex-column gap-1 evettimeheaing\">\n                      <Link to={`/friend/${post.uid}`} target=\"_blank\">\n                        {post.username} {t(\"createdagroup\")}\n                      </Link>\n\n                      <h5>{formateTime(post.date)}</h5>\n                    </div>\n                  </div>\n                  {LoginData.id === post.user_id && (\n                    <div className=\"flex-shrink-0 posttopbtns\">\n                      <button\n                        title=\"Delete\"\n                        type=\"button\"\n                        onClick={() => handlegroupPostDeleteconfirm(post.id)}\n                        className=\"btn redbtn\"\n                        style={{\n                          padding: \"0px 0px\",\n                          textAlign: \"center\",\n                          minWidth: \"0px\",\n                          background: \"red\",\n                          width: \"40px\",\n                          height: \"40px\",\n                          borderRadius: \"50px\",\n                        }}\n                      >\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width={24}\n                          height={24}\n                          viewBox=\"0 0 24 24\"\n                          fill=\"none\"\n                          stroke=\"currentColor\"\n                          strokeWidth={2}\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          className=\"icon icon-tabler textcolor icons-tabler-outline icon-tabler-trash\"\n                        >\n                          <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                          <path d=\"M4 7l16 0\" />\n                          <path d=\"M10 11l0 6\" />\n                          <path d=\"M14 11l0 6\" />\n                          <path d=\"M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12\" />\n                          <path d=\"M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3\" />\n                        </svg>\n                      </button>\n                    </div>\n                  )}\n                </div>\n                <div className=\"d-block contpost\">\n                  <p>{post.description}</p>\n                </div>\n                {post.file && (\n                  <div className=\"postimgfull ofit rounded-2 overflow-hidden\">\n                    <MediaRenderer\n                      url={post.file}\n                      onClick={() => {\n                        setimage(post.file);\n                      }}\n                    />\n                  </div>\n                )}\n                <div className=\"d-flex justify-content-end\">\n                  <div className=\"d-flex gap-3 postchatheart\">\n                    <div className=\"d-flex align-items-center gap-3\">\n                      <button type=\"button\" className=\"btn fulw\">\n                        <img src={chat} alt=\"chatpic\" />\n                      </button>\n                      <p>{post.post.length}</p>\n                    </div>\n                    <div className=\"d-flex align-items-center gap-3\">\n                      <button\n                        type=\"button\"\n                        onClick={() =>\n                          handleChangeHeart(post.id, post.group_id)\n                        }\n                        className=\"liked btn fulw\"\n                      >\n                        {post.fav ? <FaHeart /> : <FaRegHeart />}\n                      </button>\n                      <p>{post.fav_count}</p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"comment_input d-flex flex-column gap-3\">\n                  <ul className=\"p-0 comment_section scroll_bar d-flex flex-column gap-2\">\n                    {/* Displaying comments from state */}\n                    {post.post.length > 0 ? (\n                      post.post.map((comm, index) => (\n                        <li\n                          className=\"d-flex align-items-start gap-2\"\n                          key={index}\n                          ref={(el) => (commentRefs.current[index] = el)}\n                        >\n                          <Link\n                            to={`/friend/${comm.comt_uid}`}\n                            target=\"_blank\"\n                            className=\"d-block user_profile\"\n                          >\n                            {comm.comment_user_profile_image &&\n                            comm.comment_makeImagePrivate === 0 ? (\n                              <img\n                                className=\"w-100 h-100\"\n                                src={comm.comment_user_profile_image}\n                                alt=\"eventspic\"\n                              />\n                            ) : (\n                              <img\n                                className=\"w-100 h-100\"\n                                src={require(\"../assets/images/thumb.jpg\")}\n                                alt=\"eventspic\"\n                              />\n                            )}\n                          </Link>\n                          <div className=\"d-flex flex-column gap-1\">\n                            <div className=\"d-flex align-items-center gap-3\">\n                              <Link\n                                to={`/friend/${comm.comt_uid}`}\n                                target=\"_blank\"\n                                className=\"textcolor\"\n                              >\n                                {comm.comment_user_username}{\" \"}\n                              </Link>\n                              <span className=\"comment_time\">\n                                {formateTime(comm.comment_date)}\n                              </span>\n                            </div>\n                            <p className=\"comment_user scroll_bar\">\n                              {comm.description}\n                            </p>\n                          </div>\n                        </li>\n                      ))\n                    ) : (\n                      <p className=\"fs-6\">{t(\"Nocommentsavailable\")}.</p>\n                    )}\n                  </ul>\n                  {restrictedStates[index] && (\n                    <span className=\"text-danger\" style={{ fontSize: \"14px\" }}>\n                      {t(\"Your_message_contain\")}\n                    </span>\n                  )}\n                  <div className=\"d-flex align-items-center gap-2\">\n                    <div className=\"emoji-container\">\n                      <button\n                        type=\"button\"\n                        className=\"emoji-button\"\n                        onClick={() => toggleEmojiPicker(index)}\n                      >\n                        😀\n                      </button>\n\n                      {showPicker[index] && (\n                        <div className=\"emoji-picker\">\n                          <EmojiPicker\n                            onEmojiClick={(emojiObject) =>\n                              handleEmojiClick(emojiObject, index)\n                            }\n                          />\n                        </div>\n                      )}\n                    </div>\n                    <input\n                      type=\"text\"\n                      name=\"comment\"\n                      placeholder={t(\"EnterYourComment\")}\n                      value={commentInputs[index] || \"\"}\n                      onChange={(e) => handleCommentChange(e, index)}\n                      onKeyDown={(e) =>\n                        handleKeyDown(e, index, post.id, post.group_id)\n                      }\n                      ref={(el) => (inputRef.current[index] = el)} // Store reference for each input\n                    />\n                    <button\n                      type=\"submit\"\n                      onClick={() =>\n                        handlePostComment(index, post.id, post.group_id)\n                      }\n                      disabled={\n                        !commentInputs[index]?.trim() || restrictedStates[index]\n                      } // Disable button if input is empty or has restricted words\n                      style={{\n                        opacity:\n                          !commentInputs[index]?.trim() ||\n                          restrictedStates[index]\n                            ? 1\n                            : 1,\n                      }}\n                      className=\"comment_postbtn\"\n                    >\n                      {t(\"Post\")}\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))\n        ) : (\n          <p>{t(\"Nopostsavailable\")}</p>\n        )}\n      </div>\n      {imagess && (\n        <div id=\"myModal\" className=\"modalgg\">\n          <span className=\"close cursor\" onClick={closeModal}>\n            &times;\n          </span>\n          <div className=\"modal-content\">\n            <div\n              className=\"mySlides\"\n              style={{\n                display: \"flex\",\n              }}\n            >\n              <div className=\"numbertext\"></div>\n              <MediaRenderer url={imagess} />\n            </div>\n\n            <div className=\"caption-container\">\n              {/* <p id=\"caption\">{images[currentSlideIndex - 1]?.alt}</p> */}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default GroupPostComment;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport i18n from \"../i18n\";\nexport const GroupInviteFriend = ({\n  isOpen1,\n  onClose1,\n  children,\n  friends,\n  LoginData,\n  groupId,\n  groupdetail,\n  onInvitesSent,\n}) => {\n  const [selectedFriends, setSelectedFriends] = useState([]);\n  const [invMessage, setinvMessage] = useState(\"\");\n  var apiUrl = \"https://backend.amourette.no/api/groups/\";\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem(\"language\") || \"en\"; // Default to 'en' if no language is saved\n    console.log(\"language\");\n    console.log(savedLanguage);\n\n    // Change the language if it's not already the current language\n    if (i18n.language !== savedLanguage) {\n      i18n.changeLanguage(savedLanguage);\n    }\n  }, [i18n, t]);\n  if (!isOpen1) return null;\n  const handleOverlayClick = (e) => {\n    // Check if the clicked element is the overlay\n    if (e.target.classList.contains(\"popup-overlay\")) {\n      onClose1(); // Close the popup if the overlay is clicked\n    }\n  };\n  const handleCheckboxChange = (userId) => {\n    setSelectedFriends((prevSelected) => {\n      if (prevSelected.includes(userId)) {\n        // If already selected, remove from selectedFriends\n        return prevSelected.filter((id) => id !== userId);\n      } else {\n        // If not selected, add to selectedFriends\n        return [...prevSelected, userId];\n      }\n    });\n  };\n  const handleInviterequest = async (e) => {\n    e.preventDefault(); // Prevent default form submission\n\n    let formData = {\n      friendIds: selectedFriends,\n      user_id: LoginData.id,\n      groupId: groupId,\n    };\n    console.log(formData);\n    // Append selected friend IDs to formData\n\n    try {\n      const response = await axios.post(apiUrl + \"sendGroupinvite\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      setinvMessage(\"Invites sent successfully\");\n      setSelectedFriends([]);\n      onInvitesSent();\n      setTimeout(() => {\n        setinvMessage(\"\");\n      }, 1500);\n      console.log(\"Invites sent successfully:\", response.data);\n    } catch (error) {\n      console.error(\"Error sending invites:\", error);\n      // Optionally handle error (e.g., show an error message)\n    }\n  };\n  return (\n    <>\n      <div className=\"popup-overlay\" onClick={handleOverlayClick}>\n        <div className=\"popup-content col-md-5\">\n          <button className=\"close-button\" onClick={onClose1}>\n            &times; {/* Close button */}\n          </button>\n          <div className=\"invite_pop  gallery_pop d-flex flex-column gap-4\">\n            <div className=\"d-flex flex-column gap-2\">\n              <h3>{`${t(\"invite_a_member\")}`}</h3>\n              <p className=\"invite_text\">{groupdetail.description}</p>\n            </div>\n            <form\n              action=\"javascript:void(0)\"\n              onSubmit={handleInviterequest}\n              method=\"post\"\n            >\n              <div className=\"row gy-3 align-items-end\">\n                <div className=\"col-12\">\n                  <ul className=\"invite_list scroll_bar p-0\">\n                    {friends.length > 0 ? (\n                      friends.map((friend, index) => (\n                        <li key={index}>\n                          <div className=\"d-flex align-items-center gap-3\">\n                            <div className=\"invite_profile\">\n                              {friend.profile_image ? ( // Display the image URL if available\n                                <img\n                                  className=\"w-100 h-100 object-fit-cover\"\n                                  src={friend.profile_image} // Use the URL created from the file\n                                  alt=\"Selected\"\n                                />\n                              ) : (\n                                <img\n                                  className=\"w-100 h-100 object-fit-cover\"\n                                  src={require(\"../assets/images/thumb.jpg\")} // If it's an image URL from the profile\n                                  alt=\"Profile\"\n                                />\n                              )}\n                            </div>\n                            <h4>{friend.username}</h4>{\" \"}\n                            {/* Display the friend's username */}\n                          </div>\n                          <div className=\"listbox d-flex justify-content-center\">\n                            <label className=\"cbox\">\n                              <input\n                                type=\"checkbox\"\n                                onChange={() => handleCheckboxChange(friend.id)} // Handle checkbox change\n                                checked={selectedFriends.includes(friend.id)} // Check if this friend is selected\n                                name=\"makeImagePrivate\"\n                              />\n                              <span className=\"checkmark\"></span>\n                            </label>\n                          </div>\n                        </li>\n                      ))\n                    ) : (\n                      <li className=\"invite_text\">\n                        <p>{`${t(\"No_friend_ab\")}`}.</p>{\" \"}\n                        {/* Message when there are no friends */}\n                      </li>\n                    )}\n                  </ul>\n                </div>\n                {invMessage !== \"\" && (\n                  <p className=\"invite_text text-success\">{invMessage}</p>\n                )}\n                <div className=\"col-12\">\n                  {friends.length > 0 ? (\n                    <button\n                      type=\"submit\"\n                      className={selectedFriends.length === 0 ? \"opa\" : \"\"}\n                      disabled={selectedFriends.length === 0}\n                    >\n                      {`${t(\"SEND_INVITE\")}`}\n                    </button>\n                  ) : (\n                    <p>{`${t(\"No_friend_ab\")}`}</p> // Optional message when there are no friends\n                  )}\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { BsCloudUpload } from \"react-icons/bs\";\nimport axios from \"axios\";\n\nimport SuccessPop from \"../components/SuccessPop\";\nimport ErrorPop from \"../components/ErrorPop\";\nimport { useTranslation } from \"react-i18next\";\nimport i18n from \"../i18n\";\n\nexport const Editgroup = ({\n  isOpen,\n  onClose,\n  children,\n  LoginData,\n  groupId,\n  groupdetail,\n}) => {\n  var apiUrl = \"https://backend.amourette.no/api/groups/\";\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [image, setImage] = useState(null);\n  const [makeImageUse, setMakeImageUse] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [spinner, setspinner] = useState(false);\n  const [showPopSuccess, setShowPopSuccess] = useState(false);\n  const [showPopError, setShowPopError] = useState(false);\n  const [successPopMessage, setPopsuccessMessage] = useState(\"\");\n  const [errorPopMessage, setPoperrorMessage] = useState(\"\");\n  const [fileType, setFileType] = useState(\"\");\n  const [videoUrl, setVideoUrl] = useState(\"\"); // for resized video\n  const [restr_message, setrestr_message] = useState(\"\");\n  const [previewImage, setPreviewImage] = useState(\"\");\n  const { t } = useTranslation();\n  const [makePrivateUse, setmakePrivateUse] = useState(false);\n  const [GroupData, setGroupData] = useState({\n    name: \"\",\n    description: \"\",\n  });\n  useEffect(() => {\n    if (groupdetail) {\n      setName(groupdetail.name);\n      setDescription(groupdetail.description);\n      setGroupData({\n        name: groupdetail.name,\n        description: groupdetail.description,\n      });\n      setMakeImageUse(groupdetail.makeImageUse || false);\n      if (groupdetail.image) {\n        setSelectedFile(null); // Reset selectedFile if editing\n        setPreviewImage(groupdetail.image);\n      }\n      // Ensure that the value is correctly parsed into a Date object\n    }\n  }, [groupdetail]);\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem(\"language\") || \"en\"; // Default to 'en' if no language is saved\n    console.log(\"language\");\n    console.log(savedLanguage);\n\n    // Change the language if it's not already the current language\n    if (i18n.language !== savedLanguage) {\n      i18n.changeLanguage(savedLanguage);\n    }\n  }, [i18n, t]);\n\n  if (!isOpen) return null;\n  const handleOverlayClick = (e) => {\n    // Check if the clicked element is the overlay\n    if (e.target.classList.contains(\"popup-overlay\")) {\n      onClose(); // Close the popup if the overlay is clicked\n    }\n  };\n\n  const MAX_FILE_SIZE = 25 * 1024 * 1024; // 2 MB\n  const handleFileChange = async (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      // Check if the file is an image or video\n      const isImage = file.type.startsWith(\"image/\");\n      const isVideo = file.type.startsWith(\"video/\");\n\n      if (!isImage && !isVideo) {\n        setErrorMessage(\"Please upload a valid image or video file.\");\n        setSelectedFile(null);\n        return;\n      }\n\n      // Check file size\n      if (file.size > MAX_FILE_SIZE) {\n        setErrorMessage(\"File size must be less than 5 MB.\");\n        setSelectedFile(null);\n        return;\n      }\n      setPreviewImage(\"\");\n      // Clear previous error messages\n      setErrorMessage(\"\");\n      setSelectedFile(file);\n      setFileType(isImage ? \"image\" : \"video\");\n\n      if (isVideo) {\n        //const resizedVideoUrl = await resizeVideo(file);\n        // setVideoUrl(resizedVideoUrl);\n      }\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault(); // Prevent default form submission\n\n    // Create a FormData object to handle file upload\n    setspinner(true);\n    try {\n      console.log(selectedFile);\n      if (selectedFile !== null) {\n        const formData = new FormData();\n        formData.append(\"name\", name);\n\n        formData.append(\"groupId\", groupId);\n        formData.append(\"description\", description);\n        formData.append(\"image\", selectedFile);\n        formData.append(\"user_id\", LoginData.id);\n        formData.append(\"fileType\", \"groups\");\n        formData.append(\"previewImage\", previewImage);\n        formData.append(\"makeImageUse\", makeImageUse);\n        const response = await axios.post(apiUrl + \"groupEditfile\", formData, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n          },\n        });\n        setspinner(false);\n        setShowPopSuccess(true);\n        setPopsuccessMessage(response.data.message);\n        window.location.replace(`/group/${response.data.slug}`);\n        setTimeout(() => {\n          setShowPopError(false);\n          setShowPopSuccess(false);\n\n          // Reload the page after changing the URL\n          window.location.reload();\n          onClose();\n        }, 800);\n\n        setImage(null);\n        setName(\"\");\n        setDescription(\"\");\n        setMakeImageUse(false);\n        setSelectedFile(null);\n        // Close the popup after submission\n      } else {\n        const formData = new FormData();\n        formData.append(\"name\", name);\n\n        formData.append(\"groupId\", groupId);\n        formData.append(\"description\", description);\n        formData.append(\"image\", selectedFile);\n        formData.append(\"user_id\", LoginData.id);\n        formData.append(\"fileType\", \"groups\");\n        formData.append(\"previewImage\", previewImage);\n        formData.append(\"makeImageUse\", makeImageUse);\n        const response = await axios.post(apiUrl + \"groupEdit\", formData, {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n        });\n        setspinner(false);\n        setShowPopSuccess(true);\n        setPopsuccessMessage(response.data.message);\n        window.location.replace(`/group/${response.data.slug}`);\n        setTimeout(() => {\n          setShowPopError(false);\n          setShowPopSuccess(false);\n\n          // Reload the page after changing the URL\n          window.location.reload();\n          onClose();\n        }, 800);\n\n        setImage(null);\n        setName(\"\");\n        setDescription(\"\");\n        setMakeImageUse(false);\n        setSelectedFile(null);\n        // Close the popup after submission\n      }\n    } catch (error) {\n      setspinner(false);\n      setShowPopError(true);\n      setTimeout(() => {\n        setShowPopError(false);\n        onClose();\n      }, 800);\n      setPoperrorMessage(\"Error creating esssvent:\", error);\n    }\n  };\n  const handleInputChange = (e) => {\n    const inputValue = e.target.value;\n    setName(inputValue);\n\n    // Check for restricted words\n    const hasRestrictedWord = restrictedWords.some((word) =>\n      inputValue.toLowerCase().includes(word.toLowerCase())\n    );\n\n    if (hasRestrictedWord) {\n      setrestr_message(true);\n    } else {\n      setrestr_message(false);\n    }\n  };\n  const handleInputChangedescription = (e) => {\n    const inputValue = e.target.value;\n    setDescription(inputValue);\n\n    // Check for restricted words\n    const hasRestrictedWord = restrictedWords.some((word) =>\n      inputValue.toLowerCase().includes(word.toLowerCase())\n    );\n\n    if (hasRestrictedWord) {\n      setrestr_message(true);\n    } else {\n      setrestr_message(false);\n    }\n  };\n  const restrictedWords = [\n    \"arse\",\n    \"arsehead\",\n    \"arsehole\",\n    \"ass\",\n    \"ass hole\",\n    \"asshole\",\n    \"bastard\",\n    \"bitch\",\n    \"bloody\",\n    \"bollocks\",\n    \"brotherfucker\",\n    \"bugger\",\n    \"bullshit\",\n    \"child-fucker\",\n    \"Christ on a bike\",\n    \"Christ on a cracker\",\n    \"cock\",\n    \"cocksucker\",\n    \"crap\",\n    \"cunt\",\n    \"dammit\",\n    \"damn\",\n    \"damned\",\n    \"damn it\",\n    \"dick\",\n    \"dick-head\",\n    \"dickhead\",\n    \"dumb ass\",\n    \"dumb-ass\",\n    \"dumbass\",\n    \"dyke\",\n    \"faggot\",\n    \"father-fucker\",\n    \"fatherfucker\",\n    \"fuck\",\n    \"fucker\",\n    \"fucking\",\n    \"god dammit\",\n    \"goddammit\",\n    \"God damn\",\n    \"god damn\",\n    \"goddamn\",\n    \"Goddamn\",\n    \"goddamned\",\n    \"goddamnit\",\n    \"godsdamn\",\n    \"holy shit\",\n    \"horseshit\",\n    \"in shit\",\n    \"jackarse\",\n    \"jack-ass\",\n    \"jackass\",\n    \"Jesus Christ\",\n    \"Jesus fuck\",\n    \"Jesus Harold Christ\",\n    \"Jesus H. Christ\",\n    \"Jesus, Mary and Joseph\",\n    \"Jesus wept\",\n    \"kike\",\n    \"mother fucker\",\n    \"mother-fucker\",\n    \"motherfucker\",\n    \"nigga\",\n    \"nigra\",\n    \"pigfucker\",\n    \"piss\",\n    \"prick\",\n    \"pussy\",\n    \"shit\",\n    \"shit ass\",\n    \"shite\",\n    \"sibling fucker\",\n    \"sisterfuck\",\n    \"sisterfucker\",\n    \"slut\",\n    \"son of a bitch\",\n    \"son of a whore\",\n    \"spastic\",\n    \"sweet Jesus\",\n    \"twat\",\n    \"wanker\",\n  ];\n  return (\n    <>\n      <div className=\"popup-overlay\" onClick={handleOverlayClick}>\n        {showPopSuccess && <SuccessPop message={successPopMessage} />}\n        {showPopError && <ErrorPop message={errorPopMessage} />}\n        <div className=\"popup-content col-md-4\">\n          <button className=\"close-button\" onClick={onClose}>\n            &times; {/* Close button */}\n          </button>\n          <div className=\"cneventup  d-flex flex-column gap-4\">\n            <h3>{t(\"edit_group\")}</h3>\n            <form\n              onSubmit={handleSubmit}\n              action=\"javascript:void(0)\"\n              method=\"post\"\n            >\n              <div className=\"row gy-4\">\n                <div className=\"col-md-6\">\n                  <div className=\"uploadfile rel bgload\">\n                    <input\n                      type=\"file\"\n                      name=\"image\"\n                      className=\"fileload\"\n                      onChange={handleFileChange}\n                      required={!previewImage} // Required only if no existing image\n                    />\n                    <div className=\"upload_image\">\n                      {/* Show Existing Image */}\n                      {previewImage && (\n                        <img\n                          className=\"w-100 h-100\"\n                          src={previewImage}\n                          alt=\"Selected Image\"\n                        />\n                      )}\n\n                      {/* Show Selected Image Preview */}\n                      {selectedFile && fileType === \"image\" && (\n                        <img\n                          className=\"w-100 h-100\"\n                          src={URL.createObjectURL(selectedFile)}\n                          alt=\"Selected Image\"\n                        />\n                      )}\n\n                      {/* Show Video Preview */}\n                      {fileType === \"video\" && selectedFile && (\n                        <video className=\"w-100 h-100\" controls>\n                          <source\n                            src={URL.createObjectURL(selectedFile)}\n                            type=\"video/mp4\"\n                          />\n                          {t(\"Your_browser_does\")}\n                        </video>\n                      )}\n                    </div>\n                    <div className=\"inload\" style={{ height: \"100px\" }}>\n                      <div>\n                        <BsCloudUpload style={{ fontSize: \"24px\" }} />\n                        <h3 style={{ fontSize: \"14px\" }}>\n                          {t(\"UPLOADIMAGE_Video\")} *\n                        </h3>\n                      </div>\n                    </div>\n                    {errorMessage && (\n                      <p className=\"text-danger\">{errorMessage}</p>\n                    )}\n                  </div>\n                </div>\n                <div className=\"col-12\">\n                  <input\n                    type=\"text\"\n                    placeholder={`${t(\"Group_name\")} *`}\n                    name=\"name\"\n                    required\n                    value={name}\n                    onChange={handleInputChange}\n                  />\n                </div>\n                <div className=\"col-12\">\n                  <textarea\n                    rows=\"5\"\n                    placeholder={`${t(\"Group_description\")} *`}\n                    name=\"description\"\n                    value={description}\n                    onChange={handleInputChangedescription}\n                  ></textarea>\n                </div>\n                {restr_message && (\n                  <span className=\"text-danger\" style={{ fontSize: \"14px\" }}>\n                    {t(\"Your_message_contain\")}\n                  </span>\n                )}\n                <div className=\"col-12\">\n                  <div className=\"listbox\">\n                    <label className=\"cbox\">\n                      {t(\"Make_private\")}\n                      <input\n                        type=\"checkbox\"\n                        checked={makeImageUse}\n                        onChange={(e) => setMakeImageUse(e.target.checked)}\n                        name=\"makeImagePrivate\"\n                      />\n                      <span className=\"checkmark\"></span>\n                    </label>\n                  </div>\n                </div>\n                <div className=\"col-12\">\n                  {spinner && (\n                    <div className=\"spinner-border text-success\" role=\"status\">\n                      <span className=\"visually-hidden\">{t(\"Loading\")}...</span>\n                    </div>\n                  )}\n                  <button type=\"submit\">{t(\"edit_group\")}</button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { useState, useRef, useEffect } from \"react\";\nimport MediaRenderer from \"../components/MediaRenderer\";\nimport { Link } from \"react-router-dom\";\nimport { FaRegHeart, FaHeart } from \"react-icons/fa\";\nimport axios from \"axios\";\nimport { useTranslation } from \"react-i18next\";\nimport i18n from \"../i18n\";\nimport { FaChevronLeft } from \"react-icons/fa\";\nimport { FaChevronRight } from \"react-icons/fa\";\nimport EmojiPicker from \"emoji-picker-react\";\nimport { AlertDelete } from \"../components/AlertDelete\";\nimport SuccessPop from \"../components/SuccessPop\";\n\nexport const GroupMediaLikeComment = ({\n  isOpen1,\n  onClose1,\n  GroupPostDataPopup,\n  GrouppostCommentGet,\n  getrefreshComment,\n  favSectionRefresh,\n  gotoNext,\n  gotoprev,\n  validPosts,\n}) => {\n  const [successPopMessage, setPopsuccessMessage] = useState(\"\");\n  const [isPopupOpen_delete, setisPopupOpen_delete] = useState(false);\n  const [input, setInput] = useState(\"\");\n  const [restr_message, setrestr_message] = useState(false);\n  const [showPopSuccess, setShowPopSuccess] = useState(false);\n  const chatEndRef = useRef(null);\n  const { t } = useTranslation();\n  const inputRef = useRef(null);\n  const [isparamVl, setparamVl] = useState(\"\");\n  const storedUsername = localStorage.getItem(\"userLogin\");\n  const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n  const [UserPhotoCommets, setUserPhotoCommets] = useState(\"\");\n  const [deleteMessage, setdeleteMessage] = useState(\"\");\n  const [UserPopupData, setUserPopupData] = useState(\"\");\n\n  const [PopupData, setPopupData] = useState(\"\");\n\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem(\"language\") || \"en\"; // Default to 'en' if no language is saved\n\n    // Change the language if it's not already the current language\n    if (i18n.language !== savedLanguage) {\n      i18n.changeLanguage(savedLanguage);\n    }\n  }, [i18n, t]);\n\n  //console.log(GalleryCommets);\n  // Ref to the chat container\n  var apiUrl = \"https://backend.amourette.no/api/groups/\";\n\n  const [comments, setComments] = useState(\"\");\n  const [spinner, setspinner] = useState(false);\n  const onEmojiClick = (event, emojiObject) => {\n    setInput((prevInput) => prevInput + emojiObject.emoji);\n  };\n\n  const formateTime = (dateString) => {\n    if (!dateString) return null;\n\n    // Parse the date as UTC\n    const postDate = new Date(dateString);\n    if (isNaN(postDate.getTime())) {\n      console.error(\"Invalid date:\", dateString);\n      return \"Invalid date\";\n    }\n\n    // Get the current time in UTC\n    const now = new Date();\n\n    // Adjust the postDate by subtracting 1 hour (3600000ms)\n    const adjustedPostDate = new Date(postDate.getTime() - 3600000);\n\n    // Convert postDate to Europe/Oslo time correctly\n    const osloPostTime = new Intl.DateTimeFormat(\"en-GB\", {\n      timeZone: \"Europe/Oslo\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      hour12: false, // Ensures 24-hour format\n    }).format(adjustedPostDate);\n\n    // Calculate time difference in seconds, minutes, hours, days\n    const timeDiff = now.getTime() - postDate.getTime();\n    const seconds = Math.floor(timeDiff / 1000);\n    const minutes = Math.floor(seconds / 60);\n    const hours = Math.floor(minutes / 60);\n    const days = Math.floor(hours / 24);\n    const weeks = Math.floor(days / 7);\n    const months = Math.floor(days / 30);\n    const years = Math.floor(days / 365);\n\n    // Generate formatted output based on the difference\n    if (minutes < 60) return `${osloPostTime}`;\n    if (hours < 24) return `${osloPostTime}`;\n    if (days === 1) return `Yesterday at ${osloPostTime}`;\n    if (days < 7) return `${days}d  ${osloPostTime}`;\n    if (weeks < 4) return `${weeks}w  ${osloPostTime}`;\n    if (months < 12) return `${months}m  ${osloPostTime}`;\n    return `${years}y  ${osloPostTime}`;\n  };\n\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      if (!isOpen1) return;\n      if (event.key === \"ArrowRight\") {\n        gotoNext();\n      } else if (event.key === \"ArrowLeft\") {\n        gotoprev();\n      }\n    };\n\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\n  }, [isOpen1, gotoNext, gotoprev]);\n\n  // Example usage\n\n  const isButtonDisabled = !comments.trim() || restr_message;\n  const handleCommentChange = (e) => {\n    const inputValue = e.target.value;\n\n    // Update the state with the new text (including emojis)\n    setComments(inputValue);\n\n    // If input is completely empty, remove all text and emojis\n    if (inputValue.trim() === \"\") {\n      setComments(\"\");\n    }\n\n    // Check for restricted words\n    const hasRestrictedWord = restrictedWords.some((word) =>\n      inputValue.toLowerCase().includes(word.toLowerCase())\n    );\n\n    setrestr_message(hasRestrictedWord);\n  };\n  const restrictedWords = [\n    \"arse\",\n    \"arsehead\",\n    \"arsehole\",\n    \"ass\",\n    \"ass hole\",\n    \"asshole\",\n    \"bastard\",\n    \"bitch\",\n    \"bloody\",\n    \"bollocks\",\n    \"brotherfucker\",\n    \"bugger\",\n    \"bullshit\",\n    \"child-fucker\",\n    \"Christ on a bike\",\n    \"Christ on a cracker\",\n    \"cock\",\n    \"cocksucker\",\n    \"crap\",\n    \"cunt\",\n    \"dammit\",\n    \"damn\",\n    \"damned\",\n    \"damn it\",\n    \"dick\",\n    \"dick-head\",\n    \"dickhead\",\n    \"dumb ass\",\n    \"dumb-ass\",\n    \"dumbass\",\n    \"dyke\",\n    \"faggot\",\n    \"father-fucker\",\n    \"fatherfucker\",\n    \"fuck\",\n    \"fucker\",\n    \"fucking\",\n    \"god dammit\",\n    \"goddammit\",\n    \"God damn\",\n    \"god damn\",\n    \"goddamn\",\n    \"Goddamn\",\n    \"goddamned\",\n    \"goddamnit\",\n    \"godsdamn\",\n    \"holy shit\",\n    \"horseshit\",\n    \"in shit\",\n    \"jackarse\",\n    \"jack-ass\",\n    \"jackass\",\n    \"Jesus Christ\",\n    \"Jesus fuck\",\n    \"Jesus Harold Christ\",\n    \"Jesus H. Christ\",\n    \"Jesus, Mary and Joseph\",\n    \"Jesus wept\",\n    \"kike\",\n    \"mother fucker\",\n    \"mother-fucker\",\n    \"motherfucker\",\n    \"nigga\",\n    \"nigra\",\n    \"pigfucker\",\n    \"piss\",\n    \"prick\",\n    \"pussy\",\n    \"shit\",\n    \"shit ass\",\n    \"shite\",\n    \"sibling fucker\",\n    \"sisterfuck\",\n    \"sisterfucker\",\n    \"slut\",\n    \"son of a bitch\",\n    \"son of a whore\",\n    \"spastic\",\n    \"sweet Jesus\",\n    \"twat\",\n    \"wanker\",\n  ];\n  const getcommentUseralbum = async (id, commentid) => {\n    let formData = {\n      id: id,\n      commentid: commentid,\n    };\n    console.log(formData);\n    try {\n      const res = await axios.post(\n        apiUrl + \"getUseralbumsCommentsSeperate\",\n        formData,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n\n      const newComment = res.data.album.comments; // the newly saved comment with full details\n      console.log(newComment);\n      setUserPhotoCommets((prevComments) => [\n        ...prevComments, // Spread the previous comments\n        ...newComment, // Append the new comments\n      ]);\n      if (newComment.user_id === userLogin.id) {\n        if (chatEndRef.current) {\n          chatEndRef.current.scrollIntoView({ behavior: \"smooth\" });\n        }\n      }\n    } catch (err) {\n      if (err.response) {\n        console.error(\"Server responded with error:\", err.response);\n      } else if (err.request) {\n        console.error(\"No response received:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    } finally {\n      setspinner(false);\n    }\n  };\n  const handlePostSubmit = async (e) => {\n    if (e.preventDefault) e.preventDefault();\n\n    setspinner(true);\n\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      comment: e.description || e.target.description.value,\n      group_id: GroupPostDataPopup.group_id,\n      post_id: GroupPostDataPopup.id,\n      user_id: userLogin.id,\n    };\n    try {\n      const res = await axios.post(\n        apiUrl + \"CreateGroupPostComment\",\n        formData,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n      getrefreshComment(\"\");\n      setTimeout(() => {\n        if (chatEndRef.current) {\n          chatEndRef.current.scrollIntoView({ behavior: \"smooth\" });\n        }\n      }, 1000);\n      setComments(\"\");\n    } catch (err) {\n      if (err.response) {\n        console.error(\"Server responded with error:\", err.response);\n      } else if (err.request) {\n        console.error(\"No response received:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    } finally {\n      setspinner(false);\n    }\n  };\n\n  const [showPicker, setShowPicker] = useState(false);\n\n  const handleEmojiClick = (emojiObject) => {\n    // Append emoji to the existing text\n    setComments((prevMessage) => prevMessage + emojiObject.emoji);\n    setShowPicker(false);\n\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  };\n  // Update `isparamVl` when `currentIndex` changes\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      if (event.key === \"Escape\") {\n        onClose1(); // Close the popup when Escape is pressed\n      }\n    };\n\n    window.addEventListener(\"keydown\", handleKeyDown);\n\n    // Cleanup the event listener on component unmount\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [onClose1]);\n  const handleKeyDown = (e) => {\n    if (e.key === \"Enter\" && comments.trim() !== \"\") {\n      e.preventDefault();\n\n      handlePostSubmit({\n        description: comments,\n        group_id: GroupPostDataPopup.group_id,\n        post_id: GroupPostDataPopup.id,\n        user_id: userLogin.id,\n      });\n    }\n  };\n  if (!isOpen1) return null;\n  const handleOverlayClick = (e) => {\n    // Check if the clicked element is the overlay\n    if (e.target.classList.contains(\"popup-overlay\")) {\n      onClose1(); // Close the popup if the overlay is clicked\n    }\n  };\n  const handledeletebtn = () => {\n    setisPopupOpen_delete(true);\n    setdeleteMessage(\"Are you sure? You want to delete this album media\");\n  };\n  const closePopup_delete = () => {\n    setisPopupOpen_delete(false);\n  };\n  const refreshpopup = async () => {\n    deletePost();\n  };\n  const deletePost = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n  };\n  const handleChangeHeartPopup = async (postid, group_id) => {\n    let formData = {\n      user_id: userLogin.id,\n      post_id: postid,\n      group_id: group_id,\n    };\n\n    try {\n      const res = await axios.post(apiUrl + \"GrouppostFavourite\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      favSectionRefresh();\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  return (\n    <>\n      <div className=\"popup-overlay\" onClick={handleOverlayClick}>\n        <AlertDelete\n          isOpen1={isPopupOpen_delete}\n          onClose1={closePopup_delete}\n          message={deleteMessage}\n          onReturnSent={refreshpopup}\n        ></AlertDelete>\n        {showPopSuccess && <SuccessPop message={successPopMessage} />}\n        <div className=\"popup-content col-md-10\">\n          <button\n            className=\"close-button\"\n            style={{ zIndex: \"999\" }}\n            onClick={onClose1}\n          >\n            &times; {/* Close button */}\n          </button>\n\n          <div className=\"usergallery_pop  d-flex flex-column gap-1 h-100\">\n            <button\n              className=\"arrow right\"\n              type=\"button\"\n              onClick={() => gotoNext()}\n            >\n              <FaChevronRight />\n            </button>\n            <button\n              className=\"arrow left\"\n              type=\"button\"\n              onClick={() => gotoprev()}\n            >\n              <FaChevronLeft />\n            </button>\n            <div className=\"row p-4\">\n              <div className=\"col-lg-7\">\n                <div className=\"position-relative\">\n                  <div className=\"d-block gallery_im1g \">\n                    <MediaRenderer url={GroupPostDataPopup.file} />\n                  </div>\n                  {userLogin.id === GroupPostDataPopup.user_id && (\n                    <div className=\"flex-shrink-0 posttopbtns\">\n                      {/* <button\n                        title=\"Delete\"\n                        onClick={handledeletebtn}\n                        type=\"button\"\n                        className=\"btn redbtn\"\n                        style={{\n                          padding: \"0px 0px\",\n                          textAlign: \"center\",\n                          minWidth: \"0px\",\n                          background: \"red\",\n                          width: \"40px\",\n                          height: \"40px\",\n                          borderRadius: \"50px\",\n                          position: \"absolute\",\n                          top: \"10px\",\n                          right: \"15px\",\n                        }}\n                      >\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width={24}\n                          height={24}\n                          viewBox=\"0 0 24 24\"\n                          fill=\"none\"\n                          stroke=\"currentColor\"\n                          strokeWidth={2}\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          className=\"icon icon-tabler textcolor icons-tabler-outline icon-tabler-trash\"\n                        >\n                          <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                          <path d=\"M4 7l16 0\" />\n                          <path d=\"M10 11l0 6\" />\n                          <path d=\"M14 11l0 6\" />\n                          <path d=\"M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12\" />\n                          <path d=\"M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3\" />\n                        </svg>\n                      </button> */}\n                    </div>\n                  )}\n                </div>\n              </div>\n              <div className=\"col-lg-5\">\n                <div className=\"d-flex h-100 flex-column justify-content-between gap-1\">\n                  <div className=\"d-flex flex-column gap-1 p-3 bordr-bt\">\n                    <div className=\"d-flex align-items-center gap-3 justify-content-between\">\n                      <Link\n                        to={`/friend/${GroupPostDataPopup.uid}`}\n                        target=\"_blank\"\n                      >\n                        {GroupPostDataPopup.username}\n                      </Link>\n\n                      <h6>{formateTime(GroupPostDataPopup.date)}</h6>\n                    </div>\n                    <div className=\"d-flex align-items-center gap-3 justify-content-between\">\n                      <p>\n                        {GroupPostDataPopup &&\n                        GroupPostDataPopup.description &&\n                        GroupPostDataPopup.description.length > 150\n                          ? GroupPostDataPopup.description.substring(0, 150) +\n                            \"...\"\n                          : GroupPostDataPopup?.description ||\n                            \"No description available\"}\n                      </p>\n\n                      <div className=\"d-flex align-items-center gap-3 flex-shrink-0\">\n                        <div className=\"d-flex align-items-center gap-1 flex-shrink-0\">\n                          <button\n                            type=\"button\"\n                            className=\"liked  fulw\"\n                            onClick={() =>\n                              handleChangeHeartPopup(\n                                GroupPostDataPopup.id,\n                                GroupPostDataPopup.group_id\n                              )\n                            }\n                          >\n                            {GroupPostDataPopup.total_favorite ? (\n                              <FaHeart />\n                            ) : (\n                              <FaRegHeart />\n                            )}\n                          </button>\n                          <p className=\"likecount\">\n                            {GroupPostDataPopup.total_favorite}\n                          </p>\n                        </div>\n                        <div className=\"d-flex align-items-center gap-1 flex-shrink-0\">\n                          <div className=\"d-block like_icon\">\n                            <img\n                              className=\"w-100 h-100\"\n                              src={require(\"../assets/images/comment.png\")}\n                              alt=\"img\"\n                            />\n                          </div>\n                          <p className=\"likecount\">\n                            {GroupPostDataPopup.total_comments}\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"d-flex flex-column gap-1\">\n                    <ul className=\"usergallery_msg scroll_bar\">\n                      {GrouppostCommentGet.length === 0 ? (\n                        <li>{t(\"Nocommentsavailable\")}</li>\n                      ) : (\n                        GrouppostCommentGet.map((comment, index) => (\n                          <li className=\"gap-3\" key={index}>\n                            <div className=\"profile_img\">\n                              <img\n                                className=\"w-100 h-100\"\n                                src={\n                                  comment.makeImagePrivate === 1\n                                    ? require(\"../assets/images/thumb.jpg\") // Default image if the profile image is private\n                                    : comment.profile_image // Use user's profile image if available\n                                    ? comment.profile_image\n                                    : require(\"../assets/images/image3.png\") // Default image if no profile image\n                                }\n                                alt=\"img\"\n                              />\n                            </div>\n                            <div className=\"comment_text d-flex flex-column gap-1\">\n                              <h6>{comment.username}</h6>{\" \"}\n                              {/* Display the commenter's username */}\n                              <p>{comment.description}</p>{\" \"}\n                              {/* Display the comment text */}\n                            </div>\n                            <p>{formateTime(comment.date)}</p>{\" \"}\n                          </li>\n                        ))\n                      )}\n                      <li ref={chatEndRef} />\n                    </ul>\n                    <form\n                      action=\"javascript:void(0)\"\n                      method=\"post\"\n                      onSubmit={handlePostSubmit}\n                    >\n                      {restr_message && (\n                        <span\n                          className=\"text-danger\"\n                          style={{ fontSize: \"14px\" }}\n                        >\n                          {t(\"Your_message_contain\")}\n                        </span>\n                      )}\n                      <div className=\"d-flex align-items-center gap-3 w-100 usergallery_from\">\n                        {spinner && (\n                          <div\n                            className=\"spinner-border text-success postloader\"\n                            role=\"status\"\n                          >\n                            <span className=\"visually-hidden\">Loading...</span>\n                          </div>\n                        )}\n                        <div className=\"comment_input w-100 d-flex align-items-center gap-1\">\n                          <input\n                            type=\"hidden\"\n                            value={PopupData.id}\n                            name=\"comment_id\"\n                          />\n                          <div className=\"emoji-container\">\n                            <button\n                              type=\"button\"\n                              className=\"emoji-button\"\n                              onClick={() => setShowPicker(!showPicker)}\n                            >\n                              😀\n                            </button>\n\n                            {showPicker && (\n                              <div\n                                className=\"emoji-picker\"\n                                style={{ position: \"absolute\", top: \"64px\" }}\n                              >\n                                <EmojiPicker onEmojiClick={handleEmojiClick} />\n                              </div>\n                            )}\n                          </div>\n                          <input\n                            type=\"text\"\n                            required\n                            ref={inputRef}\n                            name=\"description\"\n                            value={comments} // Controlled input\n                            onChange={handleCommentChange} // Simplified\n                            onKeyDown={handleKeyDown} // Send on Enter Key\n                            placeholder={`${t(\"write_a_comment\")}`}\n                          />\n\n                          <button\n                            type=\"submit\"\n                            disabled={isButtonDisabled} // Disable button if comment is empty\n                            style={{ opacity: isButtonDisabled ? 1 : 1 }}\n                            className=\"comment_postbtn\"\n                          >\n                            {t(\"Post\")}\n                          </button>\n                        </div>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Link, useParams, useNavigate } from \"react-router-dom\";\nimport Headertwo from \"../components/Headertwo\";\nimport iconphoto from \"../assets/images/me3.png\";\nimport { Createnewgrouppost } from \"../components/Createnewgrouppost\";\nimport { GroupPostComment } from \"../components/GroupPostComment\";\nimport { GroupInviteFriend } from \"../components/GroupInviteFriend\";\nimport { AlertDelete } from \"../components/AlertDelete\";\nimport axios from \"axios\";\nimport { useTranslation } from \"react-i18next\";\nimport image1 from \"../assets/images/image1.jfif\";\nimport image2 from \"../assets/images/image2.jfif\";\nimport image3 from \"../assets/images/image4.jfif\";\nimport image4 from \"../assets/images/image5.jfif\";\nimport image5 from \"../assets/images/angular.jpg\";\nimport image6 from \"../assets/images/image3.png\";\nimport i18n from \"../i18n\";\nimport MediaRenderer from \"../components/MediaRenderer\";\nimport { Editgroup } from \"../components/Editgroup\";\nimport { GroupMediaLikeComment } from \"../components/GroupMediaLikeComment\";\nexport default function Singlegroup() {\n  const navigate = useNavigate();\n  var apiUrl = \"https://backend.amourette.no/api/groups/\";\n  var apiUrl2 = \"https://backend.amourette.no/api/members/\";\n  const [showPopError, setShowPopError] = useState(false);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [currentSlideIndex, setCurrentSlideIndex] = useState(1);\n  const [AllfriendId, setAllfriendId] = useState([]);\n  const [Allcheckgroupmember, setAllcheckgroupmember] = useState([]);\n  const [errorPopMessage, setPoperrorMessage] = useState(\"\");\n  const [isPopupOpen_newpost, setIsPopupOpen_newpost] = useState(false);\n  const [isPopupOpen_delete, setisPopupOpen_delete] = useState(false);\n  const [deleteMessage, setdeleteMessage] = useState(\"\");\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  const [isPopupOpen1, setIsPopupOpen1] = useState(false);\n  const [LoginData, setLoginData] = useState(null);\n  const [groupId, setgroupId] = useState(\"\");\n  const [groupdetail, setgroupdetail] = useState(\"\");\n  const [showhide, setshowhide] = useState(false);\n  const [groupView, setgroupView] = useState(false);\n  const [groupAcceptorNo, setgroupAcceptorNo] = useState(false);\n  const [groupAccepted, setgroupAccepted] = useState(false);\n  const [groupAcceptorNoCheck, setgroupAcceptorNoCheck] = useState(false);\n  const [isInterested, setIsInterested] = useState(false);\n  const [GroupDetailIntersted, setGroupDetailIntersted] = useState([]);\n  const [isGrouppost, setGrouppost] = useState([]);\n  const [allyourgroupsUser, setallyourgroupsUser] = useState([]);\n  const [Isslug, setSlug] = useState(\"\");\n  const [editPage, seteditPage] = useState(false);\n  const { slug } = useParams();\n  const storedUsername = localStorage.getItem(\"userLogin\");\n  const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n  const [GroupCommentpopupPostId, setGroupCommentpopupPostId] = useState(\"\");\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem(\"language\") || \"en\"; // Default to 'en' if no language is saved\n    console.log(\"language\");\n    console.log(savedLanguage);\n\n    // Change the language if it's not already the current language\n    if (i18n.language !== savedLanguage) {\n      i18n.changeLanguage(savedLanguage);\n    }\n  }, [i18n, t]);\n  useEffect(() => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null; // Safely parse login data\n    setLoginData(userLogin);\n  }, []);\n  const images = [\n    {\n      src: image1,\n      wideSrc: image1,\n      alt: \"Nature\",\n    },\n    {\n      src: image2,\n      wideSrc: image3,\n      alt: \"Snow\",\n    },\n    {\n      src: image4,\n      wideSrc: image5,\n      alt: \"Mountains\",\n    },\n    {\n      src: image6,\n      wideSrc: image6,\n      alt: \"Lights\",\n    },\n    {\n      src: image1,\n      wideSrc: image1,\n      alt: \"Nature\",\n    },\n    {\n      src: image2,\n      wideSrc: image3,\n      alt: \"Snow\",\n    },\n    {\n      src: image4,\n      wideSrc: image5,\n      alt: \"Mountains\",\n    },\n    {\n      src: image6,\n      wideSrc: image6,\n      alt: \"Lights\",\n    },\n  ];\n  useEffect(() => {\n    if (LoginData) {\n      UsercheckAccept(); // Call UsercheckAccept only when LoginData is available\n    }\n    if (slug !== undefined) {\n      setSlug(slug); // Ensure setSlug is defined and does not cause issues\n      getDetails(slug);\n    }\n  }, [LoginData, groupView, slug]); // Dependency on LoginData\n  const open_Edit = () => {\n    seteditPage(true);\n  };\n  useEffect(() => {\n    if (LoginData && groupId) {\n      get_GroupdetailallIntersted();\n    }\n  }, [LoginData, groupId]);\n  useEffect(() => {\n    if (groupId) {\n      getpostComment(groupId);\n    }\n  }, [groupId]);\n\n  useEffect(() => {\n    if (groupId) {\n      getuserGroupIntersted(groupId);\n    }\n  }, [groupId]);\n  const editPageClose = () => {\n    seteditPage(false);\n  };\n  useEffect(() => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null; // Safely parse login data\n\n    getAllfriends();\n  }, []);\n  const getAllfriends = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      user_id: userLogin.id,\n    };\n    try {\n      const res = await axios.post(apiUrl2 + \"getAllfriends\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      var respo = res.data.results;\n      const friendUserIds = respo.map((friend) => friend.id);\n\n      setAllfriendId(friendUserIds);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const getuserGroupIntersted = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null; // Safely parse login data\n    let formData = {\n      group_id: groupId,\n      user_id: userLogin.id,\n    };\n\n    try {\n      const res = await axios.post(\n        apiUrl + \"get_userGroupIntersted\",\n        formData,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        }\n      );\n      var respo = res.data.results;\n      console.log(\"vv\");\n      console.log(respo);\n      if (respo.length > 0) {\n        setIsInterested(true); // User is now interested\n      } else {\n        setIsInterested(false); // User is now interested\n      }\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        //console.error(\"Request data:\", err.request);\n      } else {\n        // console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const getDetails = async (slug) => {\n    let formData = {\n      slug: slug,\n    };\n\n    try {\n      const res = await axios.post(apiUrl + \"getGroupDetailSlug\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      var respo = res.data.group;\n      console.log(respo);\n      console.log(\"vh\");\n      setgroupdetail(respo);\n\n      if (res.data.group === \"\" || res.data.group === undefined) {\n        navigate(\"/groups\");\n      } else {\n        const storedUsername = localStorage.getItem(\"userLogin\");\n        const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n        if (userLogin && userLogin.id === res.data.group.user_id) {\n          setshowhide(true);\n        } else {\n          setshowhide(false);\n        }\n      }\n      setgroupId(respo.id);\n      await UsercheckAccept();\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        //console.error(\"Request data:\", err.request);\n      } else {\n        // console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  useEffect(() => {\n    if (groupdetail) {\n      getuserGroupView(groupdetail.user_id);\n    }\n    console.log(groupdetail);\n  }, [groupdetail]);\n  const getuserGroupView = async (idd) => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      user_id: groupdetail.user_id,\n      checkfrd: groupdetail.user_id,\n    };\n    try {\n      const res = await axios.post(apiUrl + \"checkfrdgroup\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      var respo = res.data.results;\n      console.log(respo);\n      const friendUserIds = respo.map((friend) => friend.id);\n\n      setAllcheckgroupmember(friendUserIds);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const UsercheckAccept = async () => {\n    let formData = {\n      user_id: LoginData.id,\n      slug: slug,\n    };\n    //return;\n    try {\n      const res = await axios.post(apiUrl + \"UsercheckAccept\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      var respo = res.data.results;\n\n      if (respo.length === 0) {\n        setgroupView(false);\n        setgroupAcceptorNo(false);\n        // navigate(\"/events\");\n      } else {\n        if (respo[0].group_status === \"Created by You\") {\n          console.log(respo[0].group_status);\n          setgroupView(true);\n          setgroupAcceptorNo(false);\n          setgroupAcceptorNoCheck(false);\n        }\n        if (respo[0].invite_status === \"No\") {\n          console.log(\"1\");\n          setgroupView(false);\n          setgroupAcceptorNo(true);\n        }\n        if (respo[0].invite_status === \"Yes\") {\n          console.log(\"2\");\n          setgroupView(true);\n          setgroupAccepted(false);\n          setgroupAcceptorNo(false);\n          setgroupAcceptorNoCheck(true);\n        }\n      }\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        //console.error(\"Request data:\", err.request);\n      } else {\n        //console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const get_GroupdetailallIntersted = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = JSON.parse(storedUsername);\n    const userIdsWithSelf = [...AllfriendId, userLogin.id];\n    let formData = {\n      group_id: groupId,\n      user_id: userLogin.id,\n      user_ids: userIdsWithSelf,\n    };\n\n    try {\n      const res = await axios.post(\n        apiUrl + \"getGroupdetailAllIntersted\",\n        formData,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        }\n      );\n\n      setGroupDetailIntersted(res.data.results);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const getallYourgroupsUser = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = JSON.parse(storedUsername);\n    let formData = {\n      user_id: userLogin.id,\n      group_id: groupId,\n    };\n    console.log(formData);\n    try {\n      const res = await axios.post(apiUrl + \"getallYourgroupsUser\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n\n      setallyourgroupsUser(res.data.groups);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const openPopup = () => {\n    setIsPopupOpen(true);\n    document.body.style.overflowY = \"hidden\";\n  };\n\n  const closePopup = () => {\n    setIsPopupOpen(false);\n    document.body.style.overflowY = \"auto\";\n  };\n  const openPopup1 = (id) => {\n    console.log(id);\n    setIsPopupOpen1(true);\n    setgroupId(id);\n    getallYourgroupsUser();\n    document.body.style.overflowY = \"hidden\";\n  };\n\n  const closePopup1 = () => {\n    setIsPopupOpen1(false);\n    document.body.style.overflowY = \"auto\";\n  };\n  const handleInterested = async () => {\n    let formData = {\n      group_id: groupId,\n      user_id: LoginData.id,\n    };\n\n    try {\n      const res = await axios.post(apiUrl + \"userGroupIntersted\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      console.log(\"hh\");\n      //getEventdetailallIntersted(groupId);\n      if (res.data.status === \"1\") {\n        setIsInterested(true); // User is now interested\n      } else if (res.data.status === \"2\") {\n        setIsInterested(false); // User is no longer interested\n      }\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const handleAccept = async (slug) => {\n    let groupAccepted = {\n      user_id: LoginData.id,\n      group_id: groupId,\n      slug: slug,\n    };\n\n    try {\n      const res = await axios.post(apiUrl + \"groupAccepted\", groupAccepted, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      setShowPopError(true);\n      setPoperrorMessage(\"Group invite updated successfully\");\n      UsercheckAccept();\n      // get_GroupdetailallIntersted();\n      setTimeout(() => {\n        setShowPopError(false);\n      }, 800);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const handledeleteSentto = async (slug) => {\n    let deleteev = {\n      user_id: LoginData.id,\n      group_id: groupId,\n      slug: slug,\n    };\n\n    try {\n      const res = await axios.post(apiUrl + \"DeleteInviteRequest\", deleteev, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      setShowPopError(true);\n      setPoperrorMessage(\"Successfully deleted\");\n      navigate(\"/groups\");\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const open_DeleteAlert = (id) => {\n    setisPopupOpen_delete(true);\n    setdeleteMessage(\"Are you sure? You want delete this group\");\n  };\n  const closePopup_delete = () => {\n    setisPopupOpen_delete(false);\n  };\n  const refreshpopup = async () => {\n    deleteGroup();\n  };\n  const deleteGroup = async () => {\n    let deleteev = {\n      user_id: LoginData.id,\n      group_id: groupId,\n    };\n    console.log(deleteev);\n    try {\n      const res = await axios.post(apiUrl + \"userDeleteGroup\", deleteev, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n\n      navigate(\"/groups\");\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const refreshFriendsList = () => {\n    getallYourgroupsUser(groupId);\n  };\n  const getpostComment = async (idd) => {\n    let formData = {\n      group_id: idd,\n      user_id: LoginData.id,\n    };\n    console.log(formData);\n    try {\n      const res = await axios.post(apiUrl + \"get_postComment\", formData, {\n        headers: {\n          Accept: \"application/json\",\n        },\n      });\n      console.log(res.data.results, \"kkk\");\n      setGrouppost(res.data.results);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const Isgroupfav = async () => {\n    getpostComment(groupId);\n  };\n  const refreshPostComment = () => {\n    getpostComment(groupId);\n    setIsPopupOpen_newpost(false);\n  };\n  const commentSectionRefresh = async () => {\n    getpostComment(groupId);\n  };\n  const getpostCommentrefresh = async () => {\n    getpostComment(groupId);\n  };\n\n  const openModal = () => setModalOpen(true);\n  const closeModal = () => setModalOpen(false);\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      if (!modalOpen) return; // Ensure key events work only when modal is open\n\n      if (event.key === \"ArrowRight\") {\n        showSlide(currentSlideIndex + 1); // Right arrow → moves to next slide\n      } else if (event.key === \"ArrowLeft\") {\n        showSlide(currentSlideIndex - 1); // Left arrow ← moves to previous slide\n      }\n    };\n\n    document.addEventListener(\"keydown\", handleKeyDown);\n\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [currentSlideIndex, modalOpen]);\n\n  useEffect(() => {\n    if (modalOpen) {\n      // Disable scrolling when modal is open\n      document.body.style.overflowY = \"hidden\";\n    } else {\n      // Enable scrolling when modal is closed\n      document.body.style.overflowY = \"auto\";\n    }\n\n    // Cleanup to restore the overflow style when the component unmounts\n    return () => {\n      document.body.style.overflowY = \"auto\";\n    };\n  }, [modalOpen]);\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      if (event.key === \"Escape\") {\n        setModalOpen(false);\n      }\n    };\n\n    // Add event listener\n    window.addEventListener(\"keydown\", handleKeyDown);\n\n    // Cleanup event listener on unmount\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, []);\n  const validPosts = isGrouppost.filter((post) => post.file);\n  const showSlide = (index) => {\n    if (index < 0) {\n      setCurrentSlideIndex(validPosts.length); // Loop back to last slide\n    } else if (index > validPosts.length) {\n      setCurrentSlideIndex(1); // Loop to first slide\n    } else {\n      setCurrentSlideIndex(index);\n    }\n  };\n  // Likes Comments Groups Same As Gallery\n  console.log(validPosts);\n  const [isPopupOpen11, setIsPopupOpen11] = useState(false);\n  const [GroupPostDataPopup, setGroupPostDataPopup] = useState(\"\");\n  const [GrouppostCommentGet, setGrouppostCommentGet] = useState([]);\n  const [popupgroupindex, setpopupgroupindex] = useState(\"\");\n  const [currentIndexPopup, setCurrentIndexPopup] = useState(0); // Assuming you have a state to track the index\n\n  const openPopupCommentBox = async (id, group_id, index) => {\n    setGroupCommentpopupPostId(id);\n    GrouppostComment(id, group_id);\n    setpopupgroupindex(index);\n    let formData = {\n      id: id,\n      group_id: group_id,\n      user_id: userLogin.id,\n    };\n    try {\n      const res = await axios.post(apiUrl + \"getGroupPostData\", formData, {\n        headers: {\n          Accept: \"application/json\",\n        },\n      });\n      setGroupPostDataPopup(res.data.results[0]);\n      setIsPopupOpen11(true);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const GrouppostComment = async (postid, group_id) => {\n    let formData = {\n      id: postid,\n      group_id: group_id,\n      user_id: userLogin.id,\n    };\n    try {\n      const res = await axios.post(apiUrl + \"getGrouppostComment\", formData, {\n        headers: {\n          Accept: \"application/json\",\n        },\n      });\n      setGrouppostCommentGet(res.data.results);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const closePopup11 = () => {\n    setIsPopupOpen11(false);\n    document.body.style.overflowY = \"auto\";\n  };\n  const getrefreshComment = async () => {\n    GrouppostComment(GroupCommentpopupPostId, groupId);\n  };\n  const favSectionRefresh = async () => {\n    openPopupCommentBox(GroupCommentpopupPostId, groupId, popupgroupindex);\n  };\n  const gotoNext = () => {\n    console.log(\"Navigating to next post\");\n    setCurrentIndexPopup((prevIndex) => {\n      if (prevIndex < validPosts.length - 1) {\n        const newIndex = prevIndex + 1;\n        console.log(\"New Index:\", newIndex);\n        console.log(\"Next Post Data:\", validPosts[newIndex]);\n        openPopupCommentBox(\n          validPosts[newIndex].id,\n          validPosts[newIndex].group_id,\n          newIndex\n        );\n        return newIndex;\n      }\n      console.log(\"Already at the last post. Index:\", prevIndex);\n      console.log(\"Current Post Data:\", validPosts[prevIndex]);\n      return prevIndex;\n    });\n  };\n\n  const gotoprev = () => {\n    console.log(\"Navigating to previous post\");\n    setCurrentIndexPopup((prevIndex) => {\n      if (prevIndex > 0) {\n        const newIndex = prevIndex - 1;\n        console.log(\"New Index:\", newIndex);\n        console.log(\"Previous Post Data:\", validPosts[newIndex]);\n        openPopupCommentBox(\n          validPosts[newIndex].id,\n          validPosts[newIndex].group_id,\n          newIndex\n        );\n        return newIndex;\n      }\n      console.log(\"Already at the first post. Index:\", prevIndex);\n      console.log(\"Current Post Data:\", validPosts[prevIndex]);\n      return prevIndex;\n    });\n  };\n  // Likes Comments Groups Same As Gallery\n  return (\n    <>\n      <Headertwo />\n\n      <section className=\"singleevent d-block gapy\">\n        <div className=\"container-lg\">\n          <div className=\"row gy-4\">\n            <div className=\"col-md-7\">\n              <div className=\"d-flex flex-column gap-4\">\n                <div className=\"eventtitle d-block pb-1 f\">\n                  <h1>{groupdetail.name}</h1>\n                </div>\n                <div className=\"d-flex flex-column gap-3\">\n                  {groupView && (\n                    <div className=\"evname d-block h\">\n                      <div className=\"d-flex flex-column gap-2\">\n                        <div className=\"d-flex gap-2 align-items-center\">\n                          <div className=\"flex-shrink-0\">\n                            <div className=\"evephoto ofit rounded-circle overflow-hidden\">\n                              <MediaRenderer url={groupdetail.image} />\n                            </div>\n                          </div>\n                          <div className=\"flex-grow-1\">\n                            <div\n                              onClick={openPopup}\n                              className=\"whatthink d-block\"\n                            >\n                              <h4> {`${t(\"what_do_you_think\")}`}</h4>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"d-flex justify-content-end addphotothink\">\n                          <div\n                            onClick={openPopup}\n                            className=\"d-flex gap-2 align-items-center\"\n                            style={{ cursor: \"pointer\" }}\n                          >\n                            <div className=\"flex-grow-1\">\n                              <h4>{`${t(\"Add_photo\")}`}</h4>\n                            </div>\n                            <div className=\"flex-shrink-0\">\n                              <div className=\"iconphoto fulw\">\n                                <img src={iconphoto} alt=\"namepic\" />\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                  {groupView ? (\n                    <GroupPostComment\n                      isGrouppost={isGrouppost}\n                      LoginData={LoginData}\n                      Isgroupfav={Isgroupfav}\n                      commentSectionRefresh={commentSectionRefresh}\n                      getpostCommentrefresh={getpostCommentrefresh}\n                    />\n                  ) : (\n                    <p>{`${t(\"No_result_found\")}`}</p>\n                  )}\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-5\">\n              <div className=\"d-flex flex-column gap-3\">\n                <div className=\"d-flex justify-content-start flex-wrap gap-3 posttopbtns\">\n                  {groupAcceptorNo && (\n                    <button\n                      type=\"button\"\n                      onClick={() => handleAccept(slug)}\n                      className=\"btn prbtn\"\n                    >\n                      {`${t(\"Accept\")}`}\n                    </button>\n                  )}\n                  {groupAcceptorNoCheck && (\n                    <button type=\"button\" className=\"btn prbtn nh\">\n                      {`${t(\"Accepted\")}`}\n                    </button>\n                  )}\n                  {!showhide && (\n                    <button\n                      type=\"button\"\n                      onClick={handleInterested}\n                      className={`btn prbtn ${\n                        isInterested ? \"interested_btn\" : \"\"\n                      }`}\n                    >\n                      {`${t(\"INTERESTED\")}`}\n                    </button>\n                  )}\n                  {groupAcceptorNo && (\n                    <button\n                      type=\"button\"\n                      onClick={() => handledeleteSentto(slug)}\n                      className=\"btn prbtn\"\n                    >\n                      {`${t(\"Delete\")}`}\n                    </button>\n                  )}\n\n                  {showhide && (\n                    <button\n                      type=\"button\"\n                      onClick={() => openPopup1(groupId)}\n                      className=\"btn sebtn\"\n                    >\n                      {`${t(\"invite_a_member\")}`}\n                    </button>\n                  )}\n                  {/* {showhide && (\n                    <div className=\"d-flex justify-content-between posttopbtns\">\n                      <button type=\"button\" className=\"btn prbtn\">\n                        {`${t(\"save_changes\")}`}\n                      </button>\n                    </div>\n                  )} */}\n                  {showhide && (\n                    <div className=\"d-flex justify-content-between posttopbtns\">\n                      <button\n                        type=\"button\"\n                        onClick={() => open_DeleteAlert(groupId)}\n                        className=\"btn redbtn\"\n                      >\n                        {`${t(\"delete_group\")}`}\n                      </button>\n                    </div>\n                  )}\n                  {showhide && (\n                    <div className=\"d-flex justify-content-between posttopbtns\">\n                      <button\n                        type=\"button\"\n                        onClick={() => open_Edit()}\n                        className=\"btn sebtn\"\n                      >\n                        {`${t(\"edit_group\")}`}\n                      </button>\n                    </div>\n                  )}\n                </div>\n\n                <div className=\"detailbox d-flex flex-column gap-2\">\n                  <h3>{`${t(\"About\")}`}</h3>\n                  <p>{groupdetail.description}</p>\n                  {/* <div className=\"d-block vmore\">\n                    <Link to=\"/\">View More</Link>\n                  </div> */}\n                </div>\n\n                <div className=\"detailbox d-flex flex-column gap-2\">\n                  <h3>{`${t(\"LeftMenu_Members\")}`} </h3>\n                  <div className=\"d-flex flex-column gap-3 overflow-auto scroll_bar pb-4\">\n                    <div className=\"d-flex align-items-center w-100 gap-2\">\n                      {GroupDetailIntersted.length > 0 && (\n                        <span>{GroupDetailIntersted.length}</span>\n                      )}\n\n                      <p className=\"text1line\">\n                        {GroupDetailIntersted && GroupDetailIntersted.length > 0\n                          ? GroupDetailIntersted.map((member, index) => (\n                              <span key={member.uid}>\n                                <Link\n                                  to={`/friend/${member.uid}`}\n                                  target=\"_blank\"\n                                >\n                                  {member.username}\n                                </Link>\n                                {index !== GroupDetailIntersted.length - 1 &&\n                                  \", \"}\n                              </span>\n                            ))\n                          : \"\"}\n                      </p>\n                    </div>\n                    {GroupDetailIntersted && GroupDetailIntersted.length > 0 ? (\n                      <ul className=\"avimgs\">\n                        {GroupDetailIntersted.map((member, index) => (\n                          <li key={index}>\n                            <Link to={`/friend/${member.uid}`} target=\"_blank\">\n                              <img\n                                className=\"w-100 h-100\"\n                                src={\n                                  member.profile_image ||\n                                  require(\"../assets/images/thumb.jpg\")\n                                }\n                                alt=\"Profile\"\n                              />\n                            </Link>\n                          </li>\n                        ))}\n                      </ul>\n                    ) : (\n                      <p>{t(\"No_result_found\")}</p>\n                    )}\n                  </div>\n                  {/* <div className=\"d-block vmore\">\n                    <Link to=\"/\">View More</Link>\n                  </div> */}\n                </div>\n\n                <div className=\"detailbox d-flex flex-column gap-2\">\n                  <h3>{`${t(\"Media\")}`}</h3>\n                  <div className=\"row\">\n                    {groupView && validPosts.length > 0 ? (\n                      <div className=\"row gy-2\">\n                        {validPosts.map((post, index) =>\n                          post.file && typeof post.file === \"string\" ? (\n                            <div className=\"col-sm-3 col-md-6\" key={index}>\n                              <div className=\"memperson ofit\">\n                                <div className=\"overflow-hidden rounded-3 d-block\">\n                                  <MediaRenderer\n                                    url={post.file}\n                                    onClick={() => {\n                                      if (groupView) {\n                                        openPopupCommentBox(\n                                          post.id,\n                                          post.group_id,\n                                          index\n                                        );\n                                        showSlide(index + 1);\n                                      } else {\n                                        openModal(); // Call your function for opening the modal when groupView is false\n                                        showSlide(index + 1);\n                                      }\n                                    }}\n                                  />\n                                </div>\n                                <Link\n                                  to={`/friend/${post.uid}`}\n                                  className=\"goupmediatext\"\n                                  target=\"_blank\"\n                                >\n                                  {post.username}\n                                </Link>\n                              </div>\n                            </div>\n                          ) : null\n                        )}\n                      </div>\n                    ) : (\n                      <p>{`${t(\"No_available_media\")}`}</p>\n                    )}\n                  </div>\n\n                  {groupView &&\n                    validPosts.some(\n                      (post) =>\n                        post.file &&\n                        typeof post.file === \"string\" &&\n                        post.file.trim() !== \"\"\n                    ) && (\n                      <div className=\"d-block vmore\">\n                        <Link to={`/groupmedia/${slug}`}>{`${t(\n                          \"view_more\"\n                        )}`}</Link>\n                      </div>\n                    )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n      <GroupInviteFriend\n        isOpen1={isPopupOpen1}\n        onClose1={closePopup1}\n        friends={allyourgroupsUser}\n        LoginData={LoginData}\n        groupId={groupId}\n        groupdetail={groupdetail}\n        onInvitesSent={refreshFriendsList}\n      ></GroupInviteFriend>\n      <Createnewgrouppost\n        isOpen={isPopupOpen}\n        onClose={closePopup}\n        groupId={groupId}\n        LoginData={LoginData}\n        reSetPost={refreshPostComment}\n      ></Createnewgrouppost>\n      <AlertDelete\n        isOpen1={isPopupOpen_delete}\n        onClose1={closePopup_delete}\n        message={deleteMessage}\n        onReturnSent={refreshpopup}\n      ></AlertDelete>\n      <Editgroup\n        isOpen={editPage}\n        onClose={editPageClose}\n        LoginData={LoginData}\n        groupId={groupId}\n        groupdetail={groupdetail}\n      ></Editgroup>\n      {modalOpen && (\n        <div id=\"myModal\" className=\"modalgg\">\n          <span className=\"close cursor\" onClick={closeModal}>\n            &times;\n          </span>\n          <div className=\"modal-content\">\n            {validPosts.length > 0 ? (\n              validPosts.map((post, index) => (\n                <div\n                  className=\"mySlides\"\n                  style={{\n                    display: currentSlideIndex === index + 1 ? \"block\" : \"none\",\n                  }}\n                  key={index}\n                >\n                  <div className=\"numbertext\">\n                    {index + 1} / {validPosts.length}\n                  </div>\n\n                  {post.file &&\n                  typeof post.file === \"string\" &&\n                  post.file.match(/\\.(jpeg|jpg|gif|png|webp|bmp|svg)$/i) ? (\n                    <img src={post.file} alt=\"img\" />\n                  ) : post.file &&\n                    typeof post.file === \"string\" &&\n                    post.file.match(\n                      /\\.(mp4|mov|avi|mkv|webm|ogg|flv|3gp)$/i\n                    ) ? (\n                    <video controls alt=\"video\">\n                      <source src={post.file} type=\"video/mp4\" />\n                      {`${t(\"Your_browser_does\")}`}\n                    </video>\n                  ) : null}\n                </div>\n              ))\n            ) : (\n              <p>{`${t(\"No_available_media\")}`}</p>\n            )}\n\n            <a\n              className=\"prev\"\n              onClick={() => showSlide(currentSlideIndex - 1)}\n            >\n              &#10094;\n            </a>\n            <a\n              className=\"next\"\n              onClick={() => showSlide(currentSlideIndex + 1)}\n            >\n              &#10095;\n            </a>\n          </div>\n        </div>\n      )}\n\n      <GroupMediaLikeComment\n        isOpen1={isPopupOpen11}\n        onClose1={closePopup11}\n        GroupPostDataPopup={GroupPostDataPopup}\n        GrouppostCommentGet={GrouppostCommentGet}\n        getrefreshComment={getrefreshComment}\n        favSectionRefresh={favSectionRefresh}\n        gotoNext={gotoNext}\n        gotoprev={gotoprev}\n        validPosts={validPosts}\n      />\n    </>\n  );\n}\n"],"names":["Createnewgrouppost","_ref","isOpen","onClose","children","groupId","LoginData","reSetPost","description","setDescription","useState","image","setImage","error","setError","showPopSuccess","setShowPopSuccess","successPopMessage","setPopsuccessMessage","spinner","setspinner","restr_message","setrestr_message","fileType","setFileType","videoUrl","setVideoUrl","t","useTranslation","useEffect","savedLanguage","localStorage","getItem","console","log","i18n","language","changeLanguage","restrictedWords","isButtonDisabled","trim","_jsx","_Fragment","_jsxs","className","onClick","e","target","classList","contains","SuccessPop","message","style","fontSize","action","method","onSubmit","async","preventDefault","formData","FormData","append","id","res","axios","post","apiUrl","headers","Accept","status","data","setTimeout","err","response","request","rows","placeholder","value","onChange","inputValue","hasRestrictedWord","some","word","toLowerCase","includes","type","accept","name","event","file","files","isImage","startsWith","isVideo","size","src","URL","createObjectURL","alt","controls","height","BsCloudUpload","color","role","disabled","opacity","GroupPostComment","isGrouppost","Isgroupfav","commentSectionRefresh","getpostCommentrefresh","commentRefs","useRef","inputRef","commentInputs","setCommentInputs","Array","length","fill","showPopError","setShowPopError","errorPopMessage","setPoperrorMessage","isPopupOpen_delete","setisPopupOpen_delete","deleteMessage","setdeleteMessage","postId","setpostId","modalOpen","setModalOpen","currentSlideIndex","setCurrentSlideIndex","closeModal","setimage","imagess","restrictedStates","setRestrictedStates","comments","setComments","document","body","overflowY","ws","WebSocket","onmessage","receivedMessage","JSON","parse","close","formateTime","dateString","postDate","Date","isNaN","getTime","now","adjustedPostDate","osloPostTime","Intl","DateTimeFormat","timeZone","hour","minute","hour12","format","timeDiff","seconds","Math","floor","minutes","hours","days","weeks","months","years","handlePostComment","index","group_id","_commentInputs$index","commentText","currentWordCount","text","split","post_id","user_id","comment","prev","scrollToLastComment","showPicker","setShowPicker","handleKeyDown","key","addEventListener","removeEventListener","AlertDelete","isOpen1","onClose1","closePopup_delete","onReturnSent","handlegroupPostDelete","ErrorPop","map","_commentInputs$index3","_commentInputs$index4","Link","to","uid","profile_image","makeImagePrivate","require","username","date","title","handlegroupPostDeleteconfirm","padding","textAlign","minWidth","background","width","borderRadius","xmlns","viewBox","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","MediaRenderer","url","chat","postid","handleChangeHeart","fav","FaHeart","FaRegHeart","fav_count","comm","ref","el","current","comt_uid","comment_user_profile_image","comment_makeImagePrivate","comment_user_username","comment_date","toggleEmojiPicker","EmojiPicker","onEmojiClick","emojiObject","handleEmojiClick","inputEl","currentValue","startPos","selectionStart","endPos","selectionEnd","newValue","substring","emoji","focus","handleCommentChange","onKeyDown","_commentInputs$index2","display","GroupInviteFriend","friends","groupdetail","onInvitesSent","selectedFriends","setSelectedFriends","invMessage","setinvMessage","friendIds","friend","handleCheckboxChange","userId","prevSelected","filter","checked","Editgroup","setName","makeImageUse","setMakeImageUse","errorMessage","setErrorMessage","selectedFile","setSelectedFile","previewImage","setPreviewImage","makePrivateUse","setmakePrivateUse","GroupData","setGroupData","window","location","replace","slug","reload","required","GroupMediaLikeComment","GroupPostDataPopup","GrouppostCommentGet","getrefreshComment","favSectionRefresh","gotoNext","gotoprev","validPosts","input","setInput","chatEndRef","isparamVl","setparamVl","storedUsername","userLogin","UserPhotoCommets","setUserPhotoCommets","UserPopupData","setUserPopupData","PopupData","setPopupData","handlePostSubmit","scrollIntoView","behavior","deletePost","zIndex","FaChevronRight","FaChevronLeft","handleChangeHeartPopup","total_favorite","total_comments","position","top","prevMessage","Singlegroup","navigate","useNavigate","AllfriendId","setAllfriendId","Allcheckgroupmember","setAllcheckgroupmember","isPopupOpen_newpost","setIsPopupOpen_newpost","isPopupOpen","setIsPopupOpen","isPopupOpen1","setIsPopupOpen1","setLoginData","setgroupId","setgroupdetail","showhide","setshowhide","groupView","setgroupView","groupAcceptorNo","setgroupAcceptorNo","groupAccepted","setgroupAccepted","groupAcceptorNoCheck","setgroupAcceptorNoCheck","isInterested","setIsInterested","GroupDetailIntersted","setGroupDetailIntersted","setGrouppost","allyourgroupsUser","setallyourgroupsUser","Isslug","setSlug","editPage","seteditPage","useParams","GroupCommentpopupPostId","setGroupCommentpopupPostId","UsercheckAccept","undefined","getDetails","get_GroupdetailallIntersted","getpostComment","getuserGroupIntersted","getAllfriends","friendUserIds","apiUrl2","results","respo","group","getuserGroupView","checkfrd","group_status","invite_status","userIdsWithSelf","user_ids","getallYourgroupsUser","groups","openPopup","deleteGroup","deleteev","idd","showSlide","isPopupOpen11","setIsPopupOpen11","setGroupPostDataPopup","setGrouppostCommentGet","popupgroupindex","setpopupgroupindex","currentIndexPopup","setCurrentIndexPopup","openPopupCommentBox","GrouppostComment","Headertwo","cursor","iconphoto","handleAccept","handledeleteSentto","openPopup1","member","closePopup1","refreshFriendsList","closePopup","refreshPostComment","editPageClose","match","closePopup11","prevIndex","newIndex"],"sourceRoot":""}